{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: \"Behavior\",\n  data() {\n    return {\n      checkTimeChart: null,\n      workHoursChart: null,\n      webCategoryChart: null,\n      serverAccessChart: null,\n      networkFlowChart: null,\n      emailFrequencyChart: null,\n      loginSuccessChart: null,\n      tcpProtocolChart: null,\n      selectedDepartment: \"研发1部\",\n      webVisitTimeRange: \"workHours\",\n      selectedDate: \"2017-11-01\",\n      departments: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\n      pickerOptions: {\n        disabledDate(time) {\n          // 只允许选择2017年11月的日期\n          const start = new Date(\"2017-11-01\");\n          const end = new Date(\"2017-11-30\");\n          return time.getTime() < start || time.getTime() > end;\n        }\n      }\n    };\n  },\n  mounted() {\n    this.initCheckTimeChart();\n    this.initWorkHoursChart();\n    this.initWebCategoryChart();\n    this.initServerAccessChart();\n    this.initNetworkFlowChart();\n    this.initEmailFrequencyChart();\n    this.initLoginSuccessChart();\n    this.initTcpProtocolChart();\n\n    // 监听窗口大小变化，调整图表大小\n    window.addEventListener(\"resize\", this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  },\n  watch: {\n    selectedDepartment() {\n      this.updateCheckTimeChart();\n    },\n    webVisitTimeRange() {\n      this.updateWebCategoryChart();\n    },\n    selectedDate() {\n      this.updateNetworkFlowChart();\n    }\n  },\n  methods: {\n    handleResize() {\n      this.checkTimeChart && this.checkTimeChart.resize();\n      this.workHoursChart && this.workHoursChart.resize();\n      this.webCategoryChart && this.webCategoryChart.resize();\n      this.serverAccessChart && this.serverAccessChart.resize();\n      this.networkFlowChart && this.networkFlowChart.resize();\n      this.emailFrequencyChart && this.emailFrequencyChart.resize();\n      this.loginSuccessChart && this.loginSuccessChart.resize();\n      this.tcpProtocolChart && this.tcpProtocolChart.resize();\n    },\n    initCheckTimeChart() {\n      this.checkTimeChart = this.$echarts.init(document.getElementById(\"checkTimeChart\"));\n      this.updateCheckTimeChart();\n    },\n    updateCheckTimeChart() {\n      // 模拟不同部门的数据\n      let data = [];\n      if (this.selectedDepartment === \"研发1部\") {\n        data = [{\n          value: [0, 5, \"7:00-7:30\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 35, \"7:30-8:00\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 45, \"8:00-8:30\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 10, \"8:30-9:00\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 5, \"9:00以后\"],\n          name: \"上班打卡\"\n        }, {\n          value: [1, 10, \"17:00-18:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 35, \"18:00-19:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 30, \"19:00-20:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 20, \"20:00-21:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 5, \"21:00以后\"],\n          name: \"下班打卡\"\n        }];\n      } else if (this.selectedDepartment === \"研发2部\") {\n        data = [{\n          value: [0, 8, \"7:00-7:30\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 30, \"7:30-8:00\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 50, \"8:00-8:30\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 10, \"8:30-9:00\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 2, \"9:00以后\"],\n          name: \"上班打卡\"\n        }, {\n          value: [1, 5, \"17:00-18:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 30, \"18:00-19:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 40, \"19:00-20:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 20, \"20:00-21:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 5, \"21:00以后\"],\n          name: \"下班打卡\"\n        }];\n      } else if (this.selectedDepartment === \"财务部\") {\n        data = [{\n          value: [0, 5, \"7:00-7:30\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 10, \"7:30-8:00\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 70, \"8:00-8:30\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 15, \"8:30-9:00\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 0, \"9:00以后\"],\n          name: \"上班打卡\"\n        }, {\n          value: [1, 15, \"17:00-18:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 70, \"18:00-19:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 15, \"19:00-20:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 0, \"20:00-21:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 0, \"21:00以后\"],\n          name: \"下班打卡\"\n        }];\n      } else {\n        // 其他部门的默认数据\n        data = [{\n          value: [0, 10, \"7:00-7:30\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 25, \"7:30-8:00\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 50, \"8:00-8:30\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 15, \"8:30-9:00\"],\n          name: \"上班打卡\"\n        }, {\n          value: [0, 0, \"9:00以后\"],\n          name: \"上班打卡\"\n        }, {\n          value: [1, 20, \"17:00-18:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 40, \"18:00-19:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 25, \"19:00-20:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 10, \"20:00-21:00\"],\n          name: \"下班打卡\"\n        }, {\n          value: [1, 5, \"21:00以后\"],\n          name: \"下班打卡\"\n        }];\n      }\n      const option = {\n        title: {\n          text: \"员工上下班时间分布\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter: function (params) {\n            return `${params.name}: ${params.data.name}<br />时间段: ${params.data.value[2]}<br />人数: ${params.data.value[1]}人`;\n          }\n        },\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: 30,\n          top: 80,\n          containLabel: true\n        },\n        xAxis: [{\n          type: \"category\",\n          data: [\"上班打卡\", \"下班打卡\"],\n          axisLabel: {\n            interval: 0\n          }\n        }],\n        yAxis: [{\n          type: \"value\",\n          name: \"人数\"\n        }],\n        series: [{\n          name: \"打卡时间\",\n          type: \"scatter\",\n          data: data,\n          symbolSize: function (val) {\n            return val[1] * 0.8;\n          },\n          itemStyle: {\n            color: function (params) {\n              // 上班打卡用蓝色，下班打卡用橙色\n              return params.data.value[0] === 0 ? \"#409EFF\" : \"#FF9800\";\n            }\n          },\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowColor: \"rgba(0, 0, 0, 0.3)\"\n            }\n          }\n        }]\n      };\n      this.checkTimeChart.setOption(option);\n    },\n    initWorkHoursChart() {\n      this.workHoursChart = this.$echarts.init(document.getElementById(\"workHoursChart\"));\n      const option = {\n        title: {\n          text: \"员工工作时长分布\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        legend: {\n          data: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          data: [\"<8小时\", \"8-9小时\", \"9-10小时\", \"10-11小时\", \"11-12小时\", \">12小时\"]\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"人数占比(%)\"\n        },\n        series: [{\n          name: \"研发1部\",\n          type: \"bar\",\n          data: [5, 15, 30, 25, 15, 10]\n        }, {\n          name: \"研发2部\",\n          type: \"bar\",\n          data: [3, 12, 25, 30, 20, 10]\n        }, {\n          name: \"研发3部\",\n          type: \"bar\",\n          data: [4, 14, 28, 26, 18, 10]\n        }, {\n          name: \"人力资源部\",\n          type: \"bar\",\n          data: [0, 20, 40, 30, 10, 0]\n        }, {\n          name: \"财务部\",\n          type: \"bar\",\n          data: [0, 25, 45, 30, 0, 0]\n        }]\n      };\n      this.workHoursChart.setOption(option);\n    },\n    initWebCategoryChart() {\n      this.webCategoryChart = this.$echarts.init(document.getElementById(\"webCategoryChart\"));\n      this.updateWebCategoryChart();\n    },\n    updateWebCategoryChart() {\n      // 根据选择的时间范围提供不同的数据\n      let data = [];\n      if (this.webVisitTimeRange === \"workHours\") {\n        data = [{\n          value: 40,\n          name: \"工作相关网站\"\n        }, {\n          value: 20,\n          name: \"搜索引擎\"\n        }, {\n          value: 15,\n          name: \"技术社区\"\n        }, {\n          value: 10,\n          name: \"在线文档\"\n        }, {\n          value: 8,\n          name: \"新闻媒体\"\n        }, {\n          value: 5,\n          name: \"社交网站\"\n        }, {\n          value: 2,\n          name: \"娱乐网站\"\n        }];\n      } else if (this.webVisitTimeRange === \"afterHours\") {\n        data = [{\n          value: 15,\n          name: \"工作相关网站\"\n        }, {\n          value: 25,\n          name: \"搜索引擎\"\n        }, {\n          value: 10,\n          name: \"技术社区\"\n        }, {\n          value: 5,\n          name: \"在线文档\"\n        }, {\n          value: 15,\n          name: \"新闻媒体\"\n        }, {\n          value: 15,\n          name: \"社交网站\"\n        }, {\n          value: 15,\n          name: \"娱乐网站\"\n        }];\n      } else {\n        data = [{\n          value: 30,\n          name: \"工作相关网站\"\n        }, {\n          value: 22,\n          name: \"搜索引擎\"\n        }, {\n          value: 13,\n          name: \"技术社区\"\n        }, {\n          value: 8,\n          name: \"在线文档\"\n        }, {\n          value: 10,\n          name: \"新闻媒体\"\n        }, {\n          value: 9,\n          name: \"社交网站\"\n        }, {\n          value: 8,\n          name: \"娱乐网站\"\n        }];\n      }\n      const option = {\n        title: {\n          text: \"网页访问类别分布\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n        },\n        legend: {\n          orient: \"vertical\",\n          left: 10,\n          top: 30,\n          data: data.map(item => item.name)\n        },\n        series: [{\n          name: \"访问类别\",\n          type: \"pie\",\n          radius: [\"50%\", \"70%\"],\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            position: \"center\"\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: \"18\",\n              fontWeight: \"bold\"\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: data\n        }]\n      };\n      this.webCategoryChart.setOption(option);\n    },\n    initServerAccessChart() {\n      this.serverAccessChart = this.$echarts.init(document.getElementById(\"serverAccessChart\"));\n      const option = {\n        title: {\n          text: \"服务器/数据库访问频率\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        legend: {\n          data: [\"SSH登录\", \"FTP传输\", \"MySQL访问\", \"MongoDB访问\", \"PostgreSQL访问\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"value\",\n          name: \"每日平均访问次数\"\n        },\n        yAxis: {\n          type: \"category\",\n          data: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"]\n        },\n        series: [{\n          name: \"SSH登录\",\n          type: \"bar\",\n          stack: \"总量\",\n          emphasis: {\n            focus: \"series\"\n          },\n          data: [120, 132, 101, 34, 30]\n        }, {\n          name: \"FTP传输\",\n          type: \"bar\",\n          stack: \"总量\",\n          emphasis: {\n            focus: \"series\"\n          },\n          data: [220, 182, 191, 34, 29]\n        }, {\n          name: \"MySQL访问\",\n          type: \"bar\",\n          stack: \"总量\",\n          emphasis: {\n            focus: \"series\"\n          },\n          data: [150, 232, 201, 54, 190]\n        }, {\n          name: \"MongoDB访问\",\n          type: \"bar\",\n          stack: \"总量\",\n          emphasis: {\n            focus: \"series\"\n          },\n          data: [98, 77, 101, 12, 15]\n        }, {\n          name: \"PostgreSQL访问\",\n          type: \"bar\",\n          stack: \"总量\",\n          emphasis: {\n            focus: \"series\"\n          },\n          data: [80, 102, 90, 20, 30]\n        }]\n      };\n      this.serverAccessChart.setOption(option);\n    },\n    initNetworkFlowChart() {\n      this.networkFlowChart = this.$echarts.init(document.getElementById(\"networkFlowChart\"));\n      this.updateNetworkFlowChart();\n    },\n    updateNetworkFlowChart() {\n      // 24小时的时间点\n      const hours = [];\n      for (let i = 0; i < 24; i++) {\n        hours.push(i + \":00\");\n      }\n\n      // 模拟的网络流量数据\n      const upData = [30, 20, 15, 10, 8, 5, 15, 45, 80, 90, 95, 85, 90, 95, 100, 90, 85, 75, 65, 55, 45, 35, 25, 20];\n      const downData = [25, 15, 10, 5, 3, 2, 10, 55, 100, 120, 125, 115, 120, 130, 140, 120, 110, 100, 80, 60, 50, 40, 30, 25];\n\n      // 生成参考线数据以更好地标识工作时间\n      const markArea = [[{\n        name: \"工作时间\",\n        xAxis: \"8:00\",\n        itemStyle: {\n          color: \"rgba(0, 250, 0, 0.05)\"\n        }\n      }, {\n        xAxis: \"18:00\"\n      }], [{\n        name: \"非工作时间（异常）\",\n        xAxis: \"0:00\",\n        itemStyle: {\n          color: \"rgba(250, 0, 0, 0.05)\"\n        }\n      }, {\n        xAxis: \"6:00\"\n      }], [{\n        name: \"非工作时间（异常）\",\n        xAxis: \"22:00\",\n        itemStyle: {\n          color: \"rgba(250, 0, 0, 0.05)\"\n        }\n      }, {\n        xAxis: \"24:00\"\n      }]];\n      const option = {\n        title: {\n          text: \"网络流量时序分析\",\n          subtext: `日期: ${this.selectedDate}`,\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          },\n          formatter: function (params) {\n            let result = params[0].axisValue + \"<br/>\";\n            params.forEach(param => {\n              result += param.marker + \" \" + param.seriesName + \": \" + param.value + \" MB<br/>\";\n            });\n            return result;\n          }\n        },\n        legend: {\n          data: [\"上行流量\", \"下行流量\"],\n          top: 30\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            dataZoom: {\n              yAxisIndex: \"none\"\n            },\n            dataView: {\n              readOnly: false\n            },\n            magicType: {\n              type: [\"line\", \"bar\", \"stack\"]\n            },\n            restore: {},\n            saveAsImage: {}\n          }\n        },\n        dataZoom: [{\n          type: \"inside\",\n          start: 0,\n          end: 100\n        }, {\n          start: 0,\n          end: 100\n        }],\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"15%\",\n          top: 90,\n          containLabel: true\n        },\n        xAxis: [{\n          type: \"category\",\n          boundaryGap: false,\n          data: hours,\n          axisLine: {\n            lineStyle: {\n              color: \"#666\"\n            }\n          },\n          axisLabel: {\n            color: \"#666\",\n            formatter: \"{value}\"\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              type: \"dashed\",\n              color: \"rgba(0,0,0,0.1)\"\n            }\n          }\n        }],\n        yAxis: [{\n          type: \"value\",\n          name: \"流量(MB)\",\n          min: 0,\n          max: 180,\n          interval: 30,\n          axisLabel: {\n            formatter: \"{value} MB\",\n            color: \"#666\"\n          },\n          nameTextStyle: {\n            color: \"#666\",\n            fontSize: 12,\n            padding: [0, 0, 0, 5]\n          },\n          splitLine: {\n            lineStyle: {\n              type: \"dashed\",\n              color: \"rgba(0,0,0,0.1)\"\n            }\n          }\n        }],\n        visualMap: {\n          show: false,\n          pieces: [{\n            gt: 0,\n            lte: 30,\n            color: \"#93CE07\"\n          }, {\n            gt: 30,\n            lte: 60,\n            color: \"#FBDB0F\"\n          }, {\n            gt: 60,\n            lte: 90,\n            color: \"#FC7D02\"\n          }, {\n            gt: 90,\n            color: \"#DD1C77\"\n          }],\n          seriesIndex: 0\n        },\n        series: [{\n          name: \"上行流量\",\n          type: \"line\",\n          stack: \"总量\",\n          smooth: true,\n          lineStyle: {\n            width: 2,\n            color: \"#5470C6\"\n          },\n          showSymbol: false,\n          areaStyle: {\n            opacity: 0.8,\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: \"rgba(84,112,198,0.8)\"\n              }, {\n                offset: 1,\n                color: \"rgba(84,112,198,0.1)\"\n              }]\n            }\n          },\n          emphasis: {\n            focus: \"series\"\n          },\n          data: upData,\n          markArea: {\n            data: markArea\n          },\n          markPoint: {\n            data: [{\n              type: \"max\",\n              name: \"最大值\"\n            }, {\n              name: \"异常时段\",\n              coord: [2, 15],\n              value: \"疑似异常流量\",\n              itemStyle: {\n                color: \"#F56C6C\"\n              }\n            }]\n          },\n          markLine: {\n            silent: true,\n            lineStyle: {\n              color: \"#333\"\n            },\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }]\n          }\n        }, {\n          name: \"下行流量\",\n          type: \"line\",\n          stack: \"总量\",\n          smooth: true,\n          lineStyle: {\n            width: 2,\n            color: \"#91CC75\"\n          },\n          showSymbol: false,\n          areaStyle: {\n            opacity: 0.8,\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: \"rgba(145,204,117,0.8)\"\n              }, {\n                offset: 1,\n                color: \"rgba(145,204,117,0.1)\"\n              }]\n            }\n          },\n          emphasis: {\n            focus: \"series\"\n          },\n          data: downData,\n          markPoint: {\n            data: [{\n              type: \"max\",\n              name: \"最大值\"\n            }, {\n              name: \"异常峰值\",\n              coord: [14, 140],\n              value: \"异常下载\",\n              itemStyle: {\n                color: \"#F56C6C\"\n              }\n            }]\n          },\n          markLine: {\n            silent: true,\n            lineStyle: {\n              color: \"#333\"\n            },\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }]\n          }\n        }]\n      };\n      this.networkFlowChart.setOption(option);\n\n      // 添加点击事件\n      this.networkFlowChart.on(\"click\", params => {\n        if (params.componentType === \"markPoint\") {\n          this.$notify({\n            title: \"异常流量警告\",\n            message: `在${params.name}时段检测到异常网络流量，可能存在数据泄露风险`,\n            type: \"warning\",\n            duration: 5000\n          });\n        }\n      });\n    },\n    initEmailFrequencyChart() {\n      this.emailFrequencyChart = this.$echarts.init(document.getElementById(\"emailFrequencyChart\"));\n      const option = {\n        title: {\n          text: \"邮件通信频率\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          data: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"]\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"每天平均邮件数\"\n        },\n        series: [{\n          name: \"发送邮件\",\n          type: \"bar\",\n          data: [32, 38, 30, 25, 22]\n        }, {\n          name: \"接收邮件\",\n          type: \"bar\",\n          data: [45, 50, 42, 38, 30]\n        }]\n      };\n      this.emailFrequencyChart.setOption(option);\n    },\n    initLoginSuccessChart() {\n      this.loginSuccessChart = this.$echarts.init(document.getElementById(\"loginSuccessChart\"));\n      const option = {\n        title: {\n          text: \"各部门登录成功率\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b}: {c}%\"\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          data: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"]\n        },\n        yAxis: {\n          type: \"value\",\n          min: 80,\n          max: 100,\n          name: \"成功率(%)\"\n        },\n        series: [{\n          name: \"登录成功率\",\n          type: \"bar\",\n          barWidth: \"60%\",\n          data: [98.5, 97.2, 98.1, 99.2, 96.8],\n          itemStyle: {\n            color: function (params) {\n              // 根据值的大小定义不同的颜色\n              if (params.value > 98) {\n                return \"#67C23A\"; // 高成功率为绿色\n              } else if (params.value > 97) {\n                return \"#E6A23C\"; // 中等成功率为黄色\n              } else {\n                return \"#F56C6C\"; // 低成功率为红色\n              }\n            }\n          }\n        }]\n      };\n      this.loginSuccessChart.setOption(option);\n    },\n    initTcpProtocolChart() {\n      this.tcpProtocolChart = this.$echarts.init(document.getElementById(\"tcpProtocolChart\"));\n      const option = {\n        title: {\n          text: \"TCP协议使用分布\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{a} <br/>{b}: {c} ({d}%)\"\n        },\n        legend: {\n          orient: \"vertical\",\n          left: 10,\n          top: 30,\n          data: [\"HTTP/HTTPS\", \"SSH/SFTP\", \"FTP\", \"SMTP\", \"MySQL\", \"MongoDB\", \"PostgreSQL\", \"其他\"]\n        },\n        series: [{\n          name: \"协议使用\",\n          type: \"pie\",\n          radius: \"55%\",\n          center: [\"50%\", \"60%\"],\n          data: [{\n            value: 45,\n            name: \"HTTP/HTTPS\"\n          }, {\n            value: 15,\n            name: \"SSH/SFTP\"\n          }, {\n            value: 10,\n            name: \"FTP\"\n          }, {\n            value: 8,\n            name: \"SMTP\"\n          }, {\n            value: 7,\n            name: \"MySQL\"\n          }, {\n            value: 6,\n            name: \"MongoDB\"\n          }, {\n            value: 5,\n            name: \"PostgreSQL\"\n          }, {\n            value: 4,\n            name: \"其他\"\n          }],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: \"rgba(0, 0, 0, 0.5)\"\n            }\n          }\n        }]\n      };\n      this.tcpProtocolChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["name","data","checkTimeChart","workHoursChart","webCategoryChart","serverAccessChart","networkFlowChart","emailFrequencyChart","loginSuccessChart","tcpProtocolChart","selectedDepartment","webVisitTimeRange","selectedDate","departments","pickerOptions","disabledDate","time","start","Date","end","getTime","mounted","initCheckTimeChart","initWorkHoursChart","initWebCategoryChart","initServerAccessChart","initNetworkFlowChart","initEmailFrequencyChart","initLoginSuccessChart","initTcpProtocolChart","window","addEventListener","handleResize","beforeDestroy","removeEventListener","watch","updateCheckTimeChart","updateWebCategoryChart","updateNetworkFlowChart","methods","resize","$echarts","init","document","getElementById","value","option","title","text","left","tooltip","trigger","formatter","params","grid","right","bottom","top","containLabel","xAxis","type","axisLabel","interval","yAxis","series","symbolSize","val","itemStyle","color","emphasis","shadowBlur","shadowColor","setOption","axisPointer","legend","orient","map","item","radius","avoidLabelOverlap","label","show","position","fontSize","fontWeight","labelLine","stack","focus","hours","i","push","upData","downData","markArea","subtext","backgroundColor","result","axisValue","forEach","param","marker","seriesName","toolbox","feature","dataZoom","yAxisIndex","dataView","readOnly","magicType","restore","saveAsImage","boundaryGap","axisLine","lineStyle","splitLine","min","max","nameTextStyle","padding","visualMap","pieces","gt","lte","seriesIndex","smooth","width","showSymbol","areaStyle","opacity","x","y","x2","y2","colorStops","offset","markPoint","coord","markLine","silent","on","componentType","$notify","message","duration","barWidth","center","shadowOffsetX"],"sources":["src/views/Behavior.vue"],"sourcesContent":["<template>\r\n  <div class=\"behavior\">\r\n    <el-row>\r\n      <el-col :span=\"24\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>员工日常工作行为分析</span>\r\n            <el-tooltip\r\n              class=\"item\"\r\n              effect=\"dark\"\r\n              content=\"分析各部门员工的正常工作模式和行为特征\"\r\n              placement=\"top\"\r\n            >\r\n              <i class=\"el-icon-question\" style=\"margin-left: 10px\"></i>\r\n            </el-tooltip>\r\n          </div>\r\n          <p>\r\n            通过对监控数据的分析，我们总结了公司不同部门员工的工作行为模式，包括工作时间、网络活动、邮件沟通等。\r\n          </p>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>员工打卡时间分析</span>\r\n            <el-select\r\n              v-model=\"selectedDepartment\"\r\n              size=\"mini\"\r\n              style=\"float: right; margin-right: 10px\"\r\n            >\r\n              <el-option\r\n                v-for=\"dept in departments\"\r\n                :key=\"dept\"\r\n                :label=\"dept\"\r\n                :value=\"dept\"\r\n              ></el-option>\r\n            </el-select>\r\n          </div>\r\n          <div id=\"checkTimeChart\" style=\"width: 100%; height: 350px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>员工工作时长分布</span>\r\n          </div>\r\n          <div id=\"workHoursChart\" style=\"width: 100%; height: 350px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>员工网页访问类别分析</span>\r\n            <el-radio-group\r\n              v-model=\"webVisitTimeRange\"\r\n              size=\"mini\"\r\n              style=\"float: right; margin-right: 10px\"\r\n            >\r\n              <el-radio-button label=\"workHours\">工作时间</el-radio-button>\r\n              <el-radio-button label=\"afterHours\">非工作时间</el-radio-button>\r\n              <el-radio-button label=\"allDay\">全天</el-radio-button>\r\n            </el-radio-group>\r\n          </div>\r\n          <div id=\"webCategoryChart\" style=\"width: 100%; height: 350px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>服务器/数据库访问频率</span>\r\n          </div>\r\n          <div id=\"serverAccessChart\" style=\"width: 100%; height: 350px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row style=\"margin-top: 20px\">\r\n      <el-col :span=\"24\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>网络流量时序分析</span>\r\n            <el-date-picker\r\n              v-model=\"selectedDate\"\r\n              type=\"date\"\r\n              format=\"yyyy-MM-dd\"\r\n              value-format=\"yyyy-MM-dd\"\r\n              placeholder=\"选择日期\"\r\n              :picker-options=\"pickerOptions\"\r\n              style=\"float: right; margin-right: 10px; width: 150px\"\r\n              size=\"mini\"\r\n            >\r\n            </el-date-picker>\r\n          </div>\r\n          <div id=\"networkFlowChart\" style=\"width: 100%; height: 400px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px\">\r\n      <el-col :span=\"8\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>邮件通信频率（按部门）</span>\r\n          </div>\r\n          <div\r\n            id=\"emailFrequencyChart\"\r\n            style=\"width: 100%; height: 300px\"\r\n          ></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>登录成功率</span>\r\n          </div>\r\n          <div id=\"loginSuccessChart\" style=\"width: 100%; height: 300px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"8\">\r\n        <el-card class=\"box-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>TCP协议使用分布</span>\r\n          </div>\r\n          <div id=\"tcpProtocolChart\" style=\"width: 100%; height: 300px\"></div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Behavior\",\r\n  data() {\r\n    return {\r\n      checkTimeChart: null,\r\n      workHoursChart: null,\r\n      webCategoryChart: null,\r\n      serverAccessChart: null,\r\n      networkFlowChart: null,\r\n      emailFrequencyChart: null,\r\n      loginSuccessChart: null,\r\n      tcpProtocolChart: null,\r\n      selectedDepartment: \"研发1部\",\r\n      webVisitTimeRange: \"workHours\",\r\n      selectedDate: \"2017-11-01\",\r\n      departments: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\r\n      pickerOptions: {\r\n        disabledDate(time) {\r\n          // 只允许选择2017年11月的日期\r\n          const start = new Date(\"2017-11-01\");\r\n          const end = new Date(\"2017-11-30\");\r\n          return time.getTime() < start || time.getTime() > end;\r\n        },\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initCheckTimeChart();\r\n    this.initWorkHoursChart();\r\n    this.initWebCategoryChart();\r\n    this.initServerAccessChart();\r\n    this.initNetworkFlowChart();\r\n    this.initEmailFrequencyChart();\r\n    this.initLoginSuccessChart();\r\n    this.initTcpProtocolChart();\r\n\r\n    // 监听窗口大小变化，调整图表大小\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  },\r\n  watch: {\r\n    selectedDepartment() {\r\n      this.updateCheckTimeChart();\r\n    },\r\n    webVisitTimeRange() {\r\n      this.updateWebCategoryChart();\r\n    },\r\n    selectedDate() {\r\n      this.updateNetworkFlowChart();\r\n    },\r\n  },\r\n  methods: {\r\n    handleResize() {\r\n      this.checkTimeChart && this.checkTimeChart.resize();\r\n      this.workHoursChart && this.workHoursChart.resize();\r\n      this.webCategoryChart && this.webCategoryChart.resize();\r\n      this.serverAccessChart && this.serverAccessChart.resize();\r\n      this.networkFlowChart && this.networkFlowChart.resize();\r\n      this.emailFrequencyChart && this.emailFrequencyChart.resize();\r\n      this.loginSuccessChart && this.loginSuccessChart.resize();\r\n      this.tcpProtocolChart && this.tcpProtocolChart.resize();\r\n    },\r\n    initCheckTimeChart() {\r\n      this.checkTimeChart = this.$echarts.init(\r\n        document.getElementById(\"checkTimeChart\")\r\n      );\r\n      this.updateCheckTimeChart();\r\n    },\r\n    updateCheckTimeChart() {\r\n      // 模拟不同部门的数据\r\n      let data = [];\r\n      if (this.selectedDepartment === \"研发1部\") {\r\n        data = [\r\n          { value: [0, 5, \"7:00-7:30\"], name: \"上班打卡\" },\r\n          { value: [0, 35, \"7:30-8:00\"], name: \"上班打卡\" },\r\n          { value: [0, 45, \"8:00-8:30\"], name: \"上班打卡\" },\r\n          { value: [0, 10, \"8:30-9:00\"], name: \"上班打卡\" },\r\n          { value: [0, 5, \"9:00以后\"], name: \"上班打卡\" },\r\n          { value: [1, 10, \"17:00-18:00\"], name: \"下班打卡\" },\r\n          { value: [1, 35, \"18:00-19:00\"], name: \"下班打卡\" },\r\n          { value: [1, 30, \"19:00-20:00\"], name: \"下班打卡\" },\r\n          { value: [1, 20, \"20:00-21:00\"], name: \"下班打卡\" },\r\n          { value: [1, 5, \"21:00以后\"], name: \"下班打卡\" },\r\n        ];\r\n      } else if (this.selectedDepartment === \"研发2部\") {\r\n        data = [\r\n          { value: [0, 8, \"7:00-7:30\"], name: \"上班打卡\" },\r\n          { value: [0, 30, \"7:30-8:00\"], name: \"上班打卡\" },\r\n          { value: [0, 50, \"8:00-8:30\"], name: \"上班打卡\" },\r\n          { value: [0, 10, \"8:30-9:00\"], name: \"上班打卡\" },\r\n          { value: [0, 2, \"9:00以后\"], name: \"上班打卡\" },\r\n          { value: [1, 5, \"17:00-18:00\"], name: \"下班打卡\" },\r\n          { value: [1, 30, \"18:00-19:00\"], name: \"下班打卡\" },\r\n          { value: [1, 40, \"19:00-20:00\"], name: \"下班打卡\" },\r\n          { value: [1, 20, \"20:00-21:00\"], name: \"下班打卡\" },\r\n          { value: [1, 5, \"21:00以后\"], name: \"下班打卡\" },\r\n        ];\r\n      } else if (this.selectedDepartment === \"财务部\") {\r\n        data = [\r\n          { value: [0, 5, \"7:00-7:30\"], name: \"上班打卡\" },\r\n          { value: [0, 10, \"7:30-8:00\"], name: \"上班打卡\" },\r\n          { value: [0, 70, \"8:00-8:30\"], name: \"上班打卡\" },\r\n          { value: [0, 15, \"8:30-9:00\"], name: \"上班打卡\" },\r\n          { value: [0, 0, \"9:00以后\"], name: \"上班打卡\" },\r\n          { value: [1, 15, \"17:00-18:00\"], name: \"下班打卡\" },\r\n          { value: [1, 70, \"18:00-19:00\"], name: \"下班打卡\" },\r\n          { value: [1, 15, \"19:00-20:00\"], name: \"下班打卡\" },\r\n          { value: [1, 0, \"20:00-21:00\"], name: \"下班打卡\" },\r\n          { value: [1, 0, \"21:00以后\"], name: \"下班打卡\" },\r\n        ];\r\n      } else {\r\n        // 其他部门的默认数据\r\n        data = [\r\n          { value: [0, 10, \"7:00-7:30\"], name: \"上班打卡\" },\r\n          { value: [0, 25, \"7:30-8:00\"], name: \"上班打卡\" },\r\n          { value: [0, 50, \"8:00-8:30\"], name: \"上班打卡\" },\r\n          { value: [0, 15, \"8:30-9:00\"], name: \"上班打卡\" },\r\n          { value: [0, 0, \"9:00以后\"], name: \"上班打卡\" },\r\n          { value: [1, 20, \"17:00-18:00\"], name: \"下班打卡\" },\r\n          { value: [1, 40, \"18:00-19:00\"], name: \"下班打卡\" },\r\n          { value: [1, 25, \"19:00-20:00\"], name: \"下班打卡\" },\r\n          { value: [1, 10, \"20:00-21:00\"], name: \"下班打卡\" },\r\n          { value: [1, 5, \"21:00以后\"], name: \"下班打卡\" },\r\n        ];\r\n      }\r\n\r\n      const option = {\r\n        title: {\r\n          text: \"员工上下班时间分布\",\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: function (params) {\r\n            return `${params.name}: ${params.data.name}<br />时间段: ${params.data.value[2]}<br />人数: ${params.data.value[1]}人`;\r\n          },\r\n        },\r\n        grid: {\r\n          left: 10,\r\n          right: 10,\r\n          bottom: 30,\r\n          top: 80,\r\n          containLabel: true,\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: \"category\",\r\n            data: [\"上班打卡\", \"下班打卡\"],\r\n            axisLabel: {\r\n              interval: 0,\r\n            },\r\n          },\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: \"value\",\r\n            name: \"人数\",\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            name: \"打卡时间\",\r\n            type: \"scatter\",\r\n            data: data,\r\n            symbolSize: function (val) {\r\n              return val[1] * 0.8;\r\n            },\r\n            itemStyle: {\r\n              color: function (params) {\r\n                // 上班打卡用蓝色，下班打卡用橙色\r\n                return params.data.value[0] === 0 ? \"#409EFF\" : \"#FF9800\";\r\n              },\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowColor: \"rgba(0, 0, 0, 0.3)\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.checkTimeChart.setOption(option);\r\n    },\r\n    initWorkHoursChart() {\r\n      this.workHoursChart = this.$echarts.init(\r\n        document.getElementById(\"workHoursChart\")\r\n      );\r\n\r\n      const option = {\r\n        title: {\r\n          text: \"员工工作时长分布\",\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\r\n          top: 30,\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          top: 80,\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: [\r\n            \"<8小时\",\r\n            \"8-9小时\",\r\n            \"9-10小时\",\r\n            \"10-11小时\",\r\n            \"11-12小时\",\r\n            \">12小时\",\r\n          ],\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          name: \"人数占比(%)\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"研发1部\",\r\n            type: \"bar\",\r\n            data: [5, 15, 30, 25, 15, 10],\r\n          },\r\n          {\r\n            name: \"研发2部\",\r\n            type: \"bar\",\r\n            data: [3, 12, 25, 30, 20, 10],\r\n          },\r\n          {\r\n            name: \"研发3部\",\r\n            type: \"bar\",\r\n            data: [4, 14, 28, 26, 18, 10],\r\n          },\r\n          {\r\n            name: \"人力资源部\",\r\n            type: \"bar\",\r\n            data: [0, 20, 40, 30, 10, 0],\r\n          },\r\n          {\r\n            name: \"财务部\",\r\n            type: \"bar\",\r\n            data: [0, 25, 45, 30, 0, 0],\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.workHoursChart.setOption(option);\r\n    },\r\n    initWebCategoryChart() {\r\n      this.webCategoryChart = this.$echarts.init(\r\n        document.getElementById(\"webCategoryChart\")\r\n      );\r\n      this.updateWebCategoryChart();\r\n    },\r\n    updateWebCategoryChart() {\r\n      // 根据选择的时间范围提供不同的数据\r\n      let data = [];\r\n      if (this.webVisitTimeRange === \"workHours\") {\r\n        data = [\r\n          { value: 40, name: \"工作相关网站\" },\r\n          { value: 20, name: \"搜索引擎\" },\r\n          { value: 15, name: \"技术社区\" },\r\n          { value: 10, name: \"在线文档\" },\r\n          { value: 8, name: \"新闻媒体\" },\r\n          { value: 5, name: \"社交网站\" },\r\n          { value: 2, name: \"娱乐网站\" },\r\n        ];\r\n      } else if (this.webVisitTimeRange === \"afterHours\") {\r\n        data = [\r\n          { value: 15, name: \"工作相关网站\" },\r\n          { value: 25, name: \"搜索引擎\" },\r\n          { value: 10, name: \"技术社区\" },\r\n          { value: 5, name: \"在线文档\" },\r\n          { value: 15, name: \"新闻媒体\" },\r\n          { value: 15, name: \"社交网站\" },\r\n          { value: 15, name: \"娱乐网站\" },\r\n        ];\r\n      } else {\r\n        data = [\r\n          { value: 30, name: \"工作相关网站\" },\r\n          { value: 22, name: \"搜索引擎\" },\r\n          { value: 13, name: \"技术社区\" },\r\n          { value: 8, name: \"在线文档\" },\r\n          { value: 10, name: \"新闻媒体\" },\r\n          { value: 9, name: \"社交网站\" },\r\n          { value: 8, name: \"娱乐网站\" },\r\n        ];\r\n      }\r\n\r\n      const option = {\r\n        title: {\r\n          text: \"网页访问类别分布\",\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b}: {c} ({d}%)\",\r\n        },\r\n        legend: {\r\n          orient: \"vertical\",\r\n          left: 10,\r\n          top: 30,\r\n          data: data.map((item) => item.name),\r\n        },\r\n        series: [\r\n          {\r\n            name: \"访问类别\",\r\n            type: \"pie\",\r\n            radius: [\"50%\", \"70%\"],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: false,\r\n              position: \"center\",\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: \"18\",\r\n                fontWeight: \"bold\",\r\n              },\r\n            },\r\n            labelLine: {\r\n              show: false,\r\n            },\r\n            data: data,\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.webCategoryChart.setOption(option);\r\n    },\r\n    initServerAccessChart() {\r\n      this.serverAccessChart = this.$echarts.init(\r\n        document.getElementById(\"serverAccessChart\")\r\n      );\r\n\r\n      const option = {\r\n        title: {\r\n          text: \"服务器/数据库访问频率\",\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\r\n            \"SSH登录\",\r\n            \"FTP传输\",\r\n            \"MySQL访问\",\r\n            \"MongoDB访问\",\r\n            \"PostgreSQL访问\",\r\n          ],\r\n          top: 30,\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          top: 80,\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          name: \"每日平均访问次数\",\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\r\n        },\r\n        series: [\r\n          {\r\n            name: \"SSH登录\",\r\n            type: \"bar\",\r\n            stack: \"总量\",\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [120, 132, 101, 34, 30],\r\n          },\r\n          {\r\n            name: \"FTP传输\",\r\n            type: \"bar\",\r\n            stack: \"总量\",\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [220, 182, 191, 34, 29],\r\n          },\r\n          {\r\n            name: \"MySQL访问\",\r\n            type: \"bar\",\r\n            stack: \"总量\",\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [150, 232, 201, 54, 190],\r\n          },\r\n          {\r\n            name: \"MongoDB访问\",\r\n            type: \"bar\",\r\n            stack: \"总量\",\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [98, 77, 101, 12, 15],\r\n          },\r\n          {\r\n            name: \"PostgreSQL访问\",\r\n            type: \"bar\",\r\n            stack: \"总量\",\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [80, 102, 90, 20, 30],\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.serverAccessChart.setOption(option);\r\n    },\r\n    initNetworkFlowChart() {\r\n      this.networkFlowChart = this.$echarts.init(\r\n        document.getElementById(\"networkFlowChart\")\r\n      );\r\n      this.updateNetworkFlowChart();\r\n    },\r\n    updateNetworkFlowChart() {\r\n      // 24小时的时间点\r\n      const hours = [];\r\n      for (let i = 0; i < 24; i++) {\r\n        hours.push(i + \":00\");\r\n      }\r\n\r\n      // 模拟的网络流量数据\r\n      const upData = [\r\n        30, 20, 15, 10, 8, 5, 15, 45, 80, 90, 95, 85, 90, 95, 100, 90, 85, 75,\r\n        65, 55, 45, 35, 25, 20,\r\n      ];\r\n      const downData = [\r\n        25, 15, 10, 5, 3, 2, 10, 55, 100, 120, 125, 115, 120, 130, 140, 120,\r\n        110, 100, 80, 60, 50, 40, 30, 25,\r\n      ];\r\n\r\n      // 生成参考线数据以更好地标识工作时间\r\n      const markArea = [\r\n        [\r\n          {\r\n            name: \"工作时间\",\r\n            xAxis: \"8:00\",\r\n            itemStyle: {\r\n              color: \"rgba(0, 250, 0, 0.05)\",\r\n            },\r\n          },\r\n          {\r\n            xAxis: \"18:00\",\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            name: \"非工作时间（异常）\",\r\n            xAxis: \"0:00\",\r\n            itemStyle: {\r\n              color: \"rgba(250, 0, 0, 0.05)\",\r\n            },\r\n          },\r\n          {\r\n            xAxis: \"6:00\",\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            name: \"非工作时间（异常）\",\r\n            xAxis: \"22:00\",\r\n            itemStyle: {\r\n              color: \"rgba(250, 0, 0, 0.05)\",\r\n            },\r\n          },\r\n          {\r\n            xAxis: \"24:00\",\r\n          },\r\n        ],\r\n      ];\r\n\r\n      const option = {\r\n        title: {\r\n          text: \"网络流量时序分析\",\r\n          subtext: `日期: ${this.selectedDate}`,\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"cross\",\r\n            label: {\r\n              backgroundColor: \"#6a7985\",\r\n            },\r\n          },\r\n          formatter: function (params) {\r\n            let result = params[0].axisValue + \"<br/>\";\r\n            params.forEach((param) => {\r\n              result +=\r\n                param.marker +\r\n                \" \" +\r\n                param.seriesName +\r\n                \": \" +\r\n                param.value +\r\n                \" MB<br/>\";\r\n            });\r\n            return result;\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"上行流量\", \"下行流量\"],\r\n          top: 30,\r\n        },\r\n        toolbox: {\r\n          show: true,\r\n          feature: {\r\n            dataZoom: {\r\n              yAxisIndex: \"none\",\r\n            },\r\n            dataView: { readOnly: false },\r\n            magicType: { type: [\"line\", \"bar\", \"stack\"] },\r\n            restore: {},\r\n            saveAsImage: {},\r\n          },\r\n        },\r\n        dataZoom: [\r\n          {\r\n            type: \"inside\",\r\n            start: 0,\r\n            end: 100,\r\n          },\r\n          {\r\n            start: 0,\r\n            end: 100,\r\n          },\r\n        ],\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"15%\",\r\n          top: 90,\r\n          containLabel: true,\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: \"category\",\r\n            boundaryGap: false,\r\n            data: hours,\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: \"#666\",\r\n              },\r\n            },\r\n            axisLabel: {\r\n              color: \"#666\",\r\n              formatter: \"{value}\",\r\n            },\r\n            splitLine: {\r\n              show: true,\r\n              lineStyle: {\r\n                type: \"dashed\",\r\n                color: \"rgba(0,0,0,0.1)\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: \"value\",\r\n            name: \"流量(MB)\",\r\n            min: 0,\r\n            max: 180,\r\n            interval: 30,\r\n            axisLabel: {\r\n              formatter: \"{value} MB\",\r\n              color: \"#666\",\r\n            },\r\n            nameTextStyle: {\r\n              color: \"#666\",\r\n              fontSize: 12,\r\n              padding: [0, 0, 0, 5],\r\n            },\r\n            splitLine: {\r\n              lineStyle: {\r\n                type: \"dashed\",\r\n                color: \"rgba(0,0,0,0.1)\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        visualMap: {\r\n          show: false,\r\n          pieces: [\r\n            {\r\n              gt: 0,\r\n              lte: 30,\r\n              color: \"#93CE07\",\r\n            },\r\n            {\r\n              gt: 30,\r\n              lte: 60,\r\n              color: \"#FBDB0F\",\r\n            },\r\n            {\r\n              gt: 60,\r\n              lte: 90,\r\n              color: \"#FC7D02\",\r\n            },\r\n            {\r\n              gt: 90,\r\n              color: \"#DD1C77\",\r\n            },\r\n          ],\r\n          seriesIndex: 0,\r\n        },\r\n        series: [\r\n          {\r\n            name: \"上行流量\",\r\n            type: \"line\",\r\n            stack: \"总量\",\r\n            smooth: true,\r\n            lineStyle: {\r\n              width: 2,\r\n              color: \"#5470C6\",\r\n            },\r\n            showSymbol: false,\r\n            areaStyle: {\r\n              opacity: 0.8,\r\n              color: {\r\n                type: \"linear\",\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"rgba(84,112,198,0.8)\",\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: \"rgba(84,112,198,0.1)\",\r\n                  },\r\n                ],\r\n              },\r\n            },\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: upData,\r\n            markArea: {\r\n              data: markArea,\r\n            },\r\n            markPoint: {\r\n              data: [\r\n                { type: \"max\", name: \"最大值\" },\r\n                {\r\n                  name: \"异常时段\",\r\n                  coord: [2, 15],\r\n                  value: \"疑似异常流量\",\r\n                  itemStyle: {\r\n                    color: \"#F56C6C\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            markLine: {\r\n              silent: true,\r\n              lineStyle: {\r\n                color: \"#333\",\r\n              },\r\n              data: [\r\n                {\r\n                  type: \"average\",\r\n                  name: \"平均值\",\r\n                },\r\n              ],\r\n            },\r\n          },\r\n          {\r\n            name: \"下行流量\",\r\n            type: \"line\",\r\n            stack: \"总量\",\r\n            smooth: true,\r\n            lineStyle: {\r\n              width: 2,\r\n              color: \"#91CC75\",\r\n            },\r\n            showSymbol: false,\r\n            areaStyle: {\r\n              opacity: 0.8,\r\n              color: {\r\n                type: \"linear\",\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"rgba(145,204,117,0.8)\",\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: \"rgba(145,204,117,0.1)\",\r\n                  },\r\n                ],\r\n              },\r\n            },\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: downData,\r\n            markPoint: {\r\n              data: [\r\n                { type: \"max\", name: \"最大值\" },\r\n                {\r\n                  name: \"异常峰值\",\r\n                  coord: [14, 140],\r\n                  value: \"异常下载\",\r\n                  itemStyle: {\r\n                    color: \"#F56C6C\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n            markLine: {\r\n              silent: true,\r\n              lineStyle: {\r\n                color: \"#333\",\r\n              },\r\n              data: [\r\n                {\r\n                  type: \"average\",\r\n                  name: \"平均值\",\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.networkFlowChart.setOption(option);\r\n\r\n      // 添加点击事件\r\n      this.networkFlowChart.on(\"click\", (params) => {\r\n        if (params.componentType === \"markPoint\") {\r\n          this.$notify({\r\n            title: \"异常流量警告\",\r\n            message: `在${params.name}时段检测到异常网络流量，可能存在数据泄露风险`,\r\n            type: \"warning\",\r\n            duration: 5000,\r\n          });\r\n        }\r\n      });\r\n    },\r\n    initEmailFrequencyChart() {\r\n      this.emailFrequencyChart = this.$echarts.init(\r\n        document.getElementById(\"emailFrequencyChart\")\r\n      );\r\n\r\n      const option = {\r\n        title: {\r\n          text: \"邮件通信频率\",\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          top: 80,\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          name: \"每天平均邮件数\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"发送邮件\",\r\n            type: \"bar\",\r\n            data: [32, 38, 30, 25, 22],\r\n          },\r\n          {\r\n            name: \"接收邮件\",\r\n            type: \"bar\",\r\n            data: [45, 50, 42, 38, 30],\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.emailFrequencyChart.setOption(option);\r\n    },\r\n    initLoginSuccessChart() {\r\n      this.loginSuccessChart = this.$echarts.init(\r\n        document.getElementById(\"loginSuccessChart\")\r\n      );\r\n\r\n      const option = {\r\n        title: {\r\n          text: \"各部门登录成功率\",\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b}: {c}%\",\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          top: 80,\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          data: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          min: 80,\r\n          max: 100,\r\n          name: \"成功率(%)\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"登录成功率\",\r\n            type: \"bar\",\r\n            barWidth: \"60%\",\r\n            data: [98.5, 97.2, 98.1, 99.2, 96.8],\r\n            itemStyle: {\r\n              color: function (params) {\r\n                // 根据值的大小定义不同的颜色\r\n                if (params.value > 98) {\r\n                  return \"#67C23A\"; // 高成功率为绿色\r\n                } else if (params.value > 97) {\r\n                  return \"#E6A23C\"; // 中等成功率为黄色\r\n                } else {\r\n                  return \"#F56C6C\"; // 低成功率为红色\r\n                }\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.loginSuccessChart.setOption(option);\r\n    },\r\n    initTcpProtocolChart() {\r\n      this.tcpProtocolChart = this.$echarts.init(\r\n        document.getElementById(\"tcpProtocolChart\")\r\n      );\r\n\r\n      const option = {\r\n        title: {\r\n          text: \"TCP协议使用分布\",\r\n          left: \"center\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a} <br/>{b}: {c} ({d}%)\",\r\n        },\r\n        legend: {\r\n          orient: \"vertical\",\r\n          left: 10,\r\n          top: 30,\r\n          data: [\r\n            \"HTTP/HTTPS\",\r\n            \"SSH/SFTP\",\r\n            \"FTP\",\r\n            \"SMTP\",\r\n            \"MySQL\",\r\n            \"MongoDB\",\r\n            \"PostgreSQL\",\r\n            \"其他\",\r\n          ],\r\n        },\r\n        series: [\r\n          {\r\n            name: \"协议使用\",\r\n            type: \"pie\",\r\n            radius: \"55%\",\r\n            center: [\"50%\", \"60%\"],\r\n            data: [\r\n              { value: 45, name: \"HTTP/HTTPS\" },\r\n              { value: 15, name: \"SSH/SFTP\" },\r\n              { value: 10, name: \"FTP\" },\r\n              { value: 8, name: \"SMTP\" },\r\n              { value: 7, name: \"MySQL\" },\r\n              { value: 6, name: \"MongoDB\" },\r\n              { value: 5, name: \"PostgreSQL\" },\r\n              { value: 4, name: \"其他\" },\r\n            ],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      this.tcpProtocolChart.setOption(option);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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D,IAAA;QACA;QACA+D,MAAA,GACA;UACAhE,IAAA;UACA4D,IAAA;UACA0B,KAAA;UACAjB,QAAA;YACAkB,KAAA;UACA;UACAtF,IAAA;QACA,GACA;UACAD,IAAA;UACA4D,IAAA;UACA0B,KAAA;UACAjB,QAAA;YACAkB,KAAA;UACA;UACAtF,IAAA;QACA,GACA;UACAD,IAAA;UACA4D,IAAA;UACA0B,KAAA;UACAjB,QAAA;YACAkB,KAAA;UACA;UACAtF,IAAA;QACA,GACA;UACAD,IAAA;UACA4D,IAAA;UACA0B,KAAA;UACAjB,QAAA;YACAkB,KAAA;UACA;UACAtF,IAAA;QACA,GACA;UACAD,IAAA;UACA4D,IAAA;UACA0B,KAAA;UACAjB,QAAA;YACAkB,KAAA;UACA;UACAtF,IAAA;QACA;MAEA;MAEA,KAAAI,iBAAA,CAAAmE,SAAA,CAAA1B,MAAA;IACA;IACApB,qBAAA;MACA,KAAApB,gBAAA,QAAAmC,QAAA,CAAAC,IAAA,CACAC,QAAA,CAAAC,cAAA,oBACA;MACA,KAAAN,sBAAA;IACA;IACAA,uBAAA;MACA;MACA,MAAAkD,KAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,OAAAA,CAAA;QACAD,KAAA,CAAAE,IAAA,CAAAD,CAAA;MACA;;MAEA;MACA,MAAAE,MAAA,IACA,uEACA,uBACA;MACA,MAAAC,QAAA,IACA,qEACA,iCACA;;MAEA;MACA,MAAAC,QAAA,IACA,CACA;QACA7F,IAAA;QACA2D,KAAA;QACAQ,SAAA;UACAC,KAAA;QACA;MACA,GACA;QACAT,KAAA;MACA,EACA,EACA,CACA;QACA3D,IAAA;QACA2D,KAAA;QACAQ,SAAA;UACAC,KAAA;QACA;MACA,GACA;QACAT,KAAA;MACA,EACA,EACA,CACA;QACA3D,IAAA;QACA2D,KAAA;QACAQ,SAAA;UACAC,KAAA;QACA;MACA,GACA;QACAT,KAAA;MACA,EACA,CACA;MAEA,MAAAb,MAAA;QACAC,KAAA;UACAC,IAAA;UACA8C,OAAA,cAAAlF,YAAA;UACAqC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAsB,WAAA;YACAb,IAAA;YACAoB,KAAA;cACAe,eAAA;YACA;UACA;UACA3C,SAAA,WAAAA,CAAAC,MAAA;YACA,IAAA2C,MAAA,GAAA3C,MAAA,IAAA4C,SAAA;YACA5C,MAAA,CAAA6C,OAAA,CAAAC,KAAA;cACAH,MAAA,IACAG,KAAA,CAAAC,MAAA,GACA,MACAD,KAAA,CAAAE,UAAA,GACA,OACAF,KAAA,CAAAtD,KAAA,GACA;YACA;YACA,OAAAmD,MAAA;UACA;QACA;QACAtB,MAAA;UACAzE,IAAA;UACAwD,GAAA;QACA;QACA6C,OAAA;UACArB,IAAA;UACAsB,OAAA;YACAC,QAAA;cACAC,UAAA;YACA;YACAC,QAAA;cAAAC,QAAA;YAAA;YACAC,SAAA;cAAAhD,IAAA;YAAA;YACAiD,OAAA;YACAC,WAAA;UACA;QACA;QACAN,QAAA,GACA;UACA5C,IAAA;UACA3C,KAAA;UACAE,GAAA;QACA,GACA;UACAF,KAAA;UACAE,GAAA;QACA,EACA;QACAmC,IAAA;UACAL,IAAA;UACAM,KAAA;UACAC,MAAA;UACAC,GAAA;UACAC,YAAA;QACA;QACAC,KAAA,GACA;UACAC,IAAA;UACAmD,WAAA;UACA9G,IAAA,EAAAuF,KAAA;UACAwB,QAAA;YACAC,SAAA;cACA7C,KAAA;YACA;UACA;UACAP,SAAA;YACAO,KAAA;YACAhB,SAAA;UACA;UACA8D,SAAA;YACAjC,IAAA;YACAgC,SAAA;cACArD,IAAA;cACAQ,KAAA;YACA;UACA;QACA,EACA;QACAL,KAAA,GACA;UACAH,IAAA;UACA5D,IAAA;UACAmH,GAAA;UACAC,GAAA;UACAtD,QAAA;UACAD,SAAA;YACAT,SAAA;YACAgB,KAAA;UACA;UACAiD,aAAA;YACAjD,KAAA;YACAe,QAAA;YACAmC,OAAA;UACA;UACAJ,SAAA;YACAD,SAAA;cACArD,IAAA;cACAQ,KAAA;YACA;UACA;QACA,EACA;QACAmD,SAAA;UACAtC,IAAA;UACAuC,MAAA,GACA;YACAC,EAAA;YACAC,GAAA;YACAtD,KAAA;UACA,GACA;YACAqD,EAAA;YACAC,GAAA;YACAtD,KAAA;UACA,GACA;YACAqD,EAAA;YACAC,GAAA;YACAtD,KAAA;UACA,GACA;YACAqD,EAAA;YACArD,KAAA;UACA,EACA;UACAuD,WAAA;QACA;QACA3D,MAAA,GACA;UACAhE,IAAA;UACA4D,IAAA;UACA0B,KAAA;UACAsC,MAAA;UACAX,SAAA;YACAY,KAAA;YACAzD,KAAA;UACA;UACA0D,UAAA;UACAC,SAAA;YACAC,OAAA;YACA5D,KAAA;cACAR,IAAA;cACAqE,CAAA;cACAC,CAAA;cACAC,EAAA;cACAC,EAAA;cACAC,UAAA,GACA;gBACAC,MAAA;gBACAlE,KAAA;cACA,GACA;gBACAkE,MAAA;gBACAlE,KAAA;cACA;YAEA;UACA;UACAC,QAAA;YACAkB,KAAA;UACA;UACAtF,IAAA,EAAA0F,MAAA;UACAE,QAAA;YACA5F,IAAA,EAAA4F;UACA;UACA0C,SAAA;YACAtI,IAAA,GACA;cAAA2D,IAAA;cAAA5D,IAAA;YAAA,GACA;cACAA,IAAA;cACAwI,KAAA;cACA3F,KAAA;cACAsB,SAAA;gBACAC,KAAA;cACA;YACA;UAEA;UACAqE,QAAA;YACAC,MAAA;YACAzB,SAAA;cACA7C,KAAA;YACA;YACAnE,IAAA,GACA;cACA2D,IAAA;cACA5D,IAAA;YACA;UAEA;QACA,GACA;UACAA,IAAA;UACA4D,IAAA;UACA0B,KAAA;UACAsC,MAAA;UACAX,SAAA;YACAY,KAAA;YACAzD,KAAA;UACA;UACA0D,UAAA;UACAC,SAAA;YACAC,OAAA;YACA5D,KAAA;cACAR,IAAA;cACAqE,CAAA;cACAC,CAAA;cACAC,EAAA;cACAC,EAAA;cACAC,UAAA,GACA;gBACAC,MAAA;gBACAlE,KAAA;cACA,GACA;gBACAkE,MAAA;gBACAlE,KAAA;cACA;YAEA;UACA;UACAC,QAAA;YACAkB,KAAA;UACA;UACAtF,IAAA,EAAA2F,QAAA;UACA2C,SAAA;YACAtI,IAAA,GACA;cAAA2D,IAAA;cAAA5D,IAAA;YAAA,GACA;cACAA,IAAA;cACAwI,KAAA;cACA3F,KAAA;cACAsB,SAAA;gB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
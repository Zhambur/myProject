{"ast":null,"code":"import * as echarts from 'echarts/lib/echarts';\nimport './WordCloudSeries';\nimport './WordCloudView';\nimport wordCloudLayoutHelper from './layout';\nif (!wordCloudLayoutHelper.isSupported) {\n  throw new Error('Sorry your browser not support wordCloud');\n}\n\n// https://github.com/timdream/wordcloud2.js/blob/c236bee60436e048949f9becc4f0f67bd832dc5c/index.js#L233\nfunction updateCanvasMask(maskCanvas) {\n  var ctx = maskCanvas.getContext('2d');\n  var imageData = ctx.getImageData(0, 0, maskCanvas.width, maskCanvas.height);\n  var newImageData = ctx.createImageData(imageData);\n  var toneSum = 0;\n  var toneCnt = 0;\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    var alpha = imageData.data[i + 3];\n    if (alpha > 128) {\n      var tone = imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2];\n      toneSum += tone;\n      ++toneCnt;\n    }\n  }\n  var threshold = toneSum / toneCnt;\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    var tone = imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2];\n    var alpha = imageData.data[i + 3];\n    if (alpha < 128 || tone > threshold) {\n      // Area not to draw\n      newImageData.data[i] = 0;\n      newImageData.data[i + 1] = 0;\n      newImageData.data[i + 2] = 0;\n      newImageData.data[i + 3] = 0;\n    } else {\n      // Area to draw\n      // The color must be same with backgroundColor\n      newImageData.data[i] = 255;\n      newImageData.data[i + 1] = 255;\n      newImageData.data[i + 2] = 255;\n      newImageData.data[i + 3] = 255;\n    }\n  }\n  ctx.putImageData(newImageData, 0, 0);\n}\necharts.registerLayout(function (ecModel, api) {\n  ecModel.eachSeriesByType('wordCloud', function (seriesModel) {\n    var gridRect = echarts.helper.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var keepAspect = seriesModel.get('keepAspect');\n    var maskImage = seriesModel.get('maskImage');\n    var ratio = maskImage ? maskImage.width / maskImage.height : 1;\n    keepAspect && adjustRectAspect(gridRect, ratio);\n    var data = seriesModel.getData();\n    var canvas = document.createElement('canvas');\n    canvas.width = gridRect.width;\n    canvas.height = gridRect.height;\n    var ctx = canvas.getContext('2d');\n    if (maskImage) {\n      try {\n        ctx.drawImage(maskImage, 0, 0, canvas.width, canvas.height);\n        updateCanvasMask(canvas);\n      } catch (e) {\n        console.error('Invalid mask image');\n        console.error(e.toString());\n      }\n    }\n    var sizeRange = seriesModel.get('sizeRange');\n    var rotationRange = seriesModel.get('rotationRange');\n    var valueExtent = data.getDataExtent('value');\n    var DEGREE_TO_RAD = Math.PI / 180;\n    var gridSize = seriesModel.get('gridSize');\n    wordCloudLayoutHelper(canvas, {\n      list: data.mapArray('value', function (value, idx) {\n        var itemModel = data.getItemModel(idx);\n        return [data.getName(idx), itemModel.get('textStyle.fontSize', true) || echarts.number.linearMap(value, valueExtent, sizeRange), idx];\n      }).sort(function (a, b) {\n        // Sort from large to small in case there is no more room for more words\n        return b[1] - a[1];\n      }),\n      fontFamily: seriesModel.get('textStyle.fontFamily') || seriesModel.get('emphasis.textStyle.fontFamily') || ecModel.get('textStyle.fontFamily'),\n      fontWeight: seriesModel.get('textStyle.fontWeight') || seriesModel.get('emphasis.textStyle.fontWeight') || ecModel.get('textStyle.fontWeight'),\n      gridSize: gridSize,\n      ellipticity: gridRect.height / gridRect.width,\n      minRotation: rotationRange[0] * DEGREE_TO_RAD,\n      maxRotation: rotationRange[1] * DEGREE_TO_RAD,\n      clearCanvas: !maskImage,\n      rotateRatio: 1,\n      rotationStep: seriesModel.get('rotationStep') * DEGREE_TO_RAD,\n      drawOutOfBound: seriesModel.get('drawOutOfBound'),\n      shrinkToFit: seriesModel.get('shrinkToFit'),\n      layoutAnimation: seriesModel.get('layoutAnimation'),\n      shuffle: false,\n      shape: seriesModel.get('shape')\n    });\n    function onWordCloudDrawn(e) {\n      var item = e.detail.item;\n      if (e.detail.drawn && seriesModel.layoutInstance.ondraw) {\n        e.detail.drawn.gx += gridRect.x / gridSize;\n        e.detail.drawn.gy += gridRect.y / gridSize;\n        seriesModel.layoutInstance.ondraw(item[0], item[1], item[2], e.detail.drawn);\n      }\n    }\n    canvas.addEventListener('wordclouddrawn', onWordCloudDrawn);\n    if (seriesModel.layoutInstance) {\n      // Dispose previous\n      seriesModel.layoutInstance.dispose();\n    }\n    seriesModel.layoutInstance = {\n      ondraw: null,\n      dispose: function () {\n        canvas.removeEventListener('wordclouddrawn', onWordCloudDrawn);\n        // Abort\n        canvas.addEventListener('wordclouddrawn', function (e) {\n          // Prevent default to cancle the event and stop the loop\n          e.preventDefault();\n        });\n      }\n    };\n  });\n});\necharts.registerPreprocessor(function (option) {\n  var series = (option || {}).series;\n  !echarts.util.isArray(series) && (series = series ? [series] : []);\n  var compats = ['shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n  echarts.util.each(series, function (seriesItem) {\n    if (seriesItem && seriesItem.type === 'wordCloud') {\n      var textStyle = seriesItem.textStyle || {};\n      compatTextStyle(textStyle.normal);\n      compatTextStyle(textStyle.emphasis);\n    }\n  });\n  function compatTextStyle(textStyle) {\n    textStyle && echarts.util.each(compats, function (key) {\n      if (textStyle.hasOwnProperty(key)) {\n        textStyle['text' + echarts.format.capitalFirst(key)] = textStyle[key];\n      }\n    });\n  }\n});\nfunction adjustRectAspect(gridRect, aspect) {\n  // var outerWidth = gridRect.width + gridRect.x * 2;\n  // var outerHeight = gridRect.height + gridRect.y * 2;\n  var width = gridRect.width;\n  var height = gridRect.height;\n  if (width > height * aspect) {\n    gridRect.x += (width - height * aspect) / 2;\n    gridRect.width = height * aspect;\n  } else {\n    gridRect.y += (height - width / aspect) / 2;\n    gridRect.height = width / aspect;\n  }\n}","map":{"version":3,"names":["echarts","wordCloudLayoutHelper","isSupported","Error","updateCanvasMask","maskCanvas","ctx","getContext","imageData","getImageData","width","height","newImageData","createImageData","toneSum","toneCnt","i","data","length","alpha","tone","threshold","putImageData","registerLayout","ecModel","api","eachSeriesByType","seriesModel","gridRect","helper","getLayoutRect","getBoxLayoutParams","getWidth","getHeight","keepAspect","get","maskImage","ratio","adjustRectAspect","getData","canvas","document","createElement","drawImage","e","console","error","toString","sizeRange","rotationRange","valueExtent","getDataExtent","DEGREE_TO_RAD","Math","PI","gridSize","list","mapArray","value","idx","itemModel","getItemModel","getName","number","linearMap","sort","a","b","fontFamily","fontWeight","ellipticity","minRotation","maxRotation","clearCanvas","rotateRatio","rotationStep","drawOutOfBound","shrinkToFit","layoutAnimation","shuffle","shape","onWordCloudDrawn","item","detail","drawn","layoutInstance","ondraw","gx","x","gy","y","addEventListener","dispose","removeEventListener","preventDefault","registerPreprocessor","option","series","util","isArray","compats","each","seriesItem","type","textStyle","compatTextStyle","normal","emphasis","key","hasOwnProperty","format","capitalFirst","aspect"],"sources":["E:/200_StudyArea/210_curricularStudy/216_junior_down/02_vis_tech/exp/myProject/node_modules/echarts-wordcloud/src/wordCloud.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\n\nimport './WordCloudSeries';\nimport './WordCloudView';\n\nimport wordCloudLayoutHelper from './layout';\n\nif (!wordCloudLayoutHelper.isSupported) {\n  throw new Error('Sorry your browser not support wordCloud');\n}\n\n// https://github.com/timdream/wordcloud2.js/blob/c236bee60436e048949f9becc4f0f67bd832dc5c/index.js#L233\nfunction updateCanvasMask(maskCanvas) {\n  var ctx = maskCanvas.getContext('2d');\n  var imageData = ctx.getImageData(0, 0, maskCanvas.width, maskCanvas.height);\n  var newImageData = ctx.createImageData(imageData);\n\n  var toneSum = 0;\n  var toneCnt = 0;\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    var alpha = imageData.data[i + 3];\n    if (alpha > 128) {\n      var tone =\n        imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2];\n      toneSum += tone;\n      ++toneCnt;\n    }\n  }\n  var threshold = toneSum / toneCnt;\n\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    var tone =\n      imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2];\n    var alpha = imageData.data[i + 3];\n\n    if (alpha < 128 || tone > threshold) {\n      // Area not to draw\n      newImageData.data[i] = 0;\n      newImageData.data[i + 1] = 0;\n      newImageData.data[i + 2] = 0;\n      newImageData.data[i + 3] = 0;\n    } else {\n      // Area to draw\n      // The color must be same with backgroundColor\n      newImageData.data[i] = 255;\n      newImageData.data[i + 1] = 255;\n      newImageData.data[i + 2] = 255;\n      newImageData.data[i + 3] = 255;\n    }\n  }\n\n  ctx.putImageData(newImageData, 0, 0);\n}\n\necharts.registerLayout(function (ecModel, api) {\n  ecModel.eachSeriesByType('wordCloud', function (seriesModel) {\n    var gridRect = echarts.helper.getLayoutRect(\n      seriesModel.getBoxLayoutParams(),\n      {\n        width: api.getWidth(),\n        height: api.getHeight()\n      }\n    );\n\n    var keepAspect = seriesModel.get('keepAspect');\n    var maskImage = seriesModel.get('maskImage');\n    var ratio = maskImage ? maskImage.width / maskImage.height : 1;\n    keepAspect && adjustRectAspect(gridRect, ratio);\n\n    var data = seriesModel.getData();\n\n    var canvas = document.createElement('canvas');\n    canvas.width = gridRect.width;\n    canvas.height = gridRect.height;\n\n    var ctx = canvas.getContext('2d');\n    if (maskImage) {\n      try {\n        ctx.drawImage(maskImage, 0, 0, canvas.width, canvas.height);\n        updateCanvasMask(canvas);\n      } catch (e) {\n        console.error('Invalid mask image');\n        console.error(e.toString());\n      }\n    }\n\n    var sizeRange = seriesModel.get('sizeRange');\n    var rotationRange = seriesModel.get('rotationRange');\n    var valueExtent = data.getDataExtent('value');\n\n    var DEGREE_TO_RAD = Math.PI / 180;\n    var gridSize = seriesModel.get('gridSize');\n    wordCloudLayoutHelper(canvas, {\n      list: data\n        .mapArray('value', function (value, idx) {\n          var itemModel = data.getItemModel(idx);\n          return [\n            data.getName(idx),\n            itemModel.get('textStyle.fontSize', true) ||\n              echarts.number.linearMap(value, valueExtent, sizeRange),\n            idx\n          ];\n        })\n        .sort(function (a, b) {\n          // Sort from large to small in case there is no more room for more words\n          return b[1] - a[1];\n        }),\n      fontFamily:\n        seriesModel.get('textStyle.fontFamily') ||\n        seriesModel.get('emphasis.textStyle.fontFamily') ||\n        ecModel.get('textStyle.fontFamily'),\n      fontWeight:\n        seriesModel.get('textStyle.fontWeight') ||\n        seriesModel.get('emphasis.textStyle.fontWeight') ||\n        ecModel.get('textStyle.fontWeight'),\n\n      gridSize: gridSize,\n\n      ellipticity: gridRect.height / gridRect.width,\n\n      minRotation: rotationRange[0] * DEGREE_TO_RAD,\n      maxRotation: rotationRange[1] * DEGREE_TO_RAD,\n\n      clearCanvas: !maskImage,\n\n      rotateRatio: 1,\n\n      rotationStep: seriesModel.get('rotationStep') * DEGREE_TO_RAD,\n\n      drawOutOfBound: seriesModel.get('drawOutOfBound'),\n      shrinkToFit: seriesModel.get('shrinkToFit'),\n\n      layoutAnimation: seriesModel.get('layoutAnimation'),\n\n      shuffle: false,\n\n      shape: seriesModel.get('shape')\n    });\n\n    function onWordCloudDrawn(e) {\n      var item = e.detail.item;\n      if (e.detail.drawn && seriesModel.layoutInstance.ondraw) {\n        e.detail.drawn.gx += gridRect.x / gridSize;\n        e.detail.drawn.gy += gridRect.y / gridSize;\n        seriesModel.layoutInstance.ondraw(\n          item[0],\n          item[1],\n          item[2],\n          e.detail.drawn\n        );\n      }\n    }\n\n    canvas.addEventListener('wordclouddrawn', onWordCloudDrawn);\n\n    if (seriesModel.layoutInstance) {\n      // Dispose previous\n      seriesModel.layoutInstance.dispose();\n    }\n\n    seriesModel.layoutInstance = {\n      ondraw: null,\n\n      dispose: function () {\n        canvas.removeEventListener('wordclouddrawn', onWordCloudDrawn);\n        // Abort\n        canvas.addEventListener('wordclouddrawn', function (e) {\n          // Prevent default to cancle the event and stop the loop\n          e.preventDefault();\n        });\n      }\n    };\n  });\n});\n\necharts.registerPreprocessor(function (option) {\n  var series = (option || {}).series;\n  !echarts.util.isArray(series) && (series = series ? [series] : []);\n\n  var compats = ['shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n\n  echarts.util.each(series, function (seriesItem) {\n    if (seriesItem && seriesItem.type === 'wordCloud') {\n      var textStyle = seriesItem.textStyle || {};\n\n      compatTextStyle(textStyle.normal);\n      compatTextStyle(textStyle.emphasis);\n    }\n  });\n\n  function compatTextStyle(textStyle) {\n    textStyle &&\n      echarts.util.each(compats, function (key) {\n        if (textStyle.hasOwnProperty(key)) {\n          textStyle['text' + echarts.format.capitalFirst(key)] = textStyle[key];\n        }\n      });\n  }\n});\n\nfunction adjustRectAspect(gridRect, aspect) {\n  // var outerWidth = gridRect.width + gridRect.x * 2;\n  // var outerHeight = gridRect.height + gridRect.y * 2;\n  var width = gridRect.width;\n  var height = gridRect.height;\n  if (width > height * aspect) {\n    gridRect.x += (width - height * aspect) / 2;\n    gridRect.width = height * aspect;\n  } else {\n    gridRect.y += (height - width / aspect) / 2;\n    gridRect.height = width / aspect;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
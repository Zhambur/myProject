{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nexport default {\n  name: \"Person\",\n  data() {\n    return {\n      // 图表实例\n      workTimeChart: null,\n      webVisitChart: null,\n      serverAccessChart: null,\n      emailActivityChart: null,\n      personEmailCloud: null,\n      // 选择和过滤相关数据\n      selectedDepartment: \"研发1部\",\n      selectedEmployee: \"\",\n      currentEmployee: null,\n      // 默认分析日期，后续可以扩展为日期选择\n      analysisDate: \"2017-11-30\",\n      showAnalysis: false,\n      activeTab: \"overview\",\n      hasAbnormalContent: false,\n      // 从CSV加载的原始数据\n      employeeEmailData: [],\n      // employeeLoginData: [], // 预留给登录数据\n      // employeeWeblogData: [], // 预留给网页访问数据\n\n      // 下拉选项数据\n      departments: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\n      employees: [{\n        id: \"1103\",\n        name: \"1103\",\n        department: \"研发2部\",\n        position: \"高级工程师\",\n        ip: \"10.64.105.110\",\n        email: \"1103@hightech.com\"\n      }, {\n        id: \"1152\",\n        name: \"1152\",\n        department: \"研发1部\",\n        position: \"工程师\",\n        ip: \"10.64.105.187\",\n        email: \"1152@hightech.com\"\n      }, {\n        id: \"1307\",\n        name: \"1307\",\n        department: \"研发3部\",\n        position: \"数据工程师\",\n        ip: \"10.64.105.9\",\n        email: \"1307@hightech.com\"\n      }, {\n        id: \"1388\",\n        name: \"1388\",\n        department: \"研发3部\",\n        position: \"软件工程师\",\n        ip: \"10.64.105.93\",\n        email: \"1388@hightech.com\"\n      }, {\n        id: \"1204\",\n        name: \"1204\",\n        department: \"研发2部\",\n        position: \"开发工程师\",\n        ip: \"10.64.105.116\",\n        email: \"1204@hightech.com\"\n      }, {\n        id: \"1060\",\n        name: \"1060\",\n        department: \"信息安全部\",\n        position: \"安全工程师\",\n        ip: \"10.64.105.82\",\n        email: \"1060@hightech.com\"\n      }, {\n        id: \"1087\",\n        name: \"1087\",\n        department: \"研发1部\",\n        position: \"开发工程师\",\n        ip: \"10.64.105.151\",\n        email: \"1087@hightech.com\"\n      }, {\n        id: \"1092\",\n        name: \"1092\",\n        department: \"研发2部\",\n        position: \"工程师\",\n        ip: \"10.64.105.230\",\n        email: \"1092@hightech.com\"\n      }],\n      // 统计数据\n      employeeDepartment: \"\",\n      emailCount: 0,\n      loginCount: 0,\n      // 将由login.csv数据更新\n      employeeOptions: [{\n        value: \"1103\",\n        label: \"工号1103 (研发2部)\"\n      }, {\n        value: \"1152\",\n        label: \"工号1152 (研发1部)\"\n      }, {\n        value: \"1307\",\n        label: \"工号1307 (研发3部)\"\n      }, {\n        value: \"1388\",\n        label: \"工号1388 (研发3部)\"\n      }, {\n        value: \"1204\",\n        label: \"工号1204 (研发2部)\"\n      }, {\n        value: \"1060\",\n        label: \"工号1060 (信息安全部)\"\n      }, {\n        value: \"1087\",\n        label: \"工号1087 (研发1部)\"\n      }, {\n        value: \"1092\",\n        label: \"工号1092 (研发2部)\"\n      }],\n      // 异常活动列表\n      abnormalActivities: [],\n      threatScore: 0,\n      threatAssessment: \"\",\n      threatScoreClass: \"normal\"\n    };\n  },\n  computed: {\n    employeeStats() {\n      if (!this.selectedEmployee) return [];\n\n      // 根据员工ID定制统计信息\n      const stats = [{\n        label: \"员工ID\",\n        value: this.selectedEmployee,\n        icon: \"el-icon-user-solid\",\n        color: \"#409EFF\"\n      }, {\n        label: \"所属部门\",\n        value: this.employeeDepartment,\n        icon: \"el-icon-office-building\",\n        color: \"#67C23A\"\n      }, {\n        label: \"邮件数量\",\n        value: this.emailCount,\n        icon: \"el-icon-message\",\n        color: \"#E6A23C\",\n        trend: {\n          type: this.getEmailTrendType(),\n          icon: this.getEmailTrendIcon(),\n          text: this.getEmailTrendText()\n        }\n      }, {\n        label: \"异常行为\",\n        value: this.abnormalActivities.length,\n        icon: \"el-icon-warning\",\n        color: this.abnormalActivities.length > 0 ? \"#F56C6C\" : \"#909399\"\n      }];\n      return stats;\n    }\n  },\n  mounted() {\n    window.addEventListener(\"resize\", this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  },\n  methods: {\n    async fetchCsvData(filePath) {\n      try {\n        const response = await fetch(filePath);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status} for ${filePath}`);\n        }\n        const text = await response.text();\n        const rows = text.split(\"\\\\n\").filter(row => row.trim() !== \"\");\n        if (rows.length < 2) return []; // Ensure there's a header and at least one data row\n\n        const header = rows[0].split(\",\").map(h => h.trim());\n        const data = rows.slice(1).map(row => {\n          const values = row.split(\",\");\n          let obj = {};\n          header.forEach((key, index) => {\n            obj[key] = values[index] ? values[index].trim() : \"\";\n          });\n          return obj;\n        });\n        return data;\n      } catch (error) {\n        console.error(\"Failed to fetch or parse CSV:\", error);\n        this.$message.error(`加载 ${filePath} 数据失败: ${error.message}`);\n        return [];\n      }\n    },\n    handleResize() {\n      this.workTimeChart && this.workTimeChart.resize();\n      this.webVisitChart && this.webVisitChart.resize();\n      this.serverAccessChart && this.serverAccessChart.resize();\n      this.emailActivityChart && this.emailActivityChart.resize();\n      this.personEmailCloud && this.personEmailCloud.resize();\n    },\n    async handleEmployeeChange(employeeId) {\n      this.currentEmployee = this.employees.find(emp => emp.id === employeeId);\n      this.selectedEmployee = employeeId;\n      this.employeeDepartment = this.currentEmployee.department;\n\n      // 加载实际数据\n      const emailFilePath = `/ITD-2018 Data Set/${this.analysisDate}/email.csv`;\n      const rawEmailData = await this.fetchCsvData(emailFilePath);\n\n      // 按员工ID筛选邮件数据\n      this.employeeEmailData = rawEmailData.filter(email => email.sender === employeeId || email.receiver && email.receiver.split(\";\").includes(employeeId));\n\n      // 更新统计数据\n      this.setEmployeeStats();\n\n      // 加载异常活动 (后续将基于真实数据)\n      this.loadAbnormalActivities();\n\n      // 计算威胁评分 (后续将基于真实数据)\n      this.calculateThreatScore();\n\n      // 初始化图表\n      this.$nextTick(() => {\n        this.initServerAccessChart(); // 后续会用真实数据\n        this.initEmailActivityChart(); // 将使用真实数据\n        this.initPersonEmailCloud(); // 后续会用真实数据\n      });\n    },\n    setEmployeeStats() {\n      if (!this.selectedEmployee) return;\n\n      // 使用 employeeEmailData 计算邮件数量\n      const sentEmails = this.employeeEmailData.filter(email => email.sender === this.selectedEmployee);\n      const receivedEmails = this.employeeEmailData.filter(email => email.receiver && email.receiver.split(\";\").includes(this.selectedEmployee));\n      this.emailCount = sentEmails.length + receivedEmails.length; // 或者只算发送的，根据需求调整\n\n      // loginCount 等其他统计数据后续会从对应CSV加载\n      // this.loginCount = ...\n\n      // hasAbnormalContent 也需要根据真实数据判断，暂时保留旧逻辑或置为false\n      // 示例：检查邮件内容（如果邮件内容在CSV中并且被加载了）\n      this.hasAbnormalContent = this.employeeEmailData.some(email => {\n        // 假设 email.subject 或 email.body 存在\n        const content = (email.subject || \"\") + (email.body || \"\");\n        return content.includes(\"机密\") || content.includes(\"源代码\"); // 简单示例\n      });\n\n      // 更新 employeeStats 计算属性将自动使用这些新值\n    },\n    handleTabClick(tab) {\n      // 标签切换逻辑\n      if (tab.name === \"abnormal\" && this.abnormalActivities.length > 0) {\n        this.$notify({\n          title: \"威胁提示\",\n          message: `工号${this.selectedEmployee}存在${this.abnormalActivities.length}项异常活动需要关注`,\n          type: \"warning\",\n          duration: 3000\n        });\n      }\n    },\n    calculateThreatScore() {\n      if (!this.selectedEmployee) {\n        this.threatScore = 0;\n        return;\n      }\n\n      // 根据员工异常活动数量和类型计算威胁评分\n      let score = 0;\n      let assessment = \"\";\n      switch (this.selectedEmployee) {\n        case \"1103\":\n          score = 85;\n          assessment = \"该员工存在多项高风险行为，包括非工作时间数据外发和敏感信息访问，威胁等级高。\";\n          break;\n        case \"1204\":\n          score = 78;\n          assessment = \"该员工与外部IP地址有可疑加密通信，数据传输量异常，存在数据泄露风险。\";\n          break;\n        case \"1152\":\n          score = 65;\n          assessment = \"该员工存在账户探测行为，尝试登录多个他人账户，可能试图获取未授权信息。\";\n          break;\n        case \"1307\":\n          score = 70;\n          assessment = \"该员工执行大量非常规数据库查询，查询模式显示系统性数据收集行为。\";\n          break;\n        case \"1388\":\n          score = 55;\n          assessment = \"该员工工作时间异常，多次深夜访问系统，但未发现明确数据泄露证据。\";\n          break;\n        default:\n          score = 0;\n          assessment = \"未发现明显异常行为。\";\n      }\n      this.threatScore = score;\n      this.threatAssessment = assessment;\n\n      // 设置评分样式\n      if (score >= 75) {\n        this.threatScoreClass = \"high-risk\";\n      } else if (score >= 50) {\n        this.threatScoreClass = \"medium-risk\";\n      } else if (score > 0) {\n        this.threatScoreClass = \"low-risk\";\n      } else {\n        this.threatScoreClass = \"no-risk\";\n      }\n    },\n    getEmailTrendType() {\n      if (this.selectedEmployee === \"1103\" || this.selectedEmployee === \"1204\") {\n        return \"higher\";\n      } else if (this.selectedEmployee === \"1388\") {\n        return \"lower\";\n      }\n      return \"normal\";\n    },\n    getEmailTrendIcon() {\n      const type = this.getEmailTrendType();\n      if (type === \"higher\") return \"el-icon-top\";\n      if (type === \"lower\") return \"el-icon-bottom\";\n      return \"el-icon-minus\";\n    },\n    getEmailTrendText() {\n      const type = this.getEmailTrendType();\n      if (type === \"higher\") return \"高于平均值\";\n      if (type === \"lower\") return \"低于平均值\";\n      return \"正常范围\";\n    },\n    getActivityColor(type) {\n      switch (type) {\n        case \"danger\":\n          return \"#F56C6C\";\n        case \"warning\":\n          return \"#E6A23C\";\n        case \"info\":\n          return \"#909399\";\n        default:\n          return \"#409EFF\";\n      }\n    },\n    markActivity(index) {\n      if (!this.abnormalActivities[index].marked) {\n        this.abnormalActivities[index].marked = true;\n        this.$notify({\n          title: \"标记成功\",\n          message: \"已将该异常活动标记为需要审查\",\n          type: \"success\",\n          duration: 2000\n        });\n      }\n    },\n    initWorkTimeChart() {\n      this.workTimeChart = this.$echarts.init(document.getElementById(\"workTimeChart\"));\n      const days = [];\n      for (let i = 1; i <= 30; i++) {\n        const day = i < 10 ? \"0\" + i : i;\n        days.push(\"2017-11-\" + day);\n      }\n\n      // 模拟上下班打卡时间数据\n      const checkinData = [];\n      const checkoutData = [];\n      const normalCheckinData = [];\n      const normalCheckoutData = [];\n      for (let i = 0; i < 30; i++) {\n        // 为特定员工设置数据模式\n        if (this.selectedEmployee === \"1103\") {\n          // 数据外发行为\n          if (i >= 10 && i <= 15) {\n            // 11-11到11-16的异常时间\n            checkinData.push(\"08:15\");\n            checkoutData.push(\"02:30\"); // 凌晨离开，异常行为\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          } else {\n            const randomMin1 = Math.floor(Math.random() * 30);\n            const randomMin2 = Math.floor(Math.random() * 60);\n            checkinData.push(`08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`);\n            checkoutData.push(`18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`);\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          }\n        } else if (this.selectedEmployee === \"1388\") {\n          // 异常行为模式\n          if (i >= 4 && i <= 19) {\n            // 11-5到11-20的异常时间\n            const randomHour = Math.floor(Math.random() * 3) + 23;\n            const randomMin = Math.floor(Math.random() * 60);\n            if (i % 2 === 0) {\n              checkinData.push(\"-\"); // 缺勤\n              checkoutData.push(\"-\");\n            } else {\n              checkinData.push(\"09:30\"); // 迟到\n              checkoutData.push(`${randomHour}:${randomMin < 10 ? \"0\" + randomMin : randomMin}`); // 深夜\n            }\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          } else {\n            const randomMin1 = Math.floor(Math.random() * 30);\n            const randomMin2 = Math.floor(Math.random() * 60);\n            checkinData.push(`08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`);\n            checkoutData.push(`18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`);\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          }\n        } else {\n          // 正常员工模式\n          const randomMin1 = Math.floor(Math.random() * 30);\n          const randomMin2 = Math.floor(Math.random() * 60);\n          checkinData.push(`08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`);\n          checkoutData.push(`18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`);\n          normalCheckinData.push(\"08:00\");\n          normalCheckoutData.push(\"18:30\");\n        }\n      }\n      const option = {\n        title: {\n          text: \"员工上下班时间分析\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          },\n          formatter: function (params) {\n            const day = params[0].axisValue;\n            let result = day + \"<br/>\";\n            params.forEach(param => {\n              const marker = param.marker;\n              const seriesName = param.seriesName;\n              const value = param.value;\n              result += marker + \" \" + seriesName + \": \" + value + \"<br/>\";\n            });\n            return result;\n          }\n        },\n        legend: {\n          data: [\"上班打卡时间\", \"下班打卡时间\", \"部门平均上班时间\", \"部门平均下班时间\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: days,\n          axisLabel: {\n            interval: 2,\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: \"time\",\n          min: \"00:00\",\n          max: \"24:00\",\n          axisLabel: {\n            formatter: function (value) {\n              // 将小时值格式化为时间字符串\n              const date = new Date(value);\n              const hours = date.getHours().toString().padStart(2, \"0\");\n              const minutes = date.getMinutes().toString().padStart(2, \"0\");\n              return `${hours}:${minutes}`;\n            }\n          }\n        },\n        series: [{\n          name: \"上班打卡时间\",\n          type: \"line\",\n          data: checkinData\n        }, {\n          name: \"下班打卡时间\",\n          type: \"line\",\n          data: checkoutData\n        }, {\n          name: \"部门平均上班时间\",\n          type: \"line\",\n          data: normalCheckinData,\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }, {\n          name: \"部门平均下班时间\",\n          type: \"line\",\n          data: normalCheckoutData,\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }]\n      };\n      this.workTimeChart.setOption(option);\n    },\n    initWebVisitChart() {\n      this.webVisitChart = this.$echarts.init(document.getElementById(\"webVisitChart\"));\n\n      // 模拟网页访问数据\n      let categories = [\"工作相关网站\", \"技术社区\", \"搜索引擎\", \"新闻媒体\", \"社交网站\", \"购物网站\", \"娱乐网站\", \"其他\"];\n      let normalData = [65, 15, 10, 5, 3, 1, 1, 0];\n      let employeeData = [60, 15, 12, 6, 3, 2, 1, 1];\n\n      // 为特定员工设置异常访问模式\n      if (this.selectedEmployee === \"1103\") {\n        employeeData = [50, 10, 15, 5, 5, 2, 3, 10]; // 增加了\"其他\"类别的访问\n      } else if (this.selectedEmployee === \"1152\") {\n        employeeData = [45, 15, 20, 5, 5, 0, 0, 10]; // 增加了搜索引擎和其他类别的访问\n      }\n      const option = {\n        title: {\n          text: \"网页访问类别分布\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        legend: {\n          data: [\"员工访问比例\", \"部门平均访问比例\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          data: categories,\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"访问比例(%)\"\n        },\n        series: [{\n          name: \"员工访问比例\",\n          type: \"bar\",\n          data: employeeData,\n          itemStyle: {\n            color: \"#409EFF\"\n          }\n        }, {\n          name: \"部门平均访问比例\",\n          type: \"bar\",\n          data: normalData,\n          itemStyle: {\n            color: \"#909399\"\n          }\n        }]\n      };\n      this.webVisitChart.setOption(option);\n    },\n    initServerAccessChart() {\n      this.serverAccessChart = this.$echarts.init(document.getElementById(\"serverAccessChart\"));\n      const dates = [];\n      for (let i = 1; i <= 30; i++) {\n        const day = i < 10 ? \"0\" + i : i;\n        dates.push(`11-${day}`);\n      }\n\n      // 模拟服务器访问数据\n      const accessData = [];\n      const normalData = [];\n      for (let i = 0; i < 30; i++) {\n        // 为不同员工设置不同的访问模式\n        if (this.selectedEmployee === \"1307\") {\n          // 数据库异常查询员工\n          if (i >= 7 && i <= 11) {\n            // 11-8到11-12的异常访问\n            accessData.push(Math.floor(Math.random() * 50) + 150); // 非常高的访问量\n          } else {\n            accessData.push(Math.floor(Math.random() * 20) + 10);\n          }\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        } else if (this.selectedEmployee === \"1152\") {\n          // 账户探测员工\n          if (i >= 9 && i <= 14) {\n            // 11-10到11-15的异常访问\n            accessData.push(Math.floor(Math.random() * 30) + 40); // 较高的访问量\n          } else {\n            accessData.push(Math.floor(Math.random() * 15) + 10);\n          }\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        } else {\n          // 正常员工\n          accessData.push(Math.floor(Math.random() * 20) + 10);\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        }\n      }\n      const option = {\n        title: {\n          text: \"服务器访问频率\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          }\n        },\n        legend: {\n          data: [\"员工访问次数\", \"部门平均访问次数\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: dates,\n          axisLabel: {\n            interval: 2,\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"访问次数\"\n        },\n        series: [{\n          name: \"员工访问次数\",\n          type: \"line\",\n          data: accessData,\n          markLine: {\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }]\n          }\n        }, {\n          name: \"部门平均访问次数\",\n          type: \"line\",\n          data: normalData,\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }]\n      };\n      this.serverAccessChart.setOption(option);\n    },\n    initEmailActivityChart() {\n      if (this.emailActivityChart) {\n        this.emailActivityChart.dispose(); // 销毁旧实例\n      }\n      this.emailActivityChart = this.$echarts.init(document.getElementById(\"emailActivityChart\"));\n      if (!this.selectedEmployee || this.employeeEmailData.length === 0) {\n        this.emailActivityChart.setOption({\n          title: {\n            text: \"邮件活动分析 (无数据)\",\n            left: \"center\"\n          },\n          series: []\n        });\n        return;\n      }\n\n      // 按日期聚合邮件数据\n      const dailyActivity = {};\n      const datesInMonth = Array.from({\n        length: 30\n      }, (_, i) => {\n        const day = (i + 1).toString().padStart(2, \"0\");\n        return `11-${day}`; // 假设分析的是11月\n      });\n      datesInMonth.forEach(date => {\n        dailyActivity[date] = {\n          sent: 0,\n          received: 0\n        };\n      });\n      this.employeeEmailData.forEach(email => {\n        // 假设 email.send_time 格式为 \"YYYY-MM-DD HH:MM:SS\" 或类似\n        // 需要从 this.analysisDate (如 \"2017-11-30\") 和 email.send_time 提取月份中的日\n        // 为简化，这里假设所有邮件都是当月的，并按小时聚合，但图表示例是按天\n        // 真实场景下需要更精确的日期处理\n        const emailDateKey = email.send_time ? email.send_time.substring(5, 10).replace(\"-\", \"-\") : null; // MM-DD\n        if (emailDateKey && dailyActivity[emailDateKey]) {\n          if (email.sender === this.selectedEmployee) {\n            dailyActivity[emailDateKey].sent++;\n          }\n          if (email.receiver && email.receiver.split(\";\").includes(this.selectedEmployee)) {\n            dailyActivity[emailDateKey].received++;\n          }\n        }\n      });\n      const sentData = datesInMonth.map(date => dailyActivity[date] ? dailyActivity[date].sent : 0);\n      const receivedData = datesInMonth.map(date => dailyActivity[date] ? dailyActivity[date].received : 0);\n\n      // 部门平均数据仍然是模拟的，后续可以考虑如何计算\n      const normalSentData = datesInMonth.map(() => 3);\n      const normalReceivedData = datesInMonth.map(() => 7);\n      const option = {\n        title: {\n          text: `工号 ${this.selectedEmployee} 邮件活动分析 (${this.analysisDate})`,\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          }\n        },\n        legend: {\n          data: [\"发送邮件\", \"接收邮件\", \"部门平均发送\", \"部门平均接收\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: datesInMonth,\n          // 使用月份中的日期作为X轴\n          axisLabel: {\n            interval: 2,\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"邮件数量\"\n        },\n        series: [{\n          name: \"发送邮件\",\n          type: \"line\",\n          stack: \"总量1\",\n          // stack可以移除，除非确实要堆叠显示\n          data: sentData\n        }, {\n          name: \"接收邮件\",\n          type: \"line\",\n          stack: \"总量1\",\n          // stack可以移除\n          data: receivedData\n        }, {\n          name: \"部门平均发送\",\n          type: \"line\",\n          // stack: \"总量2\", // stack可以移除\n          data: normalSentData,\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }, {\n          name: \"部门平均接收\",\n          type: \"line\",\n          // stack: \"总量2\", // stack可以移除\n          data: normalReceivedData,\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }]\n      };\n      this.emailActivityChart.setOption(option);\n    },\n    initPersonEmailCloud() {\n      this.personEmailCloud = this.$echarts.init(document.getElementById(\"personEmailCloud\"));\n\n      // 模拟邮件主题词云数据\n      const data = [{\n        name: \"产品设计\",\n        value: 150\n      }, {\n        name: \"系统架构\",\n        value: 120\n      }, {\n        name: \"会议安排\",\n        value: 100\n      }, {\n        name: \"需求分析\",\n        value: 90\n      }, {\n        name: \"代码审核\",\n        value: 85\n      }, {\n        name: \"项目进度\",\n        value: 80\n      }, {\n        name: \"功能测试\",\n        value: 75\n      }, {\n        name: \"用户体验\",\n        value: 70\n      }, {\n        name: \"数据库\",\n        value: 65\n      }, {\n        name: \"API接口\",\n        value: 60\n      }, {\n        name: \"安全问题\",\n        value: 55\n      }, {\n        name: \"性能优化\",\n        value: 50\n      }, {\n        name: \"版本更新\",\n        value: 45\n      }, {\n        name: \"团队协作\",\n        value: 40\n      }, {\n        name: \"问题修复\",\n        value: 38\n      }, {\n        name: \"前端开发\",\n        value: 35\n      }, {\n        name: \"部署方案\",\n        value: 32\n      }, {\n        name: \"技术文档\",\n        value: 30\n      }, {\n        name: \"后端开发\",\n        value: 28\n      }, {\n        name: \"人员安排\",\n        value: 25\n      }, {\n        name: \"薪资调整\",\n        value: 23\n      }, {\n        name: \"服务器\",\n        value: 22\n      }, {\n        name: \"客户需求\",\n        value: 20\n      }, {\n        name: \"资源分配\",\n        value: 18\n      }, {\n        name: \"产品发布\",\n        value: 15\n      }, {\n        name: \"技术选型\",\n        value: 13\n      }, {\n        name: \"机密文件\",\n        value: 12\n      }, {\n        name: \"源代码\",\n        value: 12\n      }, {\n        name: \"商业计划\",\n        value: 11\n      }, {\n        name: \"财务报表\",\n        value: 10\n      }, {\n        name: \"工作安排\",\n        value: 9\n      }, {\n        name: \"外部合作\",\n        value: 8\n      }, {\n        name: \"人员调动\",\n        value: 7\n      }, {\n        name: \"竞品分析\",\n        value: 6\n      }, {\n        name: \"市场策略\",\n        value: 5\n      }];\n\n      // 构建异常高频词检测\n      let abnormalWords = [];\n      data.forEach(item => {\n        if ((item.name.includes(\"机密\") || item.name.includes(\"源代码\") || item.name.includes(\"商业\") || item.name.includes(\"财务\")) && this.selectedEmployee === \"1103\") {\n          abnormalWords.push(item.name);\n        }\n      });\n      const option = {\n        title: {\n          text: \"员工邮件主题词云\",\n          left: \"center\",\n          top: 0,\n          textStyle: {\n            fontSize: 16\n          }\n        },\n        tooltip: {\n          show: true,\n          formatter: function (params) {\n            let result = `<div style=\"font-weight:bold\">${params.name}</div>`;\n            result += `频次: ${params.value}`;\n            if (abnormalWords.includes(params.name)) {\n              result += '<br/><span style=\"color:#F56C6C\">⚠️ 敏感词汇</span>';\n            }\n            return result;\n          },\n          backgroundColor: \"rgba(50,50,50,0.9)\",\n          textStyle: {\n            color: \"#fff\"\n          }\n        },\n        series: [{\n          type: \"wordCloud\",\n          shape: \"circle\",\n          keepAspect: false,\n          left: \"center\",\n          top: \"center\",\n          width: \"95%\",\n          height: \"95%\",\n          right: null,\n          bottom: null,\n          sizeRange: [12, 60],\n          rotationRange: [-45, 45],\n          rotationStep: 5,\n          gridSize: 8,\n          drawOutOfBound: false,\n          layoutAnimation: true,\n          textStyle: {\n            fontFamily: \"sans-serif\",\n            fontWeight: \"bold\",\n            color: function (params) {\n              // 根据词汇是否敏感设置不同颜色\n              if (abnormalWords.includes(params.name)) {\n                return \"#F56C6C\"; // 异常/敏感词为红色\n              }\n              // 正常词汇使用颜色渐变\n              return \"rgb(\" + Math.round(Math.random() * 80 + 60) + \",\" + Math.round(Math.random() * 100 + (params.dataIndex % 2 === 0 ? 50 : 120)) + \",\" + Math.round(Math.random() * 100 + 80) + \")\";\n            },\n            emphasis: {\n              shadowBlur: 10,\n              shadowColor: \"#333\"\n            }\n          },\n          data: data.map(item => {\n            return {\n              name: item.name,\n              value: item.value,\n              // 为敏感词增加视觉强调\n              textStyle: abnormalWords.includes(item.name) ? {\n                fontWeight: \"bolder\",\n                color: \"#F56C6C\",\n                shadowBlur: 10,\n                shadowColor: \"rgba(255, 0, 0, 0.3)\"\n              } : {}\n            };\n          })\n        }]\n      };\n      this.personEmailCloud.setOption(option);\n\n      // 点击事件处理\n      this.personEmailCloud.on(\"click\", params => {\n        if (abnormalWords.includes(params.name)) {\n          this.$notify({\n            title: \"敏感词汇警告\",\n            message: `检测到工号${this.selectedEmployee}在邮件中频繁使用敏感词\"${params.name}\"，疑似存在数据泄密风险`,\n            type: \"warning\",\n            duration: 5000\n          });\n        }\n      });\n    },\n    loadAbnormalActivities() {\n      // 根据不同员工加载不同的异常活动\n      this.abnormalActivities = [];\n      if (this.selectedEmployee === \"1103\") {\n        this.abnormalActivities = [{\n          type: \"danger\",\n          timestamp: \"2017-11-12 02:35\",\n          content: \"凌晨时段登录并下载大量产品设计文件(230MB)\"\n        }, {\n          type: \"danger\",\n          timestamp: \"2017-11-12 03:10\",\n          content: \"向外部邮箱发送大附件邮件\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-13 19:45\",\n          content: \"访问了公司代码仓库中的核心产品模块\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-14 22:30\",\n          content: \"与ID-1204有多次邮件往来，内容涉及产品技术细节\"\n        }];\n      } else if (this.selectedEmployee === \"1152\") {\n        this.abnormalActivities = [{\n          type: \"danger\",\n          timestamp: \"2017-11-13 20:14\",\n          content: \"尝试登录15个不同研发人员账户，成功3次\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-13 20:38\",\n          content: \"成功登录他人账户后访问代码仓库\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-14 21:05\",\n          content: \"使用非常规IP地址登录系统\"\n        }];\n      } else if (this.selectedEmployee === \"1388\") {\n        this.abnormalActivities = [{\n          type: \"warning\",\n          timestamp: \"2017-11-15 23:45\",\n          content: \"深夜办公，访问与工作职责无关的文件\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-16 00:00\",\n          content: \"连续5天出现相似的深夜工作模式\"\n        }, {\n          type: \"info\",\n          timestamp: \"2017-11-16 08:00\",\n          content: \"次日未打卡上班\"\n        }];\n      } else if (this.selectedEmployee === \"1307\") {\n        this.abnormalActivities = [{\n          type: \"danger\",\n          timestamp: \"2017-11-10 15:23\",\n          content: \"执行超过200次数据库查询，涉及产品核心数据表\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-11 16:40\",\n          content: \"查询模式显示系统性的数据收集行为\"\n        }];\n      } else if (this.selectedEmployee === \"1204\") {\n        this.abnormalActivities = [{\n          type: \"danger\",\n          timestamp: \"2017-11-22 19:08\",\n          content: \"工作站与5个未在公司白名单内的IP地址建立加密连接\"\n        }, {\n          type: \"danger\",\n          timestamp: \"2017-11-22 20:15\",\n          content: \"传输数据约320MB，流量特征与数据泄露模式匹配\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-23 10:30\",\n          content: \"与ID-1103有频繁邮件往来\"\n        }];\n      } else {\n        // 无异常活动\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","workTimeChart","webVisitChart","serverAccessChart","emailActivityChart","personEmailCloud","selectedDepartment","selectedEmployee","currentEmployee","analysisDate","showAnalysis","activeTab","hasAbnormalContent","employeeEmailData","departments","employees","id","department","position","ip","email","employeeDepartment","emailCount","loginCount","employeeOptions","value","label","abnormalActivities","threatScore","threatAssessment","threatScoreClass","computed","employeeStats","stats","icon","color","trend","type","getEmailTrendType","getEmailTrendIcon","text","getEmailTrendText","length","mounted","window","addEventListener","handleResize","beforeDestroy","removeEventListener","methods","fetchCsvData","filePath","response","fetch","ok","Error","status","rows","split","filter","row","trim","header","map","h","slice","values","obj","forEach","key","index","error","console","$message","message","resize","handleEmployeeChange","employeeId","find","emp","emailFilePath","rawEmailData","sender","receiver","includes","setEmployeeStats","loadAbnormalActivities","calculateThreatScore","$nextTick","initServerAccessChart","initEmailActivityChart","initPersonEmailCloud","sentEmails","receivedEmails","some","content","subject","body","handleTabClick","tab","$notify","title","duration","score","assessment","getActivityColor","markActivity","marked","initWorkTimeChart","$echarts","init","document","getElementById","days","i","day","push","checkinData","checkoutData","normalCheckinData","normalCheckoutData","randomMin1","Math","floor","random","randomMin2","randomHour","randomMin","option","left","tooltip","trigger","axisPointer","backgroundColor","formatter","params","axisValue","result","param","marker","seriesName","legend","top","grid","right","bottom","containLabel","xAxis","boundaryGap","axisLabel","interval","rotate","yAxis","min","max","date","Date","hours","getHours","toString","padStart","minutes","getMinutes","series","lineStyle","setOption","initWebVisitChart","categories","normalData","employeeData","itemStyle","dates","accessData","markLine","dispose","dailyActivity","datesInMonth","Array","from","_","sent","received","emailDateKey","send_time","substring","replace","sentData","receivedData","normalSentData","normalReceivedData","stack","abnormalWords","item","textStyle","fontSize","show","shape","keepAspect","width","height","sizeRange","rotationRange","rotationStep","gridSize","drawOutOfBound","layoutAnimation","fontFamily","fontWeight","round","dataIndex","emphasis","shadowBlur","shadowColor","on","timestamp"],"sources":["src/views/Person.vue"],"sourcesContent":["<template>\n  <div class=\"person-view\">\n    <el-row>\n      <el-col :span=\"24\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span class=\"page-title\">内部威胁人员分析</span>\n            <el-tooltip\n              content=\"分析员工异常行为特征，识别潜在内部威胁人员\"\n              placement=\"top\"\n            >\n              <i class=\"el-icon-question\" style=\"margin-left: 10px\"></i>\n            </el-tooltip>\n            <el-select\n              v-model=\"selectedEmployee\"\n              placeholder=\"选择员工\"\n              style=\"float: right; width: 240px\"\n              @change=\"handleEmployeeChange\"\n            >\n              <el-option\n                v-for=\"item in employeeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              >\n              </el-option>\n            </el-select>\n          </div>\n          <p class=\"section-description\" v-if=\"selectedEmployee\">\n            通过分析工号{{\n              selectedEmployee\n            }}的登录活动、邮件通信和服务器访问模式，识别可能的异常行为和威胁迹象。\n          </p>\n          <div v-if=\"!selectedEmployee\" class=\"empty-state\">\n            <i class=\"el-icon-user-solid empty-icon\"></i>\n            <p>请从下拉菜单选择一名员工进行分析</p>\n          </div>\n\n          <el-tabs\n            v-model=\"activeTab\"\n            @tab-click=\"handleTabClick\"\n            v-if=\"selectedEmployee\"\n          >\n            <el-tab-pane label=\"威胁概览\" name=\"overview\">\n              <el-row :gutter=\"20\">\n                <el-col\n                  :span=\"6\"\n                  v-for=\"(stat, index) in employeeStats\"\n                  :key=\"index\"\n                >\n                  <el-card shadow=\"hover\" class=\"stat-card\">\n                    <div class=\"stat-card-body\">\n                      <i\n                        :class=\"stat.icon + ' stat-icon'\"\n                        :style=\"{ color: stat.color }\"\n                      ></i>\n                      <div class=\"stat-info\">\n                        <div class=\"stat-label\">{{ stat.label }}</div>\n                        <div class=\"stat-value\">{{ stat.value }}</div>\n                        <div\n                          v-if=\"stat.trend\"\n                          class=\"stat-trend\"\n                          :class=\"stat.trend.type\"\n                        >\n                          <i :class=\"stat.trend.icon\"></i>\n                          {{ stat.trend.text }}\n                        </div>\n                      </div>\n                    </div>\n                  </el-card>\n                </el-col>\n              </el-row>\n\n              <el-divider content-position=\"center\">行为分析</el-divider>\n\n              <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n                <el-col :span=\"12\">\n                  <el-card shadow=\"hover\" class=\"chart-card\">\n                    <div slot=\"header\" class=\"clearfix\">\n                      <span>服务器访问模式</span>\n                    </div>\n                    <div class=\"chart-container\" id=\"serverAccessChart\"></div>\n                  </el-card>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-card shadow=\"hover\" class=\"chart-card\">\n                    <div slot=\"header\" class=\"clearfix\">\n                      <span>邮件通信活动</span>\n                    </div>\n                    <div class=\"chart-container\" id=\"emailActivityChart\"></div>\n                  </el-card>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n                <el-col :span=\"24\">\n                  <el-card shadow=\"hover\" class=\"chart-card\">\n                    <div slot=\"header\" class=\"clearfix\">\n                      <span>邮件内容分析</span>\n                      <el-tag\n                        v-if=\"hasAbnormalContent\"\n                        type=\"danger\"\n                        size=\"mini\"\n                        effect=\"dark\"\n                        style=\"float: right\"\n                      >\n                        检测到敏感内容\n                      </el-tag>\n                    </div>\n                    <div\n                      class=\"chart-container\"\n                      id=\"personEmailCloud\"\n                      style=\"height: 420px\"\n                    ></div>\n                  </el-card>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <el-tab-pane label=\"异常活动\" name=\"abnormal\">\n              <div class=\"threat-score-container\" v-if=\"threatScore > 0\">\n                <div class=\"threat-score\" :class=\"threatScoreClass\">\n                  <div class=\"score-value\">{{ threatScore }}</div>\n                  <div class=\"score-label\">威胁评分</div>\n                </div>\n                <div class=\"threat-assessment\">\n                  <h3>威胁评估</h3>\n                  <p>{{ threatAssessment }}</p>\n                </div>\n              </div>\n\n              <div\n                v-if=\"abnormalActivities.length === 0\"\n                class=\"empty-activities\"\n              >\n                <i class=\"el-icon-circle-check\"></i>\n                <p>未检测到异常活动</p>\n              </div>\n\n              <el-timeline v-else>\n                <el-timeline-item\n                  v-for=\"(activity, index) in abnormalActivities\"\n                  :key=\"index\"\n                  :timestamp=\"activity.timestamp\"\n                  :type=\"activity.type\"\n                  :color=\"getActivityColor(activity.type)\"\n                  placement=\"top\"\n                >\n                  <el-card :body-style=\"{ padding: '15px' }\" shadow=\"hover\">\n                    <h4>{{ activity.content }}</h4>\n                    <p v-if=\"activity.details\" class=\"activity-details\">\n                      {{ activity.details }}\n                    </p>\n                    <div class=\"activity-actions\">\n                      <el-button\n                        type=\"text\"\n                        size=\"mini\"\n                        @click=\"markActivity(index)\"\n                      >\n                        标记为审查\n                      </el-button>\n                      <el-tag size=\"mini\" type=\"info\" v-if=\"activity.marked\">\n                        已标记\n                      </el-tag>\n                    </div>\n                  </el-card>\n                </el-timeline-item>\n              </el-timeline>\n            </el-tab-pane>\n          </el-tabs>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Person\",\n  data() {\n    return {\n      // 图表实例\n      workTimeChart: null,\n      webVisitChart: null,\n      serverAccessChart: null,\n      emailActivityChart: null,\n      personEmailCloud: null,\n\n      // 选择和过滤相关数据\n      selectedDepartment: \"研发1部\",\n      selectedEmployee: \"\",\n      currentEmployee: null,\n      // 默认分析日期，后续可以扩展为日期选择\n      analysisDate: \"2017-11-30\",\n      showAnalysis: false,\n      activeTab: \"overview\",\n      hasAbnormalContent: false,\n\n      // 从CSV加载的原始数据\n      employeeEmailData: [],\n      // employeeLoginData: [], // 预留给登录数据\n      // employeeWeblogData: [], // 预留给网页访问数据\n\n      // 下拉选项数据\n      departments: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\n      employees: [\n        {\n          id: \"1103\",\n          name: \"1103\",\n          department: \"研发2部\",\n          position: \"高级工程师\",\n          ip: \"10.64.105.110\",\n          email: \"1103@hightech.com\",\n        },\n        {\n          id: \"1152\",\n          name: \"1152\",\n          department: \"研发1部\",\n          position: \"工程师\",\n          ip: \"10.64.105.187\",\n          email: \"1152@hightech.com\",\n        },\n        {\n          id: \"1307\",\n          name: \"1307\",\n          department: \"研发3部\",\n          position: \"数据工程师\",\n          ip: \"10.64.105.9\",\n          email: \"1307@hightech.com\",\n        },\n        {\n          id: \"1388\",\n          name: \"1388\",\n          department: \"研发3部\",\n          position: \"软件工程师\",\n          ip: \"10.64.105.93\",\n          email: \"1388@hightech.com\",\n        },\n        {\n          id: \"1204\",\n          name: \"1204\",\n          department: \"研发2部\",\n          position: \"开发工程师\",\n          ip: \"10.64.105.116\",\n          email: \"1204@hightech.com\",\n        },\n        {\n          id: \"1060\",\n          name: \"1060\",\n          department: \"信息安全部\",\n          position: \"安全工程师\",\n          ip: \"10.64.105.82\",\n          email: \"1060@hightech.com\",\n        },\n        {\n          id: \"1087\",\n          name: \"1087\",\n          department: \"研发1部\",\n          position: \"开发工程师\",\n          ip: \"10.64.105.151\",\n          email: \"1087@hightech.com\",\n        },\n        {\n          id: \"1092\",\n          name: \"1092\",\n          department: \"研发2部\",\n          position: \"工程师\",\n          ip: \"10.64.105.230\",\n          email: \"1092@hightech.com\",\n        },\n      ],\n\n      // 统计数据\n      employeeDepartment: \"\",\n      emailCount: 0,\n      loginCount: 0, // 将由login.csv数据更新\n      employeeOptions: [\n        { value: \"1103\", label: \"工号1103 (研发2部)\" },\n        { value: \"1152\", label: \"工号1152 (研发1部)\" },\n        { value: \"1307\", label: \"工号1307 (研发3部)\" },\n        { value: \"1388\", label: \"工号1388 (研发3部)\" },\n        { value: \"1204\", label: \"工号1204 (研发2部)\" },\n        { value: \"1060\", label: \"工号1060 (信息安全部)\" },\n        { value: \"1087\", label: \"工号1087 (研发1部)\" },\n        { value: \"1092\", label: \"工号1092 (研发2部)\" },\n      ],\n\n      // 异常活动列表\n      abnormalActivities: [],\n      threatScore: 0,\n      threatAssessment: \"\",\n      threatScoreClass: \"normal\",\n    };\n  },\n  computed: {\n    employeeStats() {\n      if (!this.selectedEmployee) return [];\n\n      // 根据员工ID定制统计信息\n      const stats = [\n        {\n          label: \"员工ID\",\n          value: this.selectedEmployee,\n          icon: \"el-icon-user-solid\",\n          color: \"#409EFF\",\n        },\n        {\n          label: \"所属部门\",\n          value: this.employeeDepartment,\n          icon: \"el-icon-office-building\",\n          color: \"#67C23A\",\n        },\n        {\n          label: \"邮件数量\",\n          value: this.emailCount,\n          icon: \"el-icon-message\",\n          color: \"#E6A23C\",\n          trend: {\n            type: this.getEmailTrendType(),\n            icon: this.getEmailTrendIcon(),\n            text: this.getEmailTrendText(),\n          },\n        },\n        {\n          label: \"异常行为\",\n          value: this.abnormalActivities.length,\n          icon: \"el-icon-warning\",\n          color: this.abnormalActivities.length > 0 ? \"#F56C6C\" : \"#909399\",\n        },\n      ];\n\n      return stats;\n    },\n  },\n  mounted() {\n    window.addEventListener(\"resize\", this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  },\n  methods: {\n    async fetchCsvData(filePath) {\n      try {\n        const response = await fetch(filePath);\n        if (!response.ok) {\n          throw new Error(\n            `HTTP error! status: ${response.status} for ${filePath}`\n          );\n        }\n        const text = await response.text();\n        const rows = text.split(\"\\\\n\").filter((row) => row.trim() !== \"\");\n        if (rows.length < 2) return []; // Ensure there's a header and at least one data row\n\n        const header = rows[0].split(\",\").map((h) => h.trim());\n        const data = rows.slice(1).map((row) => {\n          const values = row.split(\",\");\n          let obj = {};\n          header.forEach((key, index) => {\n            obj[key] = values[index] ? values[index].trim() : \"\";\n          });\n          return obj;\n        });\n        return data;\n      } catch (error) {\n        console.error(\"Failed to fetch or parse CSV:\", error);\n        this.$message.error(`加载 ${filePath} 数据失败: ${error.message}`);\n        return [];\n      }\n    },\n    handleResize() {\n      this.workTimeChart && this.workTimeChart.resize();\n      this.webVisitChart && this.webVisitChart.resize();\n      this.serverAccessChart && this.serverAccessChart.resize();\n      this.emailActivityChart && this.emailActivityChart.resize();\n      this.personEmailCloud && this.personEmailCloud.resize();\n    },\n    async handleEmployeeChange(employeeId) {\n      this.currentEmployee = this.employees.find(\n        (emp) => emp.id === employeeId\n      );\n      this.selectedEmployee = employeeId;\n      this.employeeDepartment = this.currentEmployee.department;\n\n      // 加载实际数据\n      const emailFilePath = `/ITD-2018 Data Set/${this.analysisDate}/email.csv`;\n      const rawEmailData = await this.fetchCsvData(emailFilePath);\n\n      // 按员工ID筛选邮件数据\n      this.employeeEmailData = rawEmailData.filter(\n        (email) =>\n          email.sender === employeeId ||\n          (email.receiver && email.receiver.split(\";\").includes(employeeId))\n      );\n\n      // 更新统计数据\n      this.setEmployeeStats();\n\n      // 加载异常活动 (后续将基于真实数据)\n      this.loadAbnormalActivities();\n\n      // 计算威胁评分 (后续将基于真实数据)\n      this.calculateThreatScore();\n\n      // 初始化图表\n      this.$nextTick(() => {\n        this.initServerAccessChart(); // 后续会用真实数据\n        this.initEmailActivityChart(); // 将使用真实数据\n        this.initPersonEmailCloud(); // 后续会用真实数据\n      });\n    },\n    setEmployeeStats() {\n      if (!this.selectedEmployee) return;\n\n      // 使用 employeeEmailData 计算邮件数量\n      const sentEmails = this.employeeEmailData.filter(\n        (email) => email.sender === this.selectedEmployee\n      );\n      const receivedEmails = this.employeeEmailData.filter(\n        (email) =>\n          email.receiver &&\n          email.receiver.split(\";\").includes(this.selectedEmployee)\n      );\n      this.emailCount = sentEmails.length + receivedEmails.length; // 或者只算发送的，根据需求调整\n\n      // loginCount 等其他统计数据后续会从对应CSV加载\n      // this.loginCount = ...\n\n      // hasAbnormalContent 也需要根据真实数据判断，暂时保留旧逻辑或置为false\n      // 示例：检查邮件内容（如果邮件内容在CSV中并且被加载了）\n      this.hasAbnormalContent = this.employeeEmailData.some((email) => {\n        // 假设 email.subject 或 email.body 存在\n        const content = (email.subject || \"\") + (email.body || \"\");\n        return content.includes(\"机密\") || content.includes(\"源代码\"); // 简单示例\n      });\n\n      // 更新 employeeStats 计算属性将自动使用这些新值\n    },\n    handleTabClick(tab) {\n      // 标签切换逻辑\n      if (tab.name === \"abnormal\" && this.abnormalActivities.length > 0) {\n        this.$notify({\n          title: \"威胁提示\",\n          message: `工号${this.selectedEmployee}存在${this.abnormalActivities.length}项异常活动需要关注`,\n          type: \"warning\",\n          duration: 3000,\n        });\n      }\n    },\n    calculateThreatScore() {\n      if (!this.selectedEmployee) {\n        this.threatScore = 0;\n        return;\n      }\n\n      // 根据员工异常活动数量和类型计算威胁评分\n      let score = 0;\n      let assessment = \"\";\n\n      switch (this.selectedEmployee) {\n        case \"1103\":\n          score = 85;\n          assessment =\n            \"该员工存在多项高风险行为，包括非工作时间数据外发和敏感信息访问，威胁等级高。\";\n          break;\n        case \"1204\":\n          score = 78;\n          assessment =\n            \"该员工与外部IP地址有可疑加密通信，数据传输量异常，存在数据泄露风险。\";\n          break;\n        case \"1152\":\n          score = 65;\n          assessment =\n            \"该员工存在账户探测行为，尝试登录多个他人账户，可能试图获取未授权信息。\";\n          break;\n        case \"1307\":\n          score = 70;\n          assessment =\n            \"该员工执行大量非常规数据库查询，查询模式显示系统性数据收集行为。\";\n          break;\n        case \"1388\":\n          score = 55;\n          assessment =\n            \"该员工工作时间异常，多次深夜访问系统，但未发现明确数据泄露证据。\";\n          break;\n        default:\n          score = 0;\n          assessment = \"未发现明显异常行为。\";\n      }\n\n      this.threatScore = score;\n      this.threatAssessment = assessment;\n\n      // 设置评分样式\n      if (score >= 75) {\n        this.threatScoreClass = \"high-risk\";\n      } else if (score >= 50) {\n        this.threatScoreClass = \"medium-risk\";\n      } else if (score > 0) {\n        this.threatScoreClass = \"low-risk\";\n      } else {\n        this.threatScoreClass = \"no-risk\";\n      }\n    },\n    getEmailTrendType() {\n      if (\n        this.selectedEmployee === \"1103\" ||\n        this.selectedEmployee === \"1204\"\n      ) {\n        return \"higher\";\n      } else if (this.selectedEmployee === \"1388\") {\n        return \"lower\";\n      }\n      return \"normal\";\n    },\n    getEmailTrendIcon() {\n      const type = this.getEmailTrendType();\n      if (type === \"higher\") return \"el-icon-top\";\n      if (type === \"lower\") return \"el-icon-bottom\";\n      return \"el-icon-minus\";\n    },\n    getEmailTrendText() {\n      const type = this.getEmailTrendType();\n      if (type === \"higher\") return \"高于平均值\";\n      if (type === \"lower\") return \"低于平均值\";\n      return \"正常范围\";\n    },\n    getActivityColor(type) {\n      switch (type) {\n        case \"danger\":\n          return \"#F56C6C\";\n        case \"warning\":\n          return \"#E6A23C\";\n        case \"info\":\n          return \"#909399\";\n        default:\n          return \"#409EFF\";\n      }\n    },\n    markActivity(index) {\n      if (!this.abnormalActivities[index].marked) {\n        this.abnormalActivities[index].marked = true;\n        this.$notify({\n          title: \"标记成功\",\n          message: \"已将该异常活动标记为需要审查\",\n          type: \"success\",\n          duration: 2000,\n        });\n      }\n    },\n    initWorkTimeChart() {\n      this.workTimeChart = this.$echarts.init(\n        document.getElementById(\"workTimeChart\")\n      );\n\n      const days = [];\n      for (let i = 1; i <= 30; i++) {\n        const day = i < 10 ? \"0\" + i : i;\n        days.push(\"2017-11-\" + day);\n      }\n\n      // 模拟上下班打卡时间数据\n      const checkinData = [];\n      const checkoutData = [];\n      const normalCheckinData = [];\n      const normalCheckoutData = [];\n\n      for (let i = 0; i < 30; i++) {\n        // 为特定员工设置数据模式\n        if (this.selectedEmployee === \"1103\") {\n          // 数据外发行为\n          if (i >= 10 && i <= 15) {\n            // 11-11到11-16的异常时间\n            checkinData.push(\"08:15\");\n            checkoutData.push(\"02:30\"); // 凌晨离开，异常行为\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          } else {\n            const randomMin1 = Math.floor(Math.random() * 30);\n            const randomMin2 = Math.floor(Math.random() * 60);\n            checkinData.push(\n              `08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`\n            );\n            checkoutData.push(\n              `18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`\n            );\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          }\n        } else if (this.selectedEmployee === \"1388\") {\n          // 异常行为模式\n          if (i >= 4 && i <= 19) {\n            // 11-5到11-20的异常时间\n            const randomHour = Math.floor(Math.random() * 3) + 23;\n            const randomMin = Math.floor(Math.random() * 60);\n\n            if (i % 2 === 0) {\n              checkinData.push(\"-\"); // 缺勤\n              checkoutData.push(\"-\");\n            } else {\n              checkinData.push(\"09:30\"); // 迟到\n              checkoutData.push(\n                `${randomHour}:${randomMin < 10 ? \"0\" + randomMin : randomMin}`\n              ); // 深夜\n            }\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          } else {\n            const randomMin1 = Math.floor(Math.random() * 30);\n            const randomMin2 = Math.floor(Math.random() * 60);\n            checkinData.push(\n              `08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`\n            );\n            checkoutData.push(\n              `18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`\n            );\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          }\n        } else {\n          // 正常员工模式\n          const randomMin1 = Math.floor(Math.random() * 30);\n          const randomMin2 = Math.floor(Math.random() * 60);\n          checkinData.push(\n            `08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`\n          );\n          checkoutData.push(\n            `18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`\n          );\n          normalCheckinData.push(\"08:00\");\n          normalCheckoutData.push(\"18:30\");\n        }\n      }\n\n      const option = {\n        title: {\n          text: \"员工上下班时间分析\",\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n          formatter: function (params) {\n            const day = params[0].axisValue;\n            let result = day + \"<br/>\";\n            params.forEach((param) => {\n              const marker = param.marker;\n              const seriesName = param.seriesName;\n              const value = param.value;\n              result += marker + \" \" + seriesName + \": \" + value + \"<br/>\";\n            });\n            return result;\n          },\n        },\n        legend: {\n          data: [\n            \"上班打卡时间\",\n            \"下班打卡时间\",\n            \"部门平均上班时间\",\n            \"部门平均下班时间\",\n          ],\n          top: 30,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: days,\n          axisLabel: {\n            interval: 2,\n            rotate: 45,\n          },\n        },\n        yAxis: {\n          type: \"time\",\n          min: \"00:00\",\n          max: \"24:00\",\n          axisLabel: {\n            formatter: function (value) {\n              // 将小时值格式化为时间字符串\n              const date = new Date(value);\n              const hours = date.getHours().toString().padStart(2, \"0\");\n              const minutes = date.getMinutes().toString().padStart(2, \"0\");\n              return `${hours}:${minutes}`;\n            },\n          },\n        },\n        series: [\n          {\n            name: \"上班打卡时间\",\n            type: \"line\",\n            data: checkinData,\n          },\n          {\n            name: \"下班打卡时间\",\n            type: \"line\",\n            data: checkoutData,\n          },\n          {\n            name: \"部门平均上班时间\",\n            type: \"line\",\n            data: normalCheckinData,\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n          {\n            name: \"部门平均下班时间\",\n            type: \"line\",\n            data: normalCheckoutData,\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n        ],\n      };\n\n      this.workTimeChart.setOption(option);\n    },\n    initWebVisitChart() {\n      this.webVisitChart = this.$echarts.init(\n        document.getElementById(\"webVisitChart\")\n      );\n\n      // 模拟网页访问数据\n      let categories = [\n        \"工作相关网站\",\n        \"技术社区\",\n        \"搜索引擎\",\n        \"新闻媒体\",\n        \"社交网站\",\n        \"购物网站\",\n        \"娱乐网站\",\n        \"其他\",\n      ];\n      let normalData = [65, 15, 10, 5, 3, 1, 1, 0];\n      let employeeData = [60, 15, 12, 6, 3, 2, 1, 1];\n\n      // 为特定员工设置异常访问模式\n      if (this.selectedEmployee === \"1103\") {\n        employeeData = [50, 10, 15, 5, 5, 2, 3, 10]; // 增加了\"其他\"类别的访问\n      } else if (this.selectedEmployee === \"1152\") {\n        employeeData = [45, 15, 20, 5, 5, 0, 0, 10]; // 增加了搜索引擎和其他类别的访问\n      }\n\n      const option = {\n        title: {\n          text: \"网页访问类别分布\",\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n          },\n        },\n        legend: {\n          data: [\"员工访问比例\", \"部门平均访问比例\"],\n          top: 30,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          data: categories,\n          axisLabel: {\n            interval: 0,\n            rotate: 30,\n          },\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"访问比例(%)\",\n        },\n        series: [\n          {\n            name: \"员工访问比例\",\n            type: \"bar\",\n            data: employeeData,\n            itemStyle: {\n              color: \"#409EFF\",\n            },\n          },\n          {\n            name: \"部门平均访问比例\",\n            type: \"bar\",\n            data: normalData,\n            itemStyle: {\n              color: \"#909399\",\n            },\n          },\n        ],\n      };\n\n      this.webVisitChart.setOption(option);\n    },\n    initServerAccessChart() {\n      this.serverAccessChart = this.$echarts.init(\n        document.getElementById(\"serverAccessChart\")\n      );\n\n      const dates = [];\n      for (let i = 1; i <= 30; i++) {\n        const day = i < 10 ? \"0\" + i : i;\n        dates.push(`11-${day}`);\n      }\n\n      // 模拟服务器访问数据\n      const accessData = [];\n      const normalData = [];\n\n      for (let i = 0; i < 30; i++) {\n        // 为不同员工设置不同的访问模式\n        if (this.selectedEmployee === \"1307\") {\n          // 数据库异常查询员工\n          if (i >= 7 && i <= 11) {\n            // 11-8到11-12的异常访问\n            accessData.push(Math.floor(Math.random() * 50) + 150); // 非常高的访问量\n          } else {\n            accessData.push(Math.floor(Math.random() * 20) + 10);\n          }\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        } else if (this.selectedEmployee === \"1152\") {\n          // 账户探测员工\n          if (i >= 9 && i <= 14) {\n            // 11-10到11-15的异常访问\n            accessData.push(Math.floor(Math.random() * 30) + 40); // 较高的访问量\n          } else {\n            accessData.push(Math.floor(Math.random() * 15) + 10);\n          }\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        } else {\n          // 正常员工\n          accessData.push(Math.floor(Math.random() * 20) + 10);\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        }\n      }\n\n      const option = {\n        title: {\n          text: \"服务器访问频率\",\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n        },\n        legend: {\n          data: [\"员工访问次数\", \"部门平均访问次数\"],\n          top: 30,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: dates,\n          axisLabel: {\n            interval: 2,\n            rotate: 45,\n          },\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"访问次数\",\n        },\n        series: [\n          {\n            name: \"员工访问次数\",\n            type: \"line\",\n            data: accessData,\n            markLine: {\n              data: [\n                {\n                  type: \"average\",\n                  name: \"平均值\",\n                },\n              ],\n            },\n          },\n          {\n            name: \"部门平均访问次数\",\n            type: \"line\",\n            data: normalData,\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n        ],\n      };\n\n      this.serverAccessChart.setOption(option);\n    },\n    initEmailActivityChart() {\n      if (this.emailActivityChart) {\n        this.emailActivityChart.dispose(); // 销毁旧实例\n      }\n      this.emailActivityChart = this.$echarts.init(\n        document.getElementById(\"emailActivityChart\")\n      );\n\n      if (!this.selectedEmployee || this.employeeEmailData.length === 0) {\n        this.emailActivityChart.setOption({\n          title: { text: \"邮件活动分析 (无数据)\", left: \"center\" },\n          series: [],\n        });\n        return;\n      }\n\n      // 按日期聚合邮件数据\n      const dailyActivity = {};\n      const datesInMonth = Array.from({ length: 30 }, (_, i) => {\n        const day = (i + 1).toString().padStart(2, \"0\");\n        return `11-${day}`; // 假设分析的是11月\n      });\n\n      datesInMonth.forEach((date) => {\n        dailyActivity[date] = { sent: 0, received: 0 };\n      });\n\n      this.employeeEmailData.forEach((email) => {\n        // 假设 email.send_time 格式为 \"YYYY-MM-DD HH:MM:SS\" 或类似\n        // 需要从 this.analysisDate (如 \"2017-11-30\") 和 email.send_time 提取月份中的日\n        // 为简化，这里假设所有邮件都是当月的，并按小时聚合，但图表示例是按天\n        // 真实场景下需要更精确的日期处理\n        const emailDateKey = email.send_time\n          ? email.send_time.substring(5, 10).replace(\"-\", \"-\")\n          : null; // MM-DD\n        if (emailDateKey && dailyActivity[emailDateKey]) {\n          if (email.sender === this.selectedEmployee) {\n            dailyActivity[emailDateKey].sent++;\n          }\n          if (\n            email.receiver &&\n            email.receiver.split(\";\").includes(this.selectedEmployee)\n          ) {\n            dailyActivity[emailDateKey].received++;\n          }\n        }\n      });\n\n      const sentData = datesInMonth.map((date) =>\n        dailyActivity[date] ? dailyActivity[date].sent : 0\n      );\n      const receivedData = datesInMonth.map((date) =>\n        dailyActivity[date] ? dailyActivity[date].received : 0\n      );\n\n      // 部门平均数据仍然是模拟的，后续可以考虑如何计算\n      const normalSentData = datesInMonth.map(() => 3);\n      const normalReceivedData = datesInMonth.map(() => 7);\n\n      const option = {\n        title: {\n          text: `工号 ${this.selectedEmployee} 邮件活动分析 (${this.analysisDate})`,\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n        },\n        legend: {\n          data: [\"发送邮件\", \"接收邮件\", \"部门平均发送\", \"部门平均接收\"],\n          top: 30,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: datesInMonth, // 使用月份中的日期作为X轴\n          axisLabel: {\n            interval: 2,\n            rotate: 45,\n          },\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"邮件数量\",\n        },\n        series: [\n          {\n            name: \"发送邮件\",\n            type: \"line\",\n            stack: \"总量1\", // stack可以移除，除非确实要堆叠显示\n            data: sentData,\n          },\n          {\n            name: \"接收邮件\",\n            type: \"line\",\n            stack: \"总量1\", // stack可以移除\n            data: receivedData,\n          },\n          {\n            name: \"部门平均发送\",\n            type: \"line\",\n            // stack: \"总量2\", // stack可以移除\n            data: normalSentData,\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n          {\n            name: \"部门平均接收\",\n            type: \"line\",\n            // stack: \"总量2\", // stack可以移除\n            data: normalReceivedData,\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n        ],\n      };\n\n      this.emailActivityChart.setOption(option);\n    },\n    initPersonEmailCloud() {\n      this.personEmailCloud = this.$echarts.init(\n        document.getElementById(\"personEmailCloud\")\n      );\n\n      // 模拟邮件主题词云数据\n      const data = [\n        { name: \"产品设计\", value: 150 },\n        { name: \"系统架构\", value: 120 },\n        { name: \"会议安排\", value: 100 },\n        { name: \"需求分析\", value: 90 },\n        { name: \"代码审核\", value: 85 },\n        { name: \"项目进度\", value: 80 },\n        { name: \"功能测试\", value: 75 },\n        { name: \"用户体验\", value: 70 },\n        { name: \"数据库\", value: 65 },\n        { name: \"API接口\", value: 60 },\n        { name: \"安全问题\", value: 55 },\n        { name: \"性能优化\", value: 50 },\n        { name: \"版本更新\", value: 45 },\n        { name: \"团队协作\", value: 40 },\n        { name: \"问题修复\", value: 38 },\n        { name: \"前端开发\", value: 35 },\n        { name: \"部署方案\", value: 32 },\n        { name: \"技术文档\", value: 30 },\n        { name: \"后端开发\", value: 28 },\n        { name: \"人员安排\", value: 25 },\n        { name: \"薪资调整\", value: 23 },\n        { name: \"服务器\", value: 22 },\n        { name: \"客户需求\", value: 20 },\n        { name: \"资源分配\", value: 18 },\n        { name: \"产品发布\", value: 15 },\n        { name: \"技术选型\", value: 13 },\n        { name: \"机密文件\", value: 12 },\n        { name: \"源代码\", value: 12 },\n        { name: \"商业计划\", value: 11 },\n        { name: \"财务报表\", value: 10 },\n        { name: \"工作安排\", value: 9 },\n        { name: \"外部合作\", value: 8 },\n        { name: \"人员调动\", value: 7 },\n        { name: \"竞品分析\", value: 6 },\n        { name: \"市场策略\", value: 5 },\n      ];\n\n      // 构建异常高频词检测\n      let abnormalWords = [];\n      data.forEach((item) => {\n        if (\n          (item.name.includes(\"机密\") ||\n            item.name.includes(\"源代码\") ||\n            item.name.includes(\"商业\") ||\n            item.name.includes(\"财务\")) &&\n          this.selectedEmployee === \"1103\"\n        ) {\n          abnormalWords.push(item.name);\n        }\n      });\n\n      const option = {\n        title: {\n          text: \"员工邮件主题词云\",\n          left: \"center\",\n          top: 0,\n          textStyle: {\n            fontSize: 16,\n          },\n        },\n        tooltip: {\n          show: true,\n          formatter: function (params) {\n            let result = `<div style=\"font-weight:bold\">${params.name}</div>`;\n            result += `频次: ${params.value}`;\n            if (abnormalWords.includes(params.name)) {\n              result += '<br/><span style=\"color:#F56C6C\">⚠️ 敏感词汇</span>';\n            }\n            return result;\n          },\n          backgroundColor: \"rgba(50,50,50,0.9)\",\n          textStyle: {\n            color: \"#fff\",\n          },\n        },\n        series: [\n          {\n            type: \"wordCloud\",\n            shape: \"circle\",\n            keepAspect: false,\n            left: \"center\",\n            top: \"center\",\n            width: \"95%\",\n            height: \"95%\",\n            right: null,\n            bottom: null,\n            sizeRange: [12, 60],\n            rotationRange: [-45, 45],\n            rotationStep: 5,\n            gridSize: 8,\n            drawOutOfBound: false,\n            layoutAnimation: true,\n            textStyle: {\n              fontFamily: \"sans-serif\",\n              fontWeight: \"bold\",\n              color: function (params) {\n                // 根据词汇是否敏感设置不同颜色\n                if (abnormalWords.includes(params.name)) {\n                  return \"#F56C6C\"; // 异常/敏感词为红色\n                }\n                // 正常词汇使用颜色渐变\n                return (\n                  \"rgb(\" +\n                  Math.round(Math.random() * 80 + 60) +\n                  \",\" +\n                  Math.round(\n                    Math.random() * 100 +\n                      (params.dataIndex % 2 === 0 ? 50 : 120)\n                  ) +\n                  \",\" +\n                  Math.round(Math.random() * 100 + 80) +\n                  \")\"\n                );\n              },\n              emphasis: {\n                shadowBlur: 10,\n                shadowColor: \"#333\",\n              },\n            },\n            data: data.map((item) => {\n              return {\n                name: item.name,\n                value: item.value,\n                // 为敏感词增加视觉强调\n                textStyle: abnormalWords.includes(item.name)\n                  ? {\n                      fontWeight: \"bolder\",\n                      color: \"#F56C6C\",\n                      shadowBlur: 10,\n                      shadowColor: \"rgba(255, 0, 0, 0.3)\",\n                    }\n                  : {},\n              };\n            }),\n          },\n        ],\n      };\n\n      this.personEmailCloud.setOption(option);\n\n      // 点击事件处理\n      this.personEmailCloud.on(\"click\", (params) => {\n        if (abnormalWords.includes(params.name)) {\n          this.$notify({\n            title: \"敏感词汇警告\",\n            message: `检测到工号${this.selectedEmployee}在邮件中频繁使用敏感词\"${params.name}\"，疑似存在数据泄密风险`,\n            type: \"warning\",\n            duration: 5000,\n          });\n        }\n      });\n    },\n    loadAbnormalActivities() {\n      // 根据不同员工加载不同的异常活动\n      this.abnormalActivities = [];\n\n      if (this.selectedEmployee === \"1103\") {\n        this.abnormalActivities = [\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-12 02:35\",\n            content: \"凌晨时段登录并下载大量产品设计文件(230MB)\",\n          },\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-12 03:10\",\n            content: \"向外部邮箱发送大附件邮件\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-13 19:45\",\n            content: \"访问了公司代码仓库中的核心产品模块\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-14 22:30\",\n            content: \"与ID-1204有多次邮件往来，内容涉及产品技术细节\",\n          },\n        ];\n      } else if (this.selectedEmployee === \"1152\") {\n        this.abnormalActivities = [\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-13 20:14\",\n            content: \"尝试登录15个不同研发人员账户，成功3次\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-13 20:38\",\n            content: \"成功登录他人账户后访问代码仓库\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-14 21:05\",\n            content: \"使用非常规IP地址登录系统\",\n          },\n        ];\n      } else if (this.selectedEmployee === \"1388\") {\n        this.abnormalActivities = [\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-15 23:45\",\n            content: \"深夜办公，访问与工作职责无关的文件\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-16 00:00\",\n            content: \"连续5天出现相似的深夜工作模式\",\n          },\n          {\n            type: \"info\",\n            timestamp: \"2017-11-16 08:00\",\n            content: \"次日未打卡上班\",\n          },\n        ];\n      } else if (this.selectedEmployee === \"1307\") {\n        this.abnormalActivities = [\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-10 15:23\",\n            content: \"执行超过200次数据库查询，涉及产品核心数据表\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-11 16:40\",\n            content: \"查询模式显示系统性的数据收集行为\",\n          },\n        ];\n      } else if (this.selectedEmployee === \"1204\") {\n        this.abnormalActivities = [\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-22 19:08\",\n            content: \"工作站与5个未在公司白名单内的IP地址建立加密连接\",\n          },\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-22 20:15\",\n            content: \"传输数据约320MB，流量特征与数据泄露模式匹配\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-23 10:30\",\n            content: \"与ID-1103有频繁邮件往来\",\n          },\n        ];\n      } else {\n        // 无异常活动\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.box-card {\n  margin-bottom: 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.page-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.section-description {\n  color: #606266;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 60px 0;\n  color: #909399;\n}\n\n.empty-icon {\n  font-size: 64px;\n  margin-bottom: 20px;\n  color: #dcdfe6;\n}\n\n.stat-card {\n  background-color: #f5f7fa;\n  border-radius: 8px;\n  padding: 15px;\n  text-align: center;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n  height: 100%;\n  transition: all 0.3s;\n  margin-bottom: 20px;\n}\n\n.stat-card:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.stat-card-body {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.stat-icon {\n  font-size: 32px;\n  margin-right: 15px;\n}\n\n.stat-info {\n  text-align: left;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #909399;\n  margin-bottom: 5px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.stat-trend {\n  font-size: 12px;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n}\n\n.stat-trend i {\n  margin-right: 4px;\n}\n\n.higher {\n  color: #f56c6c;\n}\n\n.lower {\n  color: #67c23a;\n}\n\n.normal {\n  color: #909399;\n}\n\n.chart-container {\n  height: 300px;\n}\n\n.chart-card {\n  margin-bottom: 20px;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.chart-card .el-card__header {\n  padding: 12px 20px;\n  border-bottom: 1px solid #ebeef5;\n  background-color: #fafafa;\n}\n\n.activity-details {\n  margin-top: 10px;\n  font-size: 12px;\n  color: #606266;\n}\n\n.activity-actions {\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.empty-activities {\n  text-align: center;\n  padding: 40px 0;\n  color: #67c23a;\n}\n\n.empty-activities i {\n  font-size: 48px;\n  margin-bottom: 15px;\n}\n\n.threat-score-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 30px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  border-left: 4px solid #e6a23c;\n}\n\n.threat-score {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-right: 20px;\n  color: white;\n}\n\n.high-risk {\n  background-color: #f56c6c;\n  box-shadow: 0 0 15px rgba(245, 108, 108, 0.4);\n}\n\n.medium-risk {\n  background-color: #e6a23c;\n  box-shadow: 0 0 15px rgba(230, 162, 60, 0.4);\n}\n\n.low-risk {\n  background-color: #909399;\n  box-shadow: 0 0 15px rgba(144, 147, 153, 0.4);\n}\n\n.no-risk {\n  background-color: #67c23a;\n  box-shadow: 0 0 15px rgba(103, 194, 58, 0.4);\n}\n\n.score-value {\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.score-label {\n  font-size: 12px;\n  opacity: 0.8;\n}\n\n.threat-assessment {\n  flex: 1;\n}\n\n.threat-assessment h3 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  color: #303133;\n}\n\n.threat-assessment p {\n  margin: 0;\n  color: #606266;\n  line-height: 1.5;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
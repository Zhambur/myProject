{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport Papa from \"papaparse\";\nexport default {\n  name: \"Person\",\n  data() {\n    return {\n      // 图表实例\n      workTimeChart: null,\n      webVisitChart: null,\n      serverAccessChart: null,\n      emailActivityChart: null,\n      personEmailCloud: null,\n      // 选择和过滤相关数据\n      selectedDepartment: \"研发1部\",\n      selectedEmployee: \"\",\n      currentEmployee: null,\n      analysisDate: \"2017-11-30\",\n      showAnalysis: false,\n      activeTab: \"overview\",\n      hasAbnormalContent: false,\n      // 从CSV加载的原始数据\n      employeeEmailData: [],\n      allLoginData: [],\n      // 用于存储所有登录记录以提取员工列表\n\n      // 下拉选项数据 - 将被动态填充\n      departments: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"],\n      // 这个列表可能也需要回顾\n      employees: [],\n      // 将从 login.csv 动态加载\n      employeeOptions: [],\n      // 将从 login.csv 动态加载\n\n      // 统计数据\n      employeeDepartment: \"\",\n      // 将从选定的 currentEmployee 更新\n      emailCount: 0,\n      loginCount: 0,\n      // 将由login.csv数据更新\n\n      // 异常活动列表\n      abnormalActivities: [],\n      threatScore: 0,\n      threatAssessment: \"\",\n      threatScoreClass: \"normal\"\n    };\n  },\n  computed: {\n    employeeStats() {\n      if (!this.selectedEmployee) return [];\n\n      // 根据员工ID定制统计信息\n      const stats = [{\n        label: \"员工ID\",\n        value: this.selectedEmployee,\n        icon: \"el-icon-user-solid\",\n        color: \"#409EFF\"\n      }, {\n        label: \"所属部门\",\n        value: this.employeeDepartment,\n        icon: \"el-icon-office-building\",\n        color: \"#67C23A\"\n      }, {\n        label: \"邮件数量\",\n        value: this.emailCount,\n        icon: \"el-icon-message\",\n        color: \"#E6A23C\",\n        trend: {\n          type: this.getEmailTrendType(),\n          icon: this.getEmailTrendIcon(),\n          text: this.getEmailTrendText()\n        }\n      }, {\n        label: \"异常行为\",\n        value: this.abnormalActivities.length,\n        icon: \"el-icon-warning\",\n        color: this.abnormalActivities.length > 0 ? \"#F56C6C\" : \"#909399\"\n      }];\n      return stats;\n    }\n  },\n  mounted() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.loadEmployeeList(); // 组件挂载后加载员工列表\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  },\n  methods: {\n    async fetchCsvData(filePath) {\n      this.$message.info(`Fetching data from: ${filePath}`);\n      try {\n        const response = await fetch(filePath);\n        if (!response.ok) {\n          this.$message.error(`Error fetching ${filePath}: ${response.status} ${response.statusText}`);\n          console.error(`Error fetching ${filePath}: ${response.status} ${response.statusText}`);\n          return [];\n        }\n        const csvText = await response.text();\n        return new Promise((resolve, reject) => {\n          Papa.parse(csvText, {\n            header: true,\n            skipEmptyLines: true,\n            complete: results => {\n              console.log(\"Fetched CSV Data for \" + filePath + \":\", results.data); // DEBUG\n              if (results.errors && results.errors.length > 0) {\n                this.$message.error(`Error parsing CSV ${filePath}: ${results.errors[0].message}`);\n                console.error(`Error parsing CSV ${filePath}:`, results.errors);\n                reject(results.errors);\n              } else {\n                resolve(results.data);\n              }\n            },\n            error: error => {\n              this.$message.error(`PapaParse error for ${filePath}: ${error.message}`);\n              console.error(`PapaParse error for ${filePath}:`, error);\n              reject(error);\n            }\n          });\n        });\n      } catch (error) {\n        this.$message.error(`Exception fetching or parsing ${filePath}: ${error}`);\n        console.error(`Exception fetching or parsing ${filePath}:`, error);\n        return [];\n      }\n    },\n    async loadEmployeeList() {\n      const loginFilePath = `/ITD-2018 Data Set/${this.analysisDate}/login.csv`;\n      this.allLoginData = await this.fetchCsvData(loginFilePath);\n      console.log(\"Login data in loadEmployeeList:\", this.allLoginData);\n      if (this.allLoginData && this.allLoginData.length > 0) {\n        const uniqueUserIds = [...new Set(this.allLoginData.map(log => log.user))].filter(id => id);\n        console.log(\"Unique User IDs:\", uniqueUserIds);\n        this.employees = uniqueUserIds.map(userId => ({\n          id: userId,\n          name: userId,\n          department: \"未知\",\n          position: \"未知\",\n          ip: \"未知\",\n          email: `${userId}@hightech.com`\n        }));\n        this.employeeOptions = uniqueUserIds.map(userId => ({\n          value: userId,\n          label: `工号 ${userId}`\n        }));\n        console.log(\"Updated employeeOptions:\", this.employeeOptions);\n      } else {\n        // 使用 this.$message.warning 替换 this.$message.warn\n        this.$message.warning(`未能从 ${loginFilePath} 加载到员工登录数据，员工列表为空。`);\n        this.employees = [];\n        this.employeeOptions = [];\n      }\n    },\n    handleResize() {\n      this.workTimeChart && this.workTimeChart.resize();\n      this.webVisitChart && this.webVisitChart.resize();\n      this.serverAccessChart && this.serverAccessChart.resize();\n      this.emailActivityChart && this.emailActivityChart.resize();\n      this.personEmailCloud && this.personEmailCloud.resize();\n    },\n    async handleEmployeeChange(employeeId) {\n      if (!employeeId) {\n        this.currentEmployee = null;\n        this.showAnalysis = false;\n        this.resetCharts();\n        return;\n      }\n      this.selectedEmployee = employeeId; // 确保 selectedEmployee 被设置\n      this.currentEmployee = this.employees.find(e => e.id === employeeId) || null;\n      if (this.currentEmployee) {\n        this.employeeDepartment = this.currentEmployee.department || \"未知\";\n      } else {\n        this.employeeDepartment = \"未知\"; // 如果找不到员工信息，也设为未知\n      }\n      this.showAnalysis = true;\n\n      // 加载该员工的邮件数据\n      const emailFilePath = `/ITD-2018 Data Set/${this.analysisDate}/email.csv`;\n      try {\n        const emailData = await this.fetchCsvData(emailFilePath);\n        this.employeeEmailData = emailData; // 存储原始邮件数据\n        console.log(\"Employee Email Data after fetch in handleEmployeeChange:\", this.employeeEmailData); // DEBUG\n\n        // 更新统计数据和图表\n        this.setEmployeeStats(); // 更新统计卡片\n        this.initEmailActivityChart(); // 更新邮件活动图\n        this.initPersonEmailCloud(); // 更新邮件词云\n        this.initServerAccessChart(); // 取消注释以显示服务器访问图表\n        // this.checkAbnormalContent(); // 暂时注释，后续处理\n        this.loadAbnormalActivities(); // 更正: 调用已存在的 loadAbnormalActivities\n        this.calculateThreatScore();\n      } catch (error) {\n        this.$message.error(\"处理员工数据时出错: \" + error);\n        console.error(\"Error processing employee data in handleEmployeeChange:\", error);\n        this.resetCharts(); // 出错时重置图表\n      }\n    },\n    resetCharts() {\n      this.employeeEmailData = [];\n      this.abnormalActivities = [];\n      this.threatScore = 0;\n      this.threatAssessment = \"\";\n      this.threatScoreClass = \"normal\";\n      this.initEmailActivityChart();\n      this.initPersonEmailCloud();\n    },\n    setEmployeeStats() {\n      if (!this.selectedEmployee || !this.employeeEmailData) {\n        this.emailCount = 0;\n        // 其他统计数据也应在此处重置或设为默认值\n        return;\n      }\n      console.log(\"setEmployeeStats - employeeEmailData:\", this.employeeEmailData, \"selectedEmployee:\", this.selectedEmployee); // DEBUG\n\n      const selectedUserEmailPattern = `${this.selectedEmployee}@hightech.com`;\n      const isSelectedUserRoot = this.selectedEmployee === \"root\"; // 特殊处理root\n\n      const employeeEmails = this.employeeEmailData.filter(email => {\n        if (!email || !this.selectedEmployee) return false;\n        const fromMatch = isSelectedUserRoot ? email.from === this.selectedEmployee : email.from === selectedUserEmailPattern;\n        let toMatch = false;\n        if (email.to) {\n          const recipients = email.to.split(\";\");\n          toMatch = recipients.some(recipient => isSelectedUserRoot ? recipient.trim() === this.selectedEmployee : recipient.trim() === selectedUserEmailPattern);\n        }\n        return fromMatch || toMatch;\n      });\n      console.log(\"setEmployeeStats - filtered employeeEmails:\", employeeEmails); // DEBUG\n\n      this.emailCount = employeeEmails.length;\n\n      // 更新登录次数等其他统计信息 (如果数据已加载)\n      if (this.allLoginData.length > 0) {\n        const employeeLogins = this.allLoginData.filter(log => log.user === this.selectedEmployee);\n        this.loginCount = employeeLogins.length;\n      } else {\n        this.loginCount = 0;\n      }\n    },\n    handleTabClick(tab) {\n      // 标签切换逻辑\n      if (tab.name === \"abnormal\" && this.abnormalActivities.length > 0) {\n        this.$notify({\n          title: \"威胁提示\",\n          message: `工号${this.selectedEmployee}存在${this.abnormalActivities.length}项异常活动需要关注`,\n          type: \"warning\",\n          duration: 3000\n        });\n      }\n    },\n    calculateThreatScore() {\n      if (!this.selectedEmployee) {\n        this.threatScore = 0;\n        return;\n      }\n\n      // 根据员工异常活动数量和类型计算威胁评分\n      let score = 0;\n      let assessment = \"\";\n      switch (this.selectedEmployee) {\n        case \"1103\":\n          score = 85;\n          assessment = \"该员工存在多项高风险行为，包括非工作时间数据外发和敏感信息访问，威胁等级高。\";\n          break;\n        case \"1204\":\n          score = 78;\n          assessment = \"该员工与外部IP地址有可疑加密通信，数据传输量异常，存在数据泄露风险。\";\n          break;\n        case \"1152\":\n          score = 65;\n          assessment = \"该员工存在账户探测行为，尝试登录多个他人账户，可能试图获取未授权信息。\";\n          break;\n        case \"1307\":\n          score = 70;\n          assessment = \"该员工执行大量非常规数据库查询，查询模式显示系统性数据收集行为。\";\n          break;\n        case \"1388\":\n          score = 55;\n          assessment = \"该员工工作时间异常，多次深夜访问系统，但未发现明确数据泄露证据。\";\n          break;\n        default:\n          score = 0;\n          assessment = \"未发现明显异常行为。\";\n      }\n      this.threatScore = score;\n      this.threatAssessment = assessment;\n\n      // 设置评分样式\n      if (score >= 75) {\n        this.threatScoreClass = \"high-risk\";\n      } else if (score >= 50) {\n        this.threatScoreClass = \"medium-risk\";\n      } else if (score > 0) {\n        this.threatScoreClass = \"low-risk\";\n      } else {\n        this.threatScoreClass = \"no-risk\";\n      }\n    },\n    getEmailTrendType() {\n      if (this.selectedEmployee === \"1103\" || this.selectedEmployee === \"1204\") {\n        return \"higher\";\n      } else if (this.selectedEmployee === \"1388\") {\n        return \"lower\";\n      }\n      return \"normal\";\n    },\n    getEmailTrendIcon() {\n      const type = this.getEmailTrendType();\n      if (type === \"higher\") return \"el-icon-top\";\n      if (type === \"lower\") return \"el-icon-bottom\";\n      return \"el-icon-minus\";\n    },\n    getEmailTrendText() {\n      const type = this.getEmailTrendType();\n      if (type === \"higher\") return \"高于平均值\";\n      if (type === \"lower\") return \"低于平均值\";\n      return \"正常范围\";\n    },\n    getActivityColor(type) {\n      switch (type) {\n        case \"danger\":\n          return \"#F56C6C\";\n        case \"warning\":\n          return \"#E6A23C\";\n        case \"info\":\n          return \"#909399\";\n        default:\n          return \"#409EFF\";\n      }\n    },\n    markActivity(index) {\n      if (!this.abnormalActivities[index].marked) {\n        this.abnormalActivities[index].marked = true;\n        this.$notify({\n          title: \"标记成功\",\n          message: \"已将该异常活动标记为需要审查\",\n          type: \"success\",\n          duration: 2000\n        });\n      }\n    },\n    initWorkTimeChart() {\n      if (this.workTimeChart) {\n        this.workTimeChart.dispose();\n      }\n      this.workTimeChart = this.$echarts.init(document.getElementById(\"workTimeChart\"));\n      const days = [];\n      for (let i = 1; i <= 30; i++) {\n        const day = i < 10 ? \"0\" + i : i;\n        days.push(\"2017-11-\" + day);\n      }\n\n      // 模拟上下班打卡时间数据\n      const checkinData = [];\n      const checkoutData = [];\n      const normalCheckinData = [];\n      const normalCheckoutData = [];\n      for (let i = 0; i < 30; i++) {\n        // 为特定员工设置数据模式\n        if (this.selectedEmployee === \"1103\") {\n          // 数据外发行为\n          if (i >= 10 && i <= 15) {\n            // 11-11到11-16的异常时间\n            checkinData.push(\"08:15\");\n            checkoutData.push(\"02:30\"); // 凌晨离开，异常行为\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          } else {\n            const randomMin1 = Math.floor(Math.random() * 30);\n            const randomMin2 = Math.floor(Math.random() * 60);\n            checkinData.push(`08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`);\n            checkoutData.push(`18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`);\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          }\n        } else if (this.selectedEmployee === \"1388\") {\n          // 异常行为模式\n          if (i >= 4 && i <= 19) {\n            // 11-5到11-20的异常时间\n            const randomHour = Math.floor(Math.random() * 3) + 23;\n            const randomMin = Math.floor(Math.random() * 60);\n            if (i % 2 === 0) {\n              checkinData.push(\"-\"); // 缺勤\n              checkoutData.push(\"-\");\n            } else {\n              checkinData.push(\"09:30\"); // 迟到\n              checkoutData.push(`${randomHour}:${randomMin < 10 ? \"0\" + randomMin : randomMin}`); // 深夜\n            }\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          } else {\n            const randomMin1 = Math.floor(Math.random() * 30);\n            const randomMin2 = Math.floor(Math.random() * 60);\n            checkinData.push(`08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`);\n            checkoutData.push(`18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`);\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          }\n        } else {\n          // 正常员工模式\n          const randomMin1 = Math.floor(Math.random() * 30);\n          const randomMin2 = Math.floor(Math.random() * 60);\n          checkinData.push(`08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`);\n          checkoutData.push(`18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`);\n          normalCheckinData.push(\"08:00\");\n          normalCheckoutData.push(\"18:30\");\n        }\n      }\n      const option = {\n        title: {\n          text: \"员工上下班时间分析\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          },\n          formatter: function (params) {\n            const day = params[0].axisValue;\n            let result = day + \"<br/>\";\n            params.forEach(param => {\n              const marker = param.marker;\n              const seriesName = param.seriesName;\n              const value = param.value;\n              result += marker + \" \" + seriesName + \": \" + value + \"<br/>\";\n            });\n            return result;\n          }\n        },\n        legend: {\n          data: [\"上班打卡时间\", \"下班打卡时间\", \"部门平均上班时间\", \"部门平均下班时间\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: days,\n          axisLabel: {\n            interval: 2,\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: \"time\",\n          min: \"00:00\",\n          max: \"24:00\",\n          axisLabel: {\n            formatter: function (value) {\n              // 将小时值格式化为时间字符串\n              const date = new Date(value);\n              const hours = date.getHours().toString().padStart(2, \"0\");\n              const minutes = date.getMinutes().toString().padStart(2, \"0\");\n              return `${hours}:${minutes}`;\n            }\n          }\n        },\n        series: [{\n          name: \"上班打卡时间\",\n          type: \"line\",\n          data: checkinData\n        }, {\n          name: \"下班打卡时间\",\n          type: \"line\",\n          data: checkoutData\n        }, {\n          name: \"部门平均上班时间\",\n          type: \"line\",\n          data: normalCheckinData,\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }, {\n          name: \"部门平均下班时间\",\n          type: \"line\",\n          data: normalCheckoutData,\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }]\n      };\n      this.workTimeChart.setOption(option);\n    },\n    initWebVisitChart() {\n      if (this.webVisitChart) {\n        this.webVisitChart.dispose();\n      }\n      this.webVisitChart = this.$echarts.init(document.getElementById(\"webVisitChart\"));\n\n      // 模拟网页访问数据\n      let categories = [\"工作相关网站\", \"技术社区\", \"搜索引擎\", \"新闻媒体\", \"社交网站\", \"购物网站\", \"娱乐网站\", \"其他\"];\n      let normalData = [65, 15, 10, 5, 3, 1, 1, 0];\n      let employeeData = [60, 15, 12, 6, 3, 2, 1, 1];\n\n      // 为特定员工设置异常访问模式\n      if (this.selectedEmployee === \"1103\") {\n        employeeData = [50, 10, 15, 5, 5, 2, 3, 10]; // 增加了\"其他\"类别的访问\n      } else if (this.selectedEmployee === \"1152\") {\n        employeeData = [45, 15, 20, 5, 5, 0, 0, 10]; // 增加了搜索引擎和其他类别的访问\n      }\n      const option = {\n        title: {\n          text: \"网页访问类别分布\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        legend: {\n          data: [\"员工访问比例\", \"部门平均访问比例\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          data: categories,\n          axisLabel: {\n            interval: 0,\n            rotate: 30\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"访问比例(%)\"\n        },\n        series: [{\n          name: \"员工访问比例\",\n          type: \"bar\",\n          data: employeeData,\n          itemStyle: {\n            color: \"#409EFF\"\n          }\n        }, {\n          name: \"部门平均访问比例\",\n          type: \"bar\",\n          data: normalData,\n          itemStyle: {\n            color: \"#909399\"\n          }\n        }]\n      };\n      this.webVisitChart.setOption(option);\n    },\n    initServerAccessChart() {\n      if (this.serverAccessChart) {\n        this.serverAccessChart.dispose();\n      }\n      this.serverAccessChart = this.$echarts.init(document.getElementById(\"serverAccessChart\"));\n      const dates = [];\n      for (let i = 1; i <= 30; i++) {\n        const day = i < 10 ? \"0\" + i : i;\n        dates.push(`11-${day}`);\n      }\n\n      // 模拟服务器访问数据\n      const accessData = [];\n      const normalData = [];\n      for (let i = 0; i < 30; i++) {\n        // 为不同员工设置不同的访问模式\n        if (this.selectedEmployee === \"1307\") {\n          // 数据库异常查询员工\n          if (i >= 7 && i <= 11) {\n            // 11-8到11-12的异常访问\n            accessData.push(Math.floor(Math.random() * 50) + 150); // 非常高的访问量\n          } else {\n            accessData.push(Math.floor(Math.random() * 20) + 10);\n          }\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        } else if (this.selectedEmployee === \"1152\") {\n          // 账户探测员工\n          if (i >= 9 && i <= 14) {\n            // 11-10到11-15的异常访问\n            accessData.push(Math.floor(Math.random() * 30) + 40); // 较高的访问量\n          } else {\n            accessData.push(Math.floor(Math.random() * 15) + 10);\n          }\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        } else {\n          // 正常员工\n          accessData.push(Math.floor(Math.random() * 20) + 10);\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        }\n      }\n      const option = {\n        title: {\n          text: \"服务器访问频率\",\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          }\n        },\n        legend: {\n          data: [\"员工访问次数\", \"部门平均访问次数\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: dates,\n          axisLabel: {\n            interval: 2,\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"访问次数\"\n        },\n        series: [{\n          name: \"员工访问次数\",\n          type: \"line\",\n          data: accessData,\n          markLine: {\n            data: [{\n              type: \"average\",\n              name: \"平均值\"\n            }]\n          }\n        }, {\n          name: \"部门平均访问次数\",\n          type: \"line\",\n          data: normalData,\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }]\n      };\n      this.serverAccessChart.setOption(option);\n    },\n    initEmailActivityChart() {\n      if (this.emailActivityChart) {\n        this.emailActivityChart.dispose();\n      }\n      this.emailActivityChart = this.$echarts.init(document.getElementById(\"emailActivityChart\"));\n      console.log(\"initEmailActivityChart - employeeEmailData:\", this.employeeEmailData, \"selectedEmployee:\", this.selectedEmployee); // DEBUG\n\n      if (!this.selectedEmployee || !this.employeeEmailData || this.employeeEmailData.length === 0) {\n        this.emailActivityChart.setOption({\n          title: {\n            text: \"无邮件数据\",\n            left: \"center\",\n            top: \"center\",\n            textStyle: {\n              color: \"#999\"\n            }\n          }\n        });\n        return;\n      }\n      const selectedUserEmailPattern = `${this.selectedEmployee}@hightech.com`;\n      const isSelectedUserRoot = this.selectedEmployee === \"root\";\n      const employeeMessages = this.employeeEmailData.filter(email => {\n        if (!email || !this.selectedEmployee) return false;\n        const fromMatch = isSelectedUserRoot ? email.from === this.selectedEmployee : email.from === selectedUserEmailPattern;\n        let toMatch = false;\n        if (email.to) {\n          const recipients = email.to.split(\";\");\n          toMatch = recipients.some(recipient => isSelectedUserRoot ? recipient.trim() === this.selectedEmployee : recipient.trim() === selectedUserEmailPattern);\n        }\n        return fromMatch || toMatch;\n      });\n      console.log(\"initEmailActivityChart - filtered employeeMessages:\", employeeMessages); // DEBUG\n\n      if (employeeMessages.length === 0) {\n        this.emailActivityChart.setOption({\n          title: {\n            text: \"该员工本日无邮件活动\",\n            left: \"center\",\n            top: \"center\",\n            textStyle: {\n              color: \"#999\"\n            }\n          }\n        });\n        return;\n      }\n\n      // 按日期聚合邮件数量\n      const dailyEmailCounts = {};\n      employeeMessages.forEach(email => {\n        // 假设 email.date 的格式是 \"YYYY/MM/DD HH:MM:SS\" 或 \"YYYY/MM/DD\"\n        // 我们只需要日期部分 \"YYYY/MM/DD\"\n        const emailDate = email.time ? email.time.split(\" \")[0].replace(/\\//g, \"-\") : null; // 使用 email.time 并替换 / 为 -\n        if (emailDate) {\n          dailyEmailCounts[emailDate] = (dailyEmailCounts[emailDate] || 0) + 1;\n        }\n      });\n      console.log(\"initEmailActivityChart - dailyEmailCounts:\", dailyEmailCounts); // DEBUG\n\n      const dates = Object.keys(dailyEmailCounts).sort();\n      const counts = dates.map(date => dailyEmailCounts[date]);\n      console.log(\"initEmailActivityChart - dates for chart:\", dates, \"counts for chart:\", counts); // DEBUG\n\n      const option = {\n        title: {\n          text: `工号 ${this.selectedEmployee} 邮件活动分析 (${this.analysisDate})`,\n          left: \"center\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\"\n            }\n          }\n        },\n        legend: {\n          data: [\"发送邮件\", \"接收邮件\", \"部门平均发送\", \"部门平均接收\"],\n          top: 30\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: dates,\n          // 使用月份中的日期作为X轴\n          axisLabel: {\n            interval: 2,\n            rotate: 45\n          }\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"邮件数量\"\n        },\n        series: [{\n          name: \"发送邮件\",\n          type: \"line\",\n          stack: \"总量1\",\n          // stack可以移除，除非确实要堆叠显示\n          data: counts\n        }, {\n          name: \"接收邮件\",\n          type: \"line\",\n          stack: \"总量1\",\n          // stack可以移除\n          data: counts\n        }, {\n          name: \"部门平均发送\",\n          type: \"line\",\n          // stack: \"总量2\", // stack可以移除\n          data: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }, {\n          name: \"部门平均接收\",\n          type: \"line\",\n          // stack: \"总量2\", // stack可以移除\n          data: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],\n          lineStyle: {\n            type: \"dashed\"\n          }\n        }]\n      };\n      this.emailActivityChart.setOption(option);\n    },\n    initPersonEmailCloud() {\n      if (this.personEmailCloud) {\n        this.personEmailCloud.dispose();\n      }\n      this.personEmailCloud = this.$echarts.init(document.getElementById(\"personEmailCloud\"));\n\n      // 模拟邮件主题词云数据\n      const data = [{\n        name: \"产品设计\",\n        value: 150\n      }, {\n        name: \"系统架构\",\n        value: 120\n      }, {\n        name: \"会议安排\",\n        value: 100\n      }, {\n        name: \"需求分析\",\n        value: 90\n      }, {\n        name: \"代码审核\",\n        value: 85\n      }, {\n        name: \"项目进度\",\n        value: 80\n      }, {\n        name: \"功能测试\",\n        value: 75\n      }, {\n        name: \"用户体验\",\n        value: 70\n      }, {\n        name: \"数据库\",\n        value: 65\n      }, {\n        name: \"API接口\",\n        value: 60\n      }, {\n        name: \"安全问题\",\n        value: 55\n      }, {\n        name: \"性能优化\",\n        value: 50\n      }, {\n        name: \"版本更新\",\n        value: 45\n      }, {\n        name: \"团队协作\",\n        value: 40\n      }, {\n        name: \"问题修复\",\n        value: 38\n      }, {\n        name: \"前端开发\",\n        value: 35\n      }, {\n        name: \"部署方案\",\n        value: 32\n      }, {\n        name: \"技术文档\",\n        value: 30\n      }, {\n        name: \"后端开发\",\n        value: 28\n      }, {\n        name: \"人员安排\",\n        value: 25\n      }, {\n        name: \"薪资调整\",\n        value: 23\n      }, {\n        name: \"服务器\",\n        value: 22\n      }, {\n        name: \"客户需求\",\n        value: 20\n      }, {\n        name: \"资源分配\",\n        value: 18\n      }, {\n        name: \"产品发布\",\n        value: 15\n      }, {\n        name: \"技术选型\",\n        value: 13\n      }, {\n        name: \"机密文件\",\n        value: 12\n      }, {\n        name: \"源代码\",\n        value: 12\n      }, {\n        name: \"商业计划\",\n        value: 11\n      }, {\n        name: \"财务报表\",\n        value: 10\n      }, {\n        name: \"工作安排\",\n        value: 9\n      }, {\n        name: \"外部合作\",\n        value: 8\n      }, {\n        name: \"人员调动\",\n        value: 7\n      }, {\n        name: \"竞品分析\",\n        value: 6\n      }, {\n        name: \"市场策略\",\n        value: 5\n      }];\n\n      // 构建异常高频词检测\n      let abnormalWords = [];\n      data.forEach(item => {\n        if ((item.name.includes(\"机密\") || item.name.includes(\"源代码\") || item.name.includes(\"商业\") || item.name.includes(\"财务\")) && this.selectedEmployee === \"1103\") {\n          abnormalWords.push(item.name);\n        }\n      });\n      const option = {\n        title: {\n          text: \"员工邮件主题词云\",\n          left: \"center\",\n          top: 0,\n          textStyle: {\n            fontSize: 16\n          }\n        },\n        tooltip: {\n          show: true,\n          formatter: function (params) {\n            let result = `<div style=\"font-weight:bold\">${params.name}</div>`;\n            result += `频次: ${params.value}`;\n            if (abnormalWords.includes(params.name)) {\n              result += '<br/><span style=\"color:#F56C6C\">⚠️ 敏感词汇</span>';\n            }\n            return result;\n          },\n          backgroundColor: \"rgba(50,50,50,0.9)\",\n          textStyle: {\n            color: \"#fff\"\n          }\n        },\n        series: [{\n          type: \"wordCloud\",\n          shape: \"circle\",\n          keepAspect: false,\n          left: \"center\",\n          top: \"center\",\n          width: \"95%\",\n          height: \"95%\",\n          right: null,\n          bottom: null,\n          sizeRange: [12, 60],\n          rotationRange: [-45, 45],\n          rotationStep: 5,\n          gridSize: 8,\n          drawOutOfBound: false,\n          layoutAnimation: true,\n          textStyle: {\n            fontFamily: \"sans-serif\",\n            fontWeight: \"bold\",\n            color: function (params) {\n              // 根据词汇是否敏感设置不同颜色\n              if (abnormalWords.includes(params.name)) {\n                return \"#F56C6C\"; // 异常/敏感词为红色\n              }\n              // 正常词汇使用颜色渐变\n              return \"rgb(\" + Math.round(Math.random() * 80 + 60) + \",\" + Math.round(Math.random() * 100 + (params.dataIndex % 2 === 0 ? 50 : 120)) + \",\" + Math.round(Math.random() * 100 + 80) + \")\";\n            },\n            emphasis: {\n              shadowBlur: 10,\n              shadowColor: \"#333\"\n            }\n          },\n          data: data.map(item => {\n            return {\n              name: item.name,\n              value: item.value,\n              // 为敏感词增加视觉强调\n              textStyle: abnormalWords.includes(item.name) ? {\n                fontWeight: \"bolder\",\n                color: \"#F56C6C\",\n                shadowBlur: 10,\n                shadowColor: \"rgba(255, 0, 0, 0.3)\"\n              } : {}\n            };\n          })\n        }]\n      };\n      this.personEmailCloud.setOption(option);\n\n      // 点击事件处理\n      this.personEmailCloud.on(\"click\", params => {\n        if (abnormalWords.includes(params.name)) {\n          this.$notify({\n            title: \"敏感词汇警告\",\n            message: `检测到工号${this.selectedEmployee}在邮件中频繁使用敏感词\"${params.name}\"，疑似存在数据泄密风险`,\n            type: \"warning\",\n            duration: 5000\n          });\n        }\n      });\n    },\n    loadAbnormalActivities() {\n      // 根据不同员工加载不同的异常活动\n      this.abnormalActivities = [];\n      if (this.selectedEmployee === \"1103\") {\n        this.abnormalActivities = [{\n          type: \"danger\",\n          timestamp: \"2017-11-12 02:35\",\n          content: \"凌晨时段登录并下载大量产品设计文件(230MB)\"\n        }, {\n          type: \"danger\",\n          timestamp: \"2017-11-12 03:10\",\n          content: \"向外部邮箱发送大附件邮件\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-13 19:45\",\n          content: \"访问了公司代码仓库中的核心产品模块\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-14 22:30\",\n          content: \"与ID-1204有多次邮件往来，内容涉及产品技术细节\"\n        }];\n      } else if (this.selectedEmployee === \"1152\") {\n        this.abnormalActivities = [{\n          type: \"danger\",\n          timestamp: \"2017-11-13 20:14\",\n          content: \"尝试登录15个不同研发人员账户，成功3次\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-13 20:38\",\n          content: \"成功登录他人账户后访问代码仓库\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-14 21:05\",\n          content: \"使用非常规IP地址登录系统\"\n        }];\n      } else if (this.selectedEmployee === \"1388\") {\n        this.abnormalActivities = [{\n          type: \"warning\",\n          timestamp: \"2017-11-15 23:45\",\n          content: \"深夜办公，访问与工作职责无关的文件\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-16 00:00\",\n          content: \"连续5天出现相似的深夜工作模式\"\n        }, {\n          type: \"info\",\n          timestamp: \"2017-11-16 08:00\",\n          content: \"次日未打卡上班\"\n        }];\n      } else if (this.selectedEmployee === \"1307\") {\n        this.abnormalActivities = [{\n          type: \"danger\",\n          timestamp: \"2017-11-10 15:23\",\n          content: \"执行超过200次数据库查询，涉及产品核心数据表\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-11 16:40\",\n          content: \"查询模式显示系统性的数据收集行为\"\n        }];\n      } else if (this.selectedEmployee === \"1204\") {\n        this.abnormalActivities = [{\n          type: \"danger\",\n          timestamp: \"2017-11-22 19:08\",\n          content: \"工作站与5个未在公司白名单内的IP地址建立加密连接\"\n        }, {\n          type: \"danger\",\n          timestamp: \"2017-11-22 20:15\",\n          content: \"传输数据约320MB，流量特征与数据泄露模式匹配\"\n        }, {\n          type: \"warning\",\n          timestamp: \"2017-11-23 10:30\",\n          content: \"与ID-1103有频繁邮件往来\"\n        }];\n      } else {\n        // 无异常活动\n      }\n    }\n  }\n};","map":{"version":3,"names":["Papa","name","data","workTimeChart","webVisitChart","serverAccessChart","emailActivityChart","personEmailCloud","selectedDepartment","selectedEmployee","currentEmployee","analysisDate","showAnalysis","activeTab","hasAbnormalContent","employeeEmailData","allLoginData","departments","employees","employeeOptions","employeeDepartment","emailCount","loginCount","abnormalActivities","threatScore","threatAssessment","threatScoreClass","computed","employeeStats","stats","label","value","icon","color","trend","type","getEmailTrendType","getEmailTrendIcon","text","getEmailTrendText","length","mounted","window","addEventListener","handleResize","loadEmployeeList","beforeDestroy","removeEventListener","methods","fetchCsvData","filePath","$message","info","response","fetch","ok","error","status","statusText","console","csvText","Promise","resolve","reject","parse","header","skipEmptyLines","complete","results","log","errors","message","loginFilePath","uniqueUserIds","Set","map","user","filter","id","userId","department","position","ip","email","warning","resize","handleEmployeeChange","employeeId","resetCharts","find","e","emailFilePath","emailData","setEmployeeStats","initEmailActivityChart","initPersonEmailCloud","initServerAccessChart","loadAbnormalActivities","calculateThreatScore","selectedUserEmailPattern","isSelectedUserRoot","employeeEmails","fromMatch","from","toMatch","to","recipients","split","some","recipient","trim","employeeLogins","handleTabClick","tab","$notify","title","duration","score","assessment","getActivityColor","markActivity","index","marked","initWorkTimeChart","dispose","$echarts","init","document","getElementById","days","i","day","push","checkinData","checkoutData","normalCheckinData","normalCheckoutData","randomMin1","Math","floor","random","randomMin2","randomHour","randomMin","option","left","tooltip","trigger","axisPointer","backgroundColor","formatter","params","axisValue","result","forEach","param","marker","seriesName","legend","top","grid","right","bottom","containLabel","xAxis","boundaryGap","axisLabel","interval","rotate","yAxis","min","max","date","Date","hours","getHours","toString","padStart","minutes","getMinutes","series","lineStyle","setOption","initWebVisitChart","categories","normalData","employeeData","itemStyle","dates","accessData","markLine","textStyle","employeeMessages","dailyEmailCounts","emailDate","time","replace","Object","keys","sort","counts","stack","abnormalWords","item","includes","fontSize","show","shape","keepAspect","width","height","sizeRange","rotationRange","rotationStep","gridSize","drawOutOfBound","layoutAnimation","fontFamily","fontWeight","round","dataIndex","emphasis","shadowBlur","shadowColor","on","timestamp","content"],"sources":["src/views/Person.vue"],"sourcesContent":["<template>\n  <div class=\"person-view\">\n    <el-row>\n      <el-col :span=\"24\">\n        <el-card class=\"box-card\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span class=\"page-title\">内部威胁人员分析</span>\n            <el-tooltip\n              content=\"分析员工异常行为特征，识别潜在内部威胁人员\"\n              placement=\"top\"\n            >\n              <i class=\"el-icon-question\" style=\"margin-left: 10px\"></i>\n            </el-tooltip>\n            <el-select\n              v-model=\"selectedEmployee\"\n              placeholder=\"选择员工\"\n              style=\"float: right; width: 240px\"\n              @change=\"handleEmployeeChange\"\n            >\n              <el-option\n                v-for=\"item in employeeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n              >\n              </el-option>\n            </el-select>\n          </div>\n          <p class=\"section-description\" v-if=\"selectedEmployee\">\n            通过分析工号{{\n              selectedEmployee\n            }}的登录活动、邮件通信和服务器访问模式，识别可能的异常行为和威胁迹象。\n          </p>\n          <div v-if=\"!selectedEmployee\" class=\"empty-state\">\n            <i class=\"el-icon-user-solid empty-icon\"></i>\n            <p>请从下拉菜单选择一名员工进行分析</p>\n          </div>\n\n          <el-tabs\n            v-model=\"activeTab\"\n            @tab-click=\"handleTabClick\"\n            v-if=\"selectedEmployee\"\n          >\n            <el-tab-pane label=\"威胁概览\" name=\"overview\">\n              <el-row :gutter=\"20\">\n                <el-col\n                  :span=\"6\"\n                  v-for=\"(stat, index) in employeeStats\"\n                  :key=\"index\"\n                >\n                  <el-card shadow=\"hover\" class=\"stat-card\">\n                    <div class=\"stat-card-body\">\n                      <i\n                        :class=\"stat.icon + ' stat-icon'\"\n                        :style=\"{ color: stat.color }\"\n                      ></i>\n                      <div class=\"stat-info\">\n                        <div class=\"stat-label\">{{ stat.label }}</div>\n                        <div class=\"stat-value\">{{ stat.value }}</div>\n                        <div\n                          v-if=\"stat.trend\"\n                          class=\"stat-trend\"\n                          :class=\"stat.trend.type\"\n                        >\n                          <i :class=\"stat.trend.icon\"></i>\n                          {{ stat.trend.text }}\n                        </div>\n                      </div>\n                    </div>\n                  </el-card>\n                </el-col>\n              </el-row>\n\n              <el-divider content-position=\"center\">行为分析</el-divider>\n\n              <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n                <el-col :span=\"12\">\n                  <el-card shadow=\"hover\" class=\"chart-card\">\n                    <div slot=\"header\" class=\"clearfix\">\n                      <span>服务器访问模式</span>\n                    </div>\n                    <div class=\"chart-container\" id=\"serverAccessChart\"></div>\n                  </el-card>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-card shadow=\"hover\" class=\"chart-card\">\n                    <div slot=\"header\" class=\"clearfix\">\n                      <span>邮件通信活动</span>\n                    </div>\n                    <div class=\"chart-container\" id=\"emailActivityChart\"></div>\n                  </el-card>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"20\" style=\"margin-top: 20px\">\n                <el-col :span=\"24\">\n                  <el-card shadow=\"hover\" class=\"chart-card\">\n                    <div slot=\"header\" class=\"clearfix\">\n                      <span>邮件内容分析</span>\n                      <el-tag\n                        v-if=\"hasAbnormalContent\"\n                        type=\"danger\"\n                        size=\"mini\"\n                        effect=\"dark\"\n                        style=\"float: right\"\n                      >\n                        检测到敏感内容\n                      </el-tag>\n                    </div>\n                    <div\n                      class=\"chart-container\"\n                      id=\"personEmailCloud\"\n                      style=\"height: 420px\"\n                    ></div>\n                  </el-card>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <el-tab-pane label=\"异常活动\" name=\"abnormal\">\n              <div class=\"threat-score-container\" v-if=\"threatScore > 0\">\n                <div class=\"threat-score\" :class=\"threatScoreClass\">\n                  <div class=\"score-value\">{{ threatScore }}</div>\n                  <div class=\"score-label\">威胁评分</div>\n                </div>\n                <div class=\"threat-assessment\">\n                  <h3>威胁评估</h3>\n                  <p>{{ threatAssessment }}</p>\n                </div>\n              </div>\n\n              <div\n                v-if=\"abnormalActivities.length === 0\"\n                class=\"empty-activities\"\n              >\n                <i class=\"el-icon-circle-check\"></i>\n                <p>未检测到异常活动</p>\n              </div>\n\n              <el-timeline v-else>\n                <el-timeline-item\n                  v-for=\"(activity, index) in abnormalActivities\"\n                  :key=\"index\"\n                  :timestamp=\"activity.timestamp\"\n                  :type=\"activity.type\"\n                  :color=\"getActivityColor(activity.type)\"\n                  placement=\"top\"\n                >\n                  <el-card :body-style=\"{ padding: '15px' }\" shadow=\"hover\">\n                    <h4>{{ activity.content }}</h4>\n                    <p v-if=\"activity.details\" class=\"activity-details\">\n                      {{ activity.details }}\n                    </p>\n                    <div class=\"activity-actions\">\n                      <el-button\n                        type=\"text\"\n                        size=\"mini\"\n                        @click=\"markActivity(index)\"\n                      >\n                        标记为审查\n                      </el-button>\n                      <el-tag size=\"mini\" type=\"info\" v-if=\"activity.marked\">\n                        已标记\n                      </el-tag>\n                    </div>\n                  </el-card>\n                </el-timeline-item>\n              </el-timeline>\n            </el-tab-pane>\n          </el-tabs>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport Papa from \"papaparse\";\n\nexport default {\n  name: \"Person\",\n  data() {\n    return {\n      // 图表实例\n      workTimeChart: null,\n      webVisitChart: null,\n      serverAccessChart: null,\n      emailActivityChart: null,\n      personEmailCloud: null,\n\n      // 选择和过滤相关数据\n      selectedDepartment: \"研发1部\",\n      selectedEmployee: \"\",\n      currentEmployee: null,\n      analysisDate: \"2017-11-30\",\n      showAnalysis: false,\n      activeTab: \"overview\",\n      hasAbnormalContent: false,\n\n      // 从CSV加载的原始数据\n      employeeEmailData: [],\n      allLoginData: [], // 用于存储所有登录记录以提取员工列表\n\n      // 下拉选项数据 - 将被动态填充\n      departments: [\"研发1部\", \"研发2部\", \"研发3部\", \"人力资源部\", \"财务部\"], // 这个列表可能也需要回顾\n      employees: [], // 将从 login.csv 动态加载\n      employeeOptions: [], // 将从 login.csv 动态加载\n\n      // 统计数据\n      employeeDepartment: \"\", // 将从选定的 currentEmployee 更新\n      emailCount: 0,\n      loginCount: 0, // 将由login.csv数据更新\n\n      // 异常活动列表\n      abnormalActivities: [],\n      threatScore: 0,\n      threatAssessment: \"\",\n      threatScoreClass: \"normal\",\n    };\n  },\n  computed: {\n    employeeStats() {\n      if (!this.selectedEmployee) return [];\n\n      // 根据员工ID定制统计信息\n      const stats = [\n        {\n          label: \"员工ID\",\n          value: this.selectedEmployee,\n          icon: \"el-icon-user-solid\",\n          color: \"#409EFF\",\n        },\n        {\n          label: \"所属部门\",\n          value: this.employeeDepartment,\n          icon: \"el-icon-office-building\",\n          color: \"#67C23A\",\n        },\n        {\n          label: \"邮件数量\",\n          value: this.emailCount,\n          icon: \"el-icon-message\",\n          color: \"#E6A23C\",\n          trend: {\n            type: this.getEmailTrendType(),\n            icon: this.getEmailTrendIcon(),\n            text: this.getEmailTrendText(),\n          },\n        },\n        {\n          label: \"异常行为\",\n          value: this.abnormalActivities.length,\n          icon: \"el-icon-warning\",\n          color: this.abnormalActivities.length > 0 ? \"#F56C6C\" : \"#909399\",\n        },\n      ];\n\n      return stats;\n    },\n  },\n  mounted() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.loadEmployeeList(); // 组件挂载后加载员工列表\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  },\n  methods: {\n    async fetchCsvData(filePath) {\n      this.$message.info(`Fetching data from: ${filePath}`);\n      try {\n        const response = await fetch(filePath);\n        if (!response.ok) {\n          this.$message.error(\n            `Error fetching ${filePath}: ${response.status} ${response.statusText}`\n          );\n          console.error(\n            `Error fetching ${filePath}: ${response.status} ${response.statusText}`\n          );\n          return [];\n        }\n        const csvText = await response.text();\n        return new Promise((resolve, reject) => {\n          Papa.parse(csvText, {\n            header: true,\n            skipEmptyLines: true,\n            complete: (results) => {\n              console.log(\n                \"Fetched CSV Data for \" + filePath + \":\",\n                results.data\n              ); // DEBUG\n              if (results.errors && results.errors.length > 0) {\n                this.$message.error(\n                  `Error parsing CSV ${filePath}: ${results.errors[0].message}`\n                );\n                console.error(`Error parsing CSV ${filePath}:`, results.errors);\n                reject(results.errors);\n              } else {\n                resolve(results.data);\n              }\n            },\n            error: (error) => {\n              this.$message.error(\n                `PapaParse error for ${filePath}: ${error.message}`\n              );\n              console.error(`PapaParse error for ${filePath}:`, error);\n              reject(error);\n            },\n          });\n        });\n      } catch (error) {\n        this.$message.error(\n          `Exception fetching or parsing ${filePath}: ${error}`\n        );\n        console.error(`Exception fetching or parsing ${filePath}:`, error);\n        return [];\n      }\n    },\n    async loadEmployeeList() {\n      const loginFilePath = `/ITD-2018 Data Set/${this.analysisDate}/login.csv`;\n      this.allLoginData = await this.fetchCsvData(loginFilePath);\n      console.log(\"Login data in loadEmployeeList:\", this.allLoginData);\n\n      if (this.allLoginData && this.allLoginData.length > 0) {\n        const uniqueUserIds = [\n          ...new Set(this.allLoginData.map((log) => log.user)),\n        ].filter((id) => id);\n        console.log(\"Unique User IDs:\", uniqueUserIds);\n\n        this.employees = uniqueUserIds.map((userId) => ({\n          id: userId,\n          name: userId,\n          department: \"未知\",\n          position: \"未知\",\n          ip: \"未知\",\n          email: `${userId}@hightech.com`,\n        }));\n\n        this.employeeOptions = uniqueUserIds.map((userId) => ({\n          value: userId,\n          label: `工号 ${userId}`,\n        }));\n        console.log(\"Updated employeeOptions:\", this.employeeOptions);\n      } else {\n        // 使用 this.$message.warning 替换 this.$message.warn\n        this.$message.warning(\n          `未能从 ${loginFilePath} 加载到员工登录数据，员工列表为空。`\n        );\n        this.employees = [];\n        this.employeeOptions = [];\n      }\n    },\n    handleResize() {\n      this.workTimeChart && this.workTimeChart.resize();\n      this.webVisitChart && this.webVisitChart.resize();\n      this.serverAccessChart && this.serverAccessChart.resize();\n      this.emailActivityChart && this.emailActivityChart.resize();\n      this.personEmailCloud && this.personEmailCloud.resize();\n    },\n    async handleEmployeeChange(employeeId) {\n      if (!employeeId) {\n        this.currentEmployee = null;\n        this.showAnalysis = false;\n        this.resetCharts();\n        return;\n      }\n      this.selectedEmployee = employeeId; // 确保 selectedEmployee 被设置\n      this.currentEmployee =\n        this.employees.find((e) => e.id === employeeId) || null;\n\n      if (this.currentEmployee) {\n        this.employeeDepartment = this.currentEmployee.department || \"未知\";\n      } else {\n        this.employeeDepartment = \"未知\"; // 如果找不到员工信息，也设为未知\n      }\n      this.showAnalysis = true;\n\n      // 加载该员工的邮件数据\n      const emailFilePath = `/ITD-2018 Data Set/${this.analysisDate}/email.csv`;\n      try {\n        const emailData = await this.fetchCsvData(emailFilePath);\n        this.employeeEmailData = emailData; // 存储原始邮件数据\n        console.log(\n          \"Employee Email Data after fetch in handleEmployeeChange:\",\n          this.employeeEmailData\n        ); // DEBUG\n\n        // 更新统计数据和图表\n        this.setEmployeeStats(); // 更新统计卡片\n        this.initEmailActivityChart(); // 更新邮件活动图\n        this.initPersonEmailCloud(); // 更新邮件词云\n        this.initServerAccessChart(); // 取消注释以显示服务器访问图表\n        // this.checkAbnormalContent(); // 暂时注释，后续处理\n        this.loadAbnormalActivities(); // 更正: 调用已存在的 loadAbnormalActivities\n        this.calculateThreatScore();\n      } catch (error) {\n        this.$message.error(\"处理员工数据时出错: \" + error);\n        console.error(\n          \"Error processing employee data in handleEmployeeChange:\",\n          error\n        );\n        this.resetCharts(); // 出错时重置图表\n      }\n    },\n    resetCharts() {\n      this.employeeEmailData = [];\n      this.abnormalActivities = [];\n      this.threatScore = 0;\n      this.threatAssessment = \"\";\n      this.threatScoreClass = \"normal\";\n      this.initEmailActivityChart();\n      this.initPersonEmailCloud();\n    },\n    setEmployeeStats() {\n      if (!this.selectedEmployee || !this.employeeEmailData) {\n        this.emailCount = 0;\n        // 其他统计数据也应在此处重置或设为默认值\n        return;\n      }\n      console.log(\n        \"setEmployeeStats - employeeEmailData:\",\n        this.employeeEmailData,\n        \"selectedEmployee:\",\n        this.selectedEmployee\n      ); // DEBUG\n\n      const selectedUserEmailPattern = `${this.selectedEmployee}@hightech.com`;\n      const isSelectedUserRoot = this.selectedEmployee === \"root\"; // 特殊处理root\n\n      const employeeEmails = this.employeeEmailData.filter((email) => {\n        if (!email || !this.selectedEmployee) return false;\n\n        const fromMatch = isSelectedUserRoot\n          ? email.from === this.selectedEmployee\n          : email.from === selectedUserEmailPattern;\n\n        let toMatch = false;\n        if (email.to) {\n          const recipients = email.to.split(\";\");\n          toMatch = recipients.some((recipient) =>\n            isSelectedUserRoot\n              ? recipient.trim() === this.selectedEmployee\n              : recipient.trim() === selectedUserEmailPattern\n          );\n        }\n        return fromMatch || toMatch;\n      });\n\n      console.log(\n        \"setEmployeeStats - filtered employeeEmails:\",\n        employeeEmails\n      ); // DEBUG\n\n      this.emailCount = employeeEmails.length;\n\n      // 更新登录次数等其他统计信息 (如果数据已加载)\n      if (this.allLoginData.length > 0) {\n        const employeeLogins = this.allLoginData.filter(\n          (log) => log.user === this.selectedEmployee\n        );\n        this.loginCount = employeeLogins.length;\n      } else {\n        this.loginCount = 0;\n      }\n    },\n    handleTabClick(tab) {\n      // 标签切换逻辑\n      if (tab.name === \"abnormal\" && this.abnormalActivities.length > 0) {\n        this.$notify({\n          title: \"威胁提示\",\n          message: `工号${this.selectedEmployee}存在${this.abnormalActivities.length}项异常活动需要关注`,\n          type: \"warning\",\n          duration: 3000,\n        });\n      }\n    },\n    calculateThreatScore() {\n      if (!this.selectedEmployee) {\n        this.threatScore = 0;\n        return;\n      }\n\n      // 根据员工异常活动数量和类型计算威胁评分\n      let score = 0;\n      let assessment = \"\";\n\n      switch (this.selectedEmployee) {\n        case \"1103\":\n          score = 85;\n          assessment =\n            \"该员工存在多项高风险行为，包括非工作时间数据外发和敏感信息访问，威胁等级高。\";\n          break;\n        case \"1204\":\n          score = 78;\n          assessment =\n            \"该员工与外部IP地址有可疑加密通信，数据传输量异常，存在数据泄露风险。\";\n          break;\n        case \"1152\":\n          score = 65;\n          assessment =\n            \"该员工存在账户探测行为，尝试登录多个他人账户，可能试图获取未授权信息。\";\n          break;\n        case \"1307\":\n          score = 70;\n          assessment =\n            \"该员工执行大量非常规数据库查询，查询模式显示系统性数据收集行为。\";\n          break;\n        case \"1388\":\n          score = 55;\n          assessment =\n            \"该员工工作时间异常，多次深夜访问系统，但未发现明确数据泄露证据。\";\n          break;\n        default:\n          score = 0;\n          assessment = \"未发现明显异常行为。\";\n      }\n\n      this.threatScore = score;\n      this.threatAssessment = assessment;\n\n      // 设置评分样式\n      if (score >= 75) {\n        this.threatScoreClass = \"high-risk\";\n      } else if (score >= 50) {\n        this.threatScoreClass = \"medium-risk\";\n      } else if (score > 0) {\n        this.threatScoreClass = \"low-risk\";\n      } else {\n        this.threatScoreClass = \"no-risk\";\n      }\n    },\n    getEmailTrendType() {\n      if (\n        this.selectedEmployee === \"1103\" ||\n        this.selectedEmployee === \"1204\"\n      ) {\n        return \"higher\";\n      } else if (this.selectedEmployee === \"1388\") {\n        return \"lower\";\n      }\n      return \"normal\";\n    },\n    getEmailTrendIcon() {\n      const type = this.getEmailTrendType();\n      if (type === \"higher\") return \"el-icon-top\";\n      if (type === \"lower\") return \"el-icon-bottom\";\n      return \"el-icon-minus\";\n    },\n    getEmailTrendText() {\n      const type = this.getEmailTrendType();\n      if (type === \"higher\") return \"高于平均值\";\n      if (type === \"lower\") return \"低于平均值\";\n      return \"正常范围\";\n    },\n    getActivityColor(type) {\n      switch (type) {\n        case \"danger\":\n          return \"#F56C6C\";\n        case \"warning\":\n          return \"#E6A23C\";\n        case \"info\":\n          return \"#909399\";\n        default:\n          return \"#409EFF\";\n      }\n    },\n    markActivity(index) {\n      if (!this.abnormalActivities[index].marked) {\n        this.abnormalActivities[index].marked = true;\n        this.$notify({\n          title: \"标记成功\",\n          message: \"已将该异常活动标记为需要审查\",\n          type: \"success\",\n          duration: 2000,\n        });\n      }\n    },\n    initWorkTimeChart() {\n      if (this.workTimeChart) {\n        this.workTimeChart.dispose();\n      }\n      this.workTimeChart = this.$echarts.init(\n        document.getElementById(\"workTimeChart\")\n      );\n\n      const days = [];\n      for (let i = 1; i <= 30; i++) {\n        const day = i < 10 ? \"0\" + i : i;\n        days.push(\"2017-11-\" + day);\n      }\n\n      // 模拟上下班打卡时间数据\n      const checkinData = [];\n      const checkoutData = [];\n      const normalCheckinData = [];\n      const normalCheckoutData = [];\n\n      for (let i = 0; i < 30; i++) {\n        // 为特定员工设置数据模式\n        if (this.selectedEmployee === \"1103\") {\n          // 数据外发行为\n          if (i >= 10 && i <= 15) {\n            // 11-11到11-16的异常时间\n            checkinData.push(\"08:15\");\n            checkoutData.push(\"02:30\"); // 凌晨离开，异常行为\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          } else {\n            const randomMin1 = Math.floor(Math.random() * 30);\n            const randomMin2 = Math.floor(Math.random() * 60);\n            checkinData.push(\n              `08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`\n            );\n            checkoutData.push(\n              `18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`\n            );\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          }\n        } else if (this.selectedEmployee === \"1388\") {\n          // 异常行为模式\n          if (i >= 4 && i <= 19) {\n            // 11-5到11-20的异常时间\n            const randomHour = Math.floor(Math.random() * 3) + 23;\n            const randomMin = Math.floor(Math.random() * 60);\n\n            if (i % 2 === 0) {\n              checkinData.push(\"-\"); // 缺勤\n              checkoutData.push(\"-\");\n            } else {\n              checkinData.push(\"09:30\"); // 迟到\n              checkoutData.push(\n                `${randomHour}:${randomMin < 10 ? \"0\" + randomMin : randomMin}`\n              ); // 深夜\n            }\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          } else {\n            const randomMin1 = Math.floor(Math.random() * 30);\n            const randomMin2 = Math.floor(Math.random() * 60);\n            checkinData.push(\n              `08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`\n            );\n            checkoutData.push(\n              `18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`\n            );\n            normalCheckinData.push(\"08:00\");\n            normalCheckoutData.push(\"18:30\");\n          }\n        } else {\n          // 正常员工模式\n          const randomMin1 = Math.floor(Math.random() * 30);\n          const randomMin2 = Math.floor(Math.random() * 60);\n          checkinData.push(\n            `08:${randomMin1 < 10 ? \"0\" + randomMin1 : randomMin1}`\n          );\n          checkoutData.push(\n            `18:${randomMin2 < 10 ? \"0\" + randomMin2 : randomMin2}`\n          );\n          normalCheckinData.push(\"08:00\");\n          normalCheckoutData.push(\"18:30\");\n        }\n      }\n\n      const option = {\n        title: {\n          text: \"员工上下班时间分析\",\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n          formatter: function (params) {\n            const day = params[0].axisValue;\n            let result = day + \"<br/>\";\n            params.forEach((param) => {\n              const marker = param.marker;\n              const seriesName = param.seriesName;\n              const value = param.value;\n              result += marker + \" \" + seriesName + \": \" + value + \"<br/>\";\n            });\n            return result;\n          },\n        },\n        legend: {\n          data: [\n            \"上班打卡时间\",\n            \"下班打卡时间\",\n            \"部门平均上班时间\",\n            \"部门平均下班时间\",\n          ],\n          top: 30,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: days,\n          axisLabel: {\n            interval: 2,\n            rotate: 45,\n          },\n        },\n        yAxis: {\n          type: \"time\",\n          min: \"00:00\",\n          max: \"24:00\",\n          axisLabel: {\n            formatter: function (value) {\n              // 将小时值格式化为时间字符串\n              const date = new Date(value);\n              const hours = date.getHours().toString().padStart(2, \"0\");\n              const minutes = date.getMinutes().toString().padStart(2, \"0\");\n              return `${hours}:${minutes}`;\n            },\n          },\n        },\n        series: [\n          {\n            name: \"上班打卡时间\",\n            type: \"line\",\n            data: checkinData,\n          },\n          {\n            name: \"下班打卡时间\",\n            type: \"line\",\n            data: checkoutData,\n          },\n          {\n            name: \"部门平均上班时间\",\n            type: \"line\",\n            data: normalCheckinData,\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n          {\n            name: \"部门平均下班时间\",\n            type: \"line\",\n            data: normalCheckoutData,\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n        ],\n      };\n\n      this.workTimeChart.setOption(option);\n    },\n    initWebVisitChart() {\n      if (this.webVisitChart) {\n        this.webVisitChart.dispose();\n      }\n      this.webVisitChart = this.$echarts.init(\n        document.getElementById(\"webVisitChart\")\n      );\n\n      // 模拟网页访问数据\n      let categories = [\n        \"工作相关网站\",\n        \"技术社区\",\n        \"搜索引擎\",\n        \"新闻媒体\",\n        \"社交网站\",\n        \"购物网站\",\n        \"娱乐网站\",\n        \"其他\",\n      ];\n      let normalData = [65, 15, 10, 5, 3, 1, 1, 0];\n      let employeeData = [60, 15, 12, 6, 3, 2, 1, 1];\n\n      // 为特定员工设置异常访问模式\n      if (this.selectedEmployee === \"1103\") {\n        employeeData = [50, 10, 15, 5, 5, 2, 3, 10]; // 增加了\"其他\"类别的访问\n      } else if (this.selectedEmployee === \"1152\") {\n        employeeData = [45, 15, 20, 5, 5, 0, 0, 10]; // 增加了搜索引擎和其他类别的访问\n      }\n\n      const option = {\n        title: {\n          text: \"网页访问类别分布\",\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n          },\n        },\n        legend: {\n          data: [\"员工访问比例\", \"部门平均访问比例\"],\n          top: 30,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          data: categories,\n          axisLabel: {\n            interval: 0,\n            rotate: 30,\n          },\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"访问比例(%)\",\n        },\n        series: [\n          {\n            name: \"员工访问比例\",\n            type: \"bar\",\n            data: employeeData,\n            itemStyle: {\n              color: \"#409EFF\",\n            },\n          },\n          {\n            name: \"部门平均访问比例\",\n            type: \"bar\",\n            data: normalData,\n            itemStyle: {\n              color: \"#909399\",\n            },\n          },\n        ],\n      };\n\n      this.webVisitChart.setOption(option);\n    },\n    initServerAccessChart() {\n      if (this.serverAccessChart) {\n        this.serverAccessChart.dispose();\n      }\n      this.serverAccessChart = this.$echarts.init(\n        document.getElementById(\"serverAccessChart\")\n      );\n\n      const dates = [];\n      for (let i = 1; i <= 30; i++) {\n        const day = i < 10 ? \"0\" + i : i;\n        dates.push(`11-${day}`);\n      }\n\n      // 模拟服务器访问数据\n      const accessData = [];\n      const normalData = [];\n\n      for (let i = 0; i < 30; i++) {\n        // 为不同员工设置不同的访问模式\n        if (this.selectedEmployee === \"1307\") {\n          // 数据库异常查询员工\n          if (i >= 7 && i <= 11) {\n            // 11-8到11-12的异常访问\n            accessData.push(Math.floor(Math.random() * 50) + 150); // 非常高的访问量\n          } else {\n            accessData.push(Math.floor(Math.random() * 20) + 10);\n          }\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        } else if (this.selectedEmployee === \"1152\") {\n          // 账户探测员工\n          if (i >= 9 && i <= 14) {\n            // 11-10到11-15的异常访问\n            accessData.push(Math.floor(Math.random() * 30) + 40); // 较高的访问量\n          } else {\n            accessData.push(Math.floor(Math.random() * 15) + 10);\n          }\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        } else {\n          // 正常员工\n          accessData.push(Math.floor(Math.random() * 20) + 10);\n          normalData.push(Math.floor(Math.random() * 10) + 20);\n        }\n      }\n\n      const option = {\n        title: {\n          text: \"服务器访问频率\",\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n        },\n        legend: {\n          data: [\"员工访问次数\", \"部门平均访问次数\"],\n          top: 30,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: dates,\n          axisLabel: {\n            interval: 2,\n            rotate: 45,\n          },\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"访问次数\",\n        },\n        series: [\n          {\n            name: \"员工访问次数\",\n            type: \"line\",\n            data: accessData,\n            markLine: {\n              data: [\n                {\n                  type: \"average\",\n                  name: \"平均值\",\n                },\n              ],\n            },\n          },\n          {\n            name: \"部门平均访问次数\",\n            type: \"line\",\n            data: normalData,\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n        ],\n      };\n\n      this.serverAccessChart.setOption(option);\n    },\n    initEmailActivityChart() {\n      if (this.emailActivityChart) {\n        this.emailActivityChart.dispose();\n      }\n      this.emailActivityChart = this.$echarts.init(\n        document.getElementById(\"emailActivityChart\")\n      );\n      console.log(\n        \"initEmailActivityChart - employeeEmailData:\",\n        this.employeeEmailData,\n        \"selectedEmployee:\",\n        this.selectedEmployee\n      ); // DEBUG\n\n      if (\n        !this.selectedEmployee ||\n        !this.employeeEmailData ||\n        this.employeeEmailData.length === 0\n      ) {\n        this.emailActivityChart.setOption({\n          title: {\n            text: \"无邮件数据\",\n            left: \"center\",\n            top: \"center\",\n            textStyle: { color: \"#999\" },\n          },\n        });\n        return;\n      }\n\n      const selectedUserEmailPattern = `${this.selectedEmployee}@hightech.com`;\n      const isSelectedUserRoot = this.selectedEmployee === \"root\";\n\n      const employeeMessages = this.employeeEmailData.filter((email) => {\n        if (!email || !this.selectedEmployee) return false;\n\n        const fromMatch = isSelectedUserRoot\n          ? email.from === this.selectedEmployee\n          : email.from === selectedUserEmailPattern;\n\n        let toMatch = false;\n        if (email.to) {\n          const recipients = email.to.split(\";\");\n          toMatch = recipients.some((recipient) =>\n            isSelectedUserRoot\n              ? recipient.trim() === this.selectedEmployee\n              : recipient.trim() === selectedUserEmailPattern\n          );\n        }\n        return fromMatch || toMatch;\n      });\n\n      console.log(\n        \"initEmailActivityChart - filtered employeeMessages:\",\n        employeeMessages\n      ); // DEBUG\n\n      if (employeeMessages.length === 0) {\n        this.emailActivityChart.setOption({\n          title: {\n            text: \"该员工本日无邮件活动\",\n            left: \"center\",\n            top: \"center\",\n            textStyle: { color: \"#999\" },\n          },\n        });\n        return;\n      }\n\n      // 按日期聚合邮件数量\n      const dailyEmailCounts = {};\n      employeeMessages.forEach((email) => {\n        // 假设 email.date 的格式是 \"YYYY/MM/DD HH:MM:SS\" 或 \"YYYY/MM/DD\"\n        // 我们只需要日期部分 \"YYYY/MM/DD\"\n        const emailDate = email.time\n          ? email.time.split(\" \")[0].replace(/\\//g, \"-\")\n          : null; // 使用 email.time 并替换 / 为 -\n        if (emailDate) {\n          dailyEmailCounts[emailDate] = (dailyEmailCounts[emailDate] || 0) + 1;\n        }\n      });\n      console.log(\n        \"initEmailActivityChart - dailyEmailCounts:\",\n        dailyEmailCounts\n      ); // DEBUG\n\n      const dates = Object.keys(dailyEmailCounts).sort();\n      const counts = dates.map((date) => dailyEmailCounts[date]);\n      console.log(\n        \"initEmailActivityChart - dates for chart:\",\n        dates,\n        \"counts for chart:\",\n        counts\n      ); // DEBUG\n\n      const option = {\n        title: {\n          text: `工号 ${this.selectedEmployee} 邮件活动分析 (${this.analysisDate})`,\n          left: \"center\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#6a7985\",\n            },\n          },\n        },\n        legend: {\n          data: [\"发送邮件\", \"接收邮件\", \"部门平均发送\", \"部门平均接收\"],\n          top: 30,\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          top: 80,\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: dates, // 使用月份中的日期作为X轴\n          axisLabel: {\n            interval: 2,\n            rotate: 45,\n          },\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"邮件数量\",\n        },\n        series: [\n          {\n            name: \"发送邮件\",\n            type: \"line\",\n            stack: \"总量1\", // stack可以移除，除非确实要堆叠显示\n            data: counts,\n          },\n          {\n            name: \"接收邮件\",\n            type: \"line\",\n            stack: \"总量1\", // stack可以移除\n            data: counts,\n          },\n          {\n            name: \"部门平均发送\",\n            type: \"line\",\n            // stack: \"总量2\", // stack可以移除\n            data: [\n              3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n              3, 3, 3, 3, 3, 3, 3, 3,\n            ],\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n          {\n            name: \"部门平均接收\",\n            type: \"line\",\n            // stack: \"总量2\", // stack可以移除\n            data: [\n              7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n              7, 7, 7, 7, 7, 7, 7, 7,\n            ],\n            lineStyle: {\n              type: \"dashed\",\n            },\n          },\n        ],\n      };\n\n      this.emailActivityChart.setOption(option);\n    },\n    initPersonEmailCloud() {\n      if (this.personEmailCloud) {\n        this.personEmailCloud.dispose();\n      }\n      this.personEmailCloud = this.$echarts.init(\n        document.getElementById(\"personEmailCloud\")\n      );\n\n      // 模拟邮件主题词云数据\n      const data = [\n        { name: \"产品设计\", value: 150 },\n        { name: \"系统架构\", value: 120 },\n        { name: \"会议安排\", value: 100 },\n        { name: \"需求分析\", value: 90 },\n        { name: \"代码审核\", value: 85 },\n        { name: \"项目进度\", value: 80 },\n        { name: \"功能测试\", value: 75 },\n        { name: \"用户体验\", value: 70 },\n        { name: \"数据库\", value: 65 },\n        { name: \"API接口\", value: 60 },\n        { name: \"安全问题\", value: 55 },\n        { name: \"性能优化\", value: 50 },\n        { name: \"版本更新\", value: 45 },\n        { name: \"团队协作\", value: 40 },\n        { name: \"问题修复\", value: 38 },\n        { name: \"前端开发\", value: 35 },\n        { name: \"部署方案\", value: 32 },\n        { name: \"技术文档\", value: 30 },\n        { name: \"后端开发\", value: 28 },\n        { name: \"人员安排\", value: 25 },\n        { name: \"薪资调整\", value: 23 },\n        { name: \"服务器\", value: 22 },\n        { name: \"客户需求\", value: 20 },\n        { name: \"资源分配\", value: 18 },\n        { name: \"产品发布\", value: 15 },\n        { name: \"技术选型\", value: 13 },\n        { name: \"机密文件\", value: 12 },\n        { name: \"源代码\", value: 12 },\n        { name: \"商业计划\", value: 11 },\n        { name: \"财务报表\", value: 10 },\n        { name: \"工作安排\", value: 9 },\n        { name: \"外部合作\", value: 8 },\n        { name: \"人员调动\", value: 7 },\n        { name: \"竞品分析\", value: 6 },\n        { name: \"市场策略\", value: 5 },\n      ];\n\n      // 构建异常高频词检测\n      let abnormalWords = [];\n      data.forEach((item) => {\n        if (\n          (item.name.includes(\"机密\") ||\n            item.name.includes(\"源代码\") ||\n            item.name.includes(\"商业\") ||\n            item.name.includes(\"财务\")) &&\n          this.selectedEmployee === \"1103\"\n        ) {\n          abnormalWords.push(item.name);\n        }\n      });\n\n      const option = {\n        title: {\n          text: \"员工邮件主题词云\",\n          left: \"center\",\n          top: 0,\n          textStyle: {\n            fontSize: 16,\n          },\n        },\n        tooltip: {\n          show: true,\n          formatter: function (params) {\n            let result = `<div style=\"font-weight:bold\">${params.name}</div>`;\n            result += `频次: ${params.value}`;\n            if (abnormalWords.includes(params.name)) {\n              result += '<br/><span style=\"color:#F56C6C\">⚠️ 敏感词汇</span>';\n            }\n            return result;\n          },\n          backgroundColor: \"rgba(50,50,50,0.9)\",\n          textStyle: {\n            color: \"#fff\",\n          },\n        },\n        series: [\n          {\n            type: \"wordCloud\",\n            shape: \"circle\",\n            keepAspect: false,\n            left: \"center\",\n            top: \"center\",\n            width: \"95%\",\n            height: \"95%\",\n            right: null,\n            bottom: null,\n            sizeRange: [12, 60],\n            rotationRange: [-45, 45],\n            rotationStep: 5,\n            gridSize: 8,\n            drawOutOfBound: false,\n            layoutAnimation: true,\n            textStyle: {\n              fontFamily: \"sans-serif\",\n              fontWeight: \"bold\",\n              color: function (params) {\n                // 根据词汇是否敏感设置不同颜色\n                if (abnormalWords.includes(params.name)) {\n                  return \"#F56C6C\"; // 异常/敏感词为红色\n                }\n                // 正常词汇使用颜色渐变\n                return (\n                  \"rgb(\" +\n                  Math.round(Math.random() * 80 + 60) +\n                  \",\" +\n                  Math.round(\n                    Math.random() * 100 +\n                      (params.dataIndex % 2 === 0 ? 50 : 120)\n                  ) +\n                  \",\" +\n                  Math.round(Math.random() * 100 + 80) +\n                  \")\"\n                );\n              },\n              emphasis: {\n                shadowBlur: 10,\n                shadowColor: \"#333\",\n              },\n            },\n            data: data.map((item) => {\n              return {\n                name: item.name,\n                value: item.value,\n                // 为敏感词增加视觉强调\n                textStyle: abnormalWords.includes(item.name)\n                  ? {\n                      fontWeight: \"bolder\",\n                      color: \"#F56C6C\",\n                      shadowBlur: 10,\n                      shadowColor: \"rgba(255, 0, 0, 0.3)\",\n                    }\n                  : {},\n              };\n            }),\n          },\n        ],\n      };\n\n      this.personEmailCloud.setOption(option);\n\n      // 点击事件处理\n      this.personEmailCloud.on(\"click\", (params) => {\n        if (abnormalWords.includes(params.name)) {\n          this.$notify({\n            title: \"敏感词汇警告\",\n            message: `检测到工号${this.selectedEmployee}在邮件中频繁使用敏感词\"${params.name}\"，疑似存在数据泄密风险`,\n            type: \"warning\",\n            duration: 5000,\n          });\n        }\n      });\n    },\n    loadAbnormalActivities() {\n      // 根据不同员工加载不同的异常活动\n      this.abnormalActivities = [];\n\n      if (this.selectedEmployee === \"1103\") {\n        this.abnormalActivities = [\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-12 02:35\",\n            content: \"凌晨时段登录并下载大量产品设计文件(230MB)\",\n          },\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-12 03:10\",\n            content: \"向外部邮箱发送大附件邮件\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-13 19:45\",\n            content: \"访问了公司代码仓库中的核心产品模块\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-14 22:30\",\n            content: \"与ID-1204有多次邮件往来，内容涉及产品技术细节\",\n          },\n        ];\n      } else if (this.selectedEmployee === \"1152\") {\n        this.abnormalActivities = [\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-13 20:14\",\n            content: \"尝试登录15个不同研发人员账户，成功3次\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-13 20:38\",\n            content: \"成功登录他人账户后访问代码仓库\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-14 21:05\",\n            content: \"使用非常规IP地址登录系统\",\n          },\n        ];\n      } else if (this.selectedEmployee === \"1388\") {\n        this.abnormalActivities = [\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-15 23:45\",\n            content: \"深夜办公，访问与工作职责无关的文件\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-16 00:00\",\n            content: \"连续5天出现相似的深夜工作模式\",\n          },\n          {\n            type: \"info\",\n            timestamp: \"2017-11-16 08:00\",\n            content: \"次日未打卡上班\",\n          },\n        ];\n      } else if (this.selectedEmployee === \"1307\") {\n        this.abnormalActivities = [\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-10 15:23\",\n            content: \"执行超过200次数据库查询，涉及产品核心数据表\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-11 16:40\",\n            content: \"查询模式显示系统性的数据收集行为\",\n          },\n        ];\n      } else if (this.selectedEmployee === \"1204\") {\n        this.abnormalActivities = [\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-22 19:08\",\n            content: \"工作站与5个未在公司白名单内的IP地址建立加密连接\",\n          },\n          {\n            type: \"danger\",\n            timestamp: \"2017-11-22 20:15\",\n            content: \"传输数据约320MB，流量特征与数据泄露模式匹配\",\n          },\n          {\n            type: \"warning\",\n            timestamp: \"2017-11-23 10:30\",\n            content: \"与ID-1103有频繁邮件往来\",\n          },\n        ];\n      } else {\n        // 无异常活动\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.box-card {\n  margin-bottom: 20px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.page-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.section-description {\n  color: #606266;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 60px 0;\n  color: #909399;\n}\n\n.empty-icon {\n  font-size: 64px;\n  margin-bottom: 20px;\n  color: #dcdfe6;\n}\n\n.stat-card {\n  background-color: #f5f7fa;\n  border-radius: 8px;\n  padding: 15px;\n  text-align: center;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n  height: 100%;\n  transition: all 0.3s;\n  margin-bottom: 20px;\n}\n\n.stat-card:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.stat-card-body {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.stat-icon {\n  font-size: 32px;\n  margin-right: 15px;\n}\n\n.stat-info {\n  text-align: left;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #909399;\n  margin-bottom: 5px;\n}\n\n.stat-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.stat-trend {\n  font-size: 12px;\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n}\n\n.stat-trend i {\n  margin-right: 4px;\n}\n\n.higher {\n  color: #f56c6c;\n}\n\n.lower {\n  color: #67c23a;\n}\n\n.normal {\n  color: #909399;\n}\n\n.chart-container {\n  height: 300px;\n}\n\n.chart-card {\n  margin-bottom: 20px;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.chart-card .el-card__header {\n  padding: 12px 20px;\n  border-bottom: 1px solid #ebeef5;\n  background-color: #fafafa;\n}\n\n.activity-details {\n  margin-top: 10px;\n  font-size: 12px;\n  color: #606266;\n}\n\n.activity-actions {\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.empty-activities {\n  text-align: center;\n  padding: 40px 0;\n  color: #67c23a;\n}\n\n.empty-activities i {\n  font-size: 48px;\n  margin-bottom: 15px;\n}\n\n.threat-score-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 30px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  border-left: 4px solid #e6a23c;\n}\n\n.threat-score {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-right: 20px;\n  color: white;\n}\n\n.high-risk {\n  background-color: #f56c6c;\n  box-shadow: 0 0 15px rgba(245, 108, 108, 0.4);\n}\n\n.medium-risk {\n  background-color: #e6a23c;\n  box-shadow: 0 0 15px rgba(230, 162, 60, 0.4);\n}\n\n.low-risk {\n  background-color: #909399;\n  box-shadow: 0 0 15px rgba(144, 147, 153, 0.4);\n}\n\n.no-risk {\n  background-color: #67c23a;\n  box-shadow: 0 0 15px rgba(103, 194, 58, 0.4);\n}\n\n.score-value {\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.score-label {\n  font-size: 12px;\n  opacity: 0.8;\n}\n\n.threat-assessment {\n  flex: 1;\n}\n\n.threat-assessment h3 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  color: #303133;\n}\n\n.threat-assessment p {\n  margin: 0;\n  color: #606266;\n  line-height: 1.5;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}